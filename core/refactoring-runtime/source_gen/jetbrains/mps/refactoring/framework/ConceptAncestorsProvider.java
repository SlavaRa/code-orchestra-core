package jetbrains.mps.refactoring.framework;

/*Generated by MPS */

import java.util.Set;
import jetbrains.mps.smodel.SNode;
import java.util.HashSet;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ConceptAncestorsProvider implements IDescendantsProvider {
  public ConceptAncestorsProvider() {
  }

  public Set<SNode> getDescendants(SNode node) {
    Set<SNode> result = new HashSet<SNode>();
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
      SNode conceptDeclaration = SNodeOperations.cast(node, "jetbrains.mps.lang.structure.structure.ConceptDeclaration");
      SNode parent = SLinkOperations.getTarget(conceptDeclaration, "extends", false);
      if ((parent != null)) {
        result.add(parent);
      }
      for (SNode interfaceConceptReference : SLinkOperations.getTargets(conceptDeclaration, "implements", true)) {
        result.add(SLinkOperations.getTarget(interfaceConceptReference, "intfc", false));
      }
    }
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
      SNode interfaceConceptDeclaration = SNodeOperations.cast(node, "jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
      for (SNode interfaceConceptReference : SLinkOperations.getTargets(interfaceConceptDeclaration, "extends", true)) {
        result.add(SLinkOperations.getTarget(interfaceConceptReference, "intfc", false));
      }
    }
    return result;
  }
}
