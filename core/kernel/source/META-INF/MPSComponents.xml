<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<components xmlns:xi="http://www.w3.org/2001/XInclude"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.w3.org/2001/XInclude
   http://www.w3.org/2001/XInclude.xsd">

  <application-components>
    <component>
      <implementation-class>jetbrains.mps.ide.MPSWorkbench</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.openapi.util.registry.RegistryState</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.project.impl.ProjectStoreClassProvider</interface-class>
      <implementation-class>com.intellij.openapi.components.impl.stores.PlatformProjectStoreClassProvider
      </implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.openapi.project.ProjectManager</interface-class>
      <implementation-class>com.intellij.openapi.project.impl.ProjectManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.psi.statistics.StatisticsManager</interface-class>
      <implementation-class>com.intellij.psi.statistics.impl.StatisticsManagerImpl</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.find.FindSettings</interface-class>
      <implementation-class>com.intellij.find.impl.FindSettingsImpl</implementation-class>
    </component>
    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndex</implementation-class>
    </component>
    <component>
      <implementation-class>jetbrains.mps.ide.generator.TransientSwapOwnerComponent</implementation-class>
    </component>
    <component>
      <implementation-class>codeOrchestra.rgs.server.RGSServerComponent</implementation-class>
    </component>
    <!-- RE-3675 -->
    <component>
      <implementation-class>codeOrchestra.generator.listener.BuildBroadcaster</implementation-class>
    </component>
  </application-components>

  <project-components>
    <component>
      <implementation-class>com.intellij.openapi.components.impl.ServiceManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>jetbrains.mps.project.MPSProjectVersion</implementation-class>
    </component>
    <component>
      <interface-class>com.intellij.codeInsight.highlighting.HighlightManager</interface-class>
      <implementation-class>com.intellij.codeInsight.highlighting.HighlightManagerImpl</implementation-class>
      <skipForDummyProject/>
    </component>
    <component>
      <implementation-class>jetbrains.mps.codeStyle.CodeStyleSettings</implementation-class>
    </component>
    <component>
      <implementation-class>jetbrains.mps.ide.codeStyle.CodeStyleSettingsConfigurable</implementation-class>
    </component>
    <!-- External logger -->
    <component>
      <implementation-class>codeOrchestra.actionscript.logging.LoggerComponent</implementation-class>
    </component>
    <!-- RE-1756  -->
    <!-- Assets Manager -->
    <component>
      <implementation-class>codeOrchestra.actionScript.assets.AssetsManager</implementation-class>
    </component>
    <!-- RE-3484 -->
    <component>
      <implementation-class>codeOrchestra.environment.view.EnvironmentLibraryManager</implementation-class>
    </component>
    <component>
      <implementation-class>codeOrchestra.rgs.client.appimpl.ApplicationRGSClient</implementation-class>
    </component>
    <component>
      <implementation-class>codeOrchestra.rgs.client.settings.RGSClientSettings</implementation-class>
    </component>
    <component>
      <implementation-class>codeOrchestra.actionscript.liveCoding.LiveCodingManager</implementation-class>
    </component>
    <!-- RE-4272 -->
    <component>
      <implementation-class>codeOrchestra.actionScript.compiler.report.CompilerMessagesComponent</implementation-class>
    </component>
    <!-- CO-4687 -->
    <component>
      <implementation-class>codeOrchestra.actionScript.flexsdk.FlexSDKValidatorComponent</implementation-class>
    </component>
  </project-components>

  <xi:include href="/componentSets/Platform.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/UICore.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/WindowManagement.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/Editor.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/VCS.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/componentSets/Execution.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/META-INF/MPSCore.xml" xpointer="xpointer(/components/*)"/>
  <xi:include href="/META-INF/MPSDebuggerComponents.xml" xpointer="xpointer(/components/*)"/>

  <application-components>
    <component>
      <interface-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.text.TextEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.util.ModuleRendererFactory</interface-class>
      <implementation-class>com.intellij.ide.util.PlatformModuleRendererFactory</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.platform.PlatformProjectStarter</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.MessagesPoolClearer</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.contributor.BootstrapLibContributor</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.contributor.PluginLibContributor</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.LibraryManager</implementation-class>
    </component>

    <!-- RE-1539 -->
    <!-- Flex URI manager -->
    <component>
      <implementation-class>codeOrchestra.actionscript.flex.settings.FlexURIs</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.editor.runtime.impl.LanguagesKeymapManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.FastFindUsagesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.CustomizationSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.ModelValidationSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.intentions.IntentionsManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.datatransfer.PasteWrappersManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.lang.dataFlow.DataFlowManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.FindersManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.UsagesViewTracker</implementation-class>
    </component>

    <!-- RE-2495 -->
    <component>
        <implementation-class>codeOrchestra.actionScript.errorHandling.EditorErrorHandlingSettings</implementation-class>
    </component>

    <!-- CO-3875 -->
    <component>
        <implementation-class>codeOrchestra.actionScript.parser.ASParserSettings</implementation-class>
    </component>

    <component>
        <implementation-class>codeOrchestra.actionscript.modulemaker.view.FlexSDKSettings</implementation-class>
    </component>

    <!-- CO-5098 -->
    <component>
      <implementation-class>codeOrchestra.actionscript.liveCoding.settings.LiveCodingSettings</implementation-class>
    </component>

    <!-- RE-1611 -->
    <component>
        <implementation-class>codeOrchestra.actionscript.wizards.settings.ASNewProjectRootSettings</implementation-class>
     </component>

    <!-- RE-1320 -->
    <component>
        <implementation-class>codeOrchestra.actionscript.logging.settings.LoggingSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.messages.NavigationManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.dialogs.DialogDimensionsSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.progress.TaskProgressSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.CaretBlinker</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.MPSAdapter</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.EditorSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.editor.runtime.impl.EditorsFinderManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.intentions.IntentionsPreferencesPage</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.nodesFs.MPSNodesVirtualFileSystem</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.languagesFs.MPSLanguagesVirtualFileSystem
      </implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSFileNodeEditorProvider</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSLanguageEditorProvider</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.ide.RecentProjectsManagerBase</interface-class>
      <implementation-class>jetbrains.mps.workbench.recent.RecentMPSProjectsManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.fileTypes.MPSFileTypesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.plugins.applicationplugins.ApplicationPluginManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.plugins.PluginReloader</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.blame.dialog.BlameDialogComponent</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.smodel.LanguageHierarchyCache</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.generator.GenerationSettings</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.generator.index.IndexBasedModelDigest</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.undo.OnReloadingUndoCleaner</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.tooltips.MPSToolTipManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.project.listener.AbstractModuleWorkbenchAdjuster</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.actions.goTo.index.StubsNodeDescriptorsCache</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.save.ModelsSaver</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.generator.GeneratorCacheComponent</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.make.GeneratedTextPreviewEditorProvider</implementation-class>
    </component>

  </application-components>

  <project-components>
    <component>
      <implementation-class>jetbrains.mps.workbench.structureview.StructureViewBuilderFactory</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.projectPane.favorites.MPSFavoritesManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.dialogs.project.properties.project.ProjectPropertiesPrefsPage
      </implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.fileEditor.FileEditorManager</interface-class>
      <implementation-class>com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl</implementation-class>
      <headless-implementation-class>jetbrains.mps.MPSTestEditorManagerImpl</headless-implementation-class>
      <option name="workspace" value="true"/>
      <skipForDummyProject/>
    </component>

    <component>
      <interface-class>com.intellij.packageDependencies.DependencyValidationManager</interface-class>
      <implementation-class>com.intellij.packageDependencies.DependencyValidationManagerImpl
      </implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.search.scope.packageSet.NamedScopeManager</interface-class>
      <implementation-class>com.intellij.psi.search.scope.packageSet.NamedScopeManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.PsiManager</interface-class>
      <implementation-class>jetbrains.mps.workbench.psi.NullPsiManager</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.psi.PsiDocumentManager</interface-class>
      <implementation-class>jetbrains.mps.workbench.psi.NullPsiDocumentManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.view.optionseditor.DefaultSearchOptionsComponent
      </implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.view.UsagesViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.messages.MessagesViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>codeOrchestra.actionScript.compiler.fcsh.console.FCSHConsoleTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.output.OutputViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.classpath.ClassPathViewerTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.hierarchy.HierarchyViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.bookmark.BookmarksTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.refactoring.RefactoringView</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>codeOrchestra.actionscript.hierarchy.ASLanguageHierarchyViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>codeOrchestra.actionscript.make.ASModuleMakeTypeManager</implementation-class>
      <skipForDummyProject/>
    </component>

    <!-- RE-3026 -->
    <component>
      <implementation-class>codeOrchestra.generator.CodeOrchestraGenerateManager</implementation-class>
      <skipForDummyProject/>
    </component>

    <!-- RE-3270 -->
    <component>
      <implementation-class>codeOrchestra.actionScript.compiler.fcsh.FCSHManager</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.hierarchy.BaseLanguageHierarchyViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.library.ProjectLibraryManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSEditorOpener</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.bookmark.BookmarkManager</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.vfs.DirectoryIndexExcludeUpdater</implementation-class>
    </component>

    <!-- typesystem -->

    <component>
      <implementation-class>jetbrains.mps.typesystem.uiActions.SupertypesViewTool</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.typesystem.uiActions.TypecheckerStateView</implementation-class>
      <skipForDummyProject/>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.Highlighter</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.EditorManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.plugins.projectplugins.ProjectPluginManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.execution.impl.configurations.RunConfigurationsStateManager
      </implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.editors.MPSEditorWarningsManager</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.script.plugin.migrationtool.MigrationScriptsTool
      </implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.dependency.DependencyViewer</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.cellExplorer.CellExplorerView</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.workbench.search.SearchHistoryComponent</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.nodeEditor.InspectorTool</implementation-class>
    </component>

    <component>
      <implementation-class>com.intellij.util.indexing.FileBasedIndexProjectHandler</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.roots.impl.DirectoryIndex</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.DirectoryIndexImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.roots.ProjectRootManager</interface-class>
      <implementation-class>com.intellij.openapi.roots.impl.ProjectRootManagerImpl</implementation-class>
    </component>

    <component>
      <interface-class>com.intellij.openapi.module.ModuleManager</interface-class>
      <implementation-class>com.intellij.openapi.module.impl.ModuleManagerImpl</implementation-class>
    </component>

    <component>
      <implementation-class>jetbrains.mps.ide.findusages.caches.MPSFileBasedIndexProjectHandler</implementation-class>
    </component>

    <!-- language development workbench -->

    <component>
      <implementation-class>jetbrains.mps.ide.make.StartupModuleMaker</implementation-class>
    </component>

    <component>
      <implementation-class>codeOrchestra.actionscript.view.dialogs.library.util.GitUpdateChecker</implementation-class>
    </component>
  </project-components>

</components>
