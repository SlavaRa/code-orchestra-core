package jetbrains.mps.smodel.search;

/*Generated by MPS */

import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.util.Condition;
import jetbrains.mps.smodel.INodeAdapter;

public class UndefinedSearchScope implements ISearchScope {
  public UndefinedSearchScope() {
  }

  @NotNull
  public List<SNode> getNodes(Condition<SNode> condition) {
    throw new UnsupportedOperationException();
  }

  @NotNull
  public List<INodeAdapter> getAdapters(Condition<INodeAdapter> condition) {
    throw new UnsupportedOperationException();
  }

  @NotNull
  public <T extends INodeAdapter> List<T> getAdapters(Class<T> adapterClass) {
    throw new UnsupportedOperationException();
  }

  public boolean isInScope(SNode node) {
    throw new UnsupportedOperationException();
  }

  @NotNull
  public List<SNode> getNodes() {
    throw new UnsupportedOperationException();
  }

  public IReferenceInfoResolver getReferenceInfoResolver(SNode referenceNode, SNode targetConcept) {
    throw new UnsupportedOperationException();
  }
}
