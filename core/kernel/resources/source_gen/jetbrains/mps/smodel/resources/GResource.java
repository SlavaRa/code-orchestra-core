package jetbrains.mps.smodel.resources;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.generator.GenerationStatus;
import jetbrains.mps.make.resources.IResource;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;

public class GResource extends MultiTuple._4<IModule, SModelDescriptor, Iterable<SModelDescriptor>, GenerationStatus> implements IResource, IGResource {
  public GResource() {
    super();
  }

  public GResource(IModule module, SModelDescriptor model, Iterable<SModelDescriptor> retainedModels, GenerationStatus status) {
    super(module, model, retainedModels, status);
  }

  public IModule module(IModule value) {
    return super._0(value);
  }

  public SModelDescriptor model(SModelDescriptor value) {
    return super._1(value);
  }

  public Iterable<SModelDescriptor> retainedModels(Iterable<SModelDescriptor> value) {
    return super._2(value);
  }

  public GenerationStatus status(GenerationStatus value) {
    return super._3(value);
  }

  public IModule module() {
    return super._0();
  }

  public SModelDescriptor model() {
    return super._1();
  }

  public Iterable<SModelDescriptor> retainedModels() {
    return super._2();
  }

  public GenerationStatus status() {
    return super._3();
  }

  @SuppressWarnings(value = "unchecked")
  public GResource assignFrom(Tuples._4<IModule, SModelDescriptor, Iterable<SModelDescriptor>, GenerationStatus> from) {
    return (GResource) super.assign(from);
  }

  public String describe() {
    return null;
  }
}
