package jetbrains.mps.generator.impl;

/*Generated by MPS */

import com.intellij.openapi.components.ApplicationComponent;
import org.jetbrains.annotations.NonNls;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.GlobalSModelEventsManager;
import jetbrains.mps.smodel.SModelAdapter;
import jetbrains.mps.smodel.event.SModelRootEvent;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModelStereotype;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.BootstrapLanguages;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class RootTemplateAnnotator implements ApplicationComponent {
  public RootTemplateAnnotator() {
  }

  @NonNls
  @NotNull
  public String getComponentName() {
    return "Root Template Annotator";
  }

  public void initComponent() {
    GlobalSModelEventsManager.getInstance().addGlobalModelListener(new SModelAdapter() {
      public void rootAdded(SModelRootEvent event) {
        SNode node = event.getRoot();
        if (SModelStereotype.isGeneratorModel(SNodeOperations.getModel(node))) {
          if (node.getNodeLanguage() != BootstrapLanguages.generatorLanguage() && node.getNodeLanguage() != BootstrapLanguages.generatorParametersLanguage()) {
            if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) == null)) {
              AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation")), SModelOperations.createNewNode(SNodeOperations.getModel(node), "jetbrains.mps.lang.generator.structure.RootTemplateAnnotation", null));
            }
          }
        }
      }
    });
  }

  public void disposeComponent() {
  }
}
