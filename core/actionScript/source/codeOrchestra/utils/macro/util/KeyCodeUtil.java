package codeOrchestra.utils.macro.util;

import java.awt.event.KeyEvent;
import java.util.Map;
import java.util.TreeMap;

/**
 * @author Alexander Eliseyev
 */
public class KeyCodeUtil {

  public static final KeyCodeUtil INSTANCE = new KeyCodeUtil();

  private Map<Integer, String> keyCodesMap = new TreeMap<Integer, String>();

  public static boolean isModifier(KeyEvent keyEvent) {
    int keyCode = keyEvent.getKeyCode();
    return keyCode == KeyEvent.VK_ALT || keyCode == KeyEvent.VK_CONTROL || keyCode == KeyEvent.VK_SHIFT || keyCode == KeyEvent.VK_META;
  }

  public String getKeyCodeName(int keyCode) {
    return keyCodesMap.get(keyCode);
  }

  private KeyCodeUtil() {
    keyCodesMap.put(400, "KEY_FIRST");
    keyCodesMap.put(402, "KEY_LAST");
    keyCodesMap.put(2, "KEY_LOCATION_LEFT");
    keyCodesMap.put(4, "KEY_LOCATION_NUMPAD");
    keyCodesMap.put(3, "KEY_LOCATION_RIGHT");
    keyCodesMap.put(1, "KEY_LOCATION_STANDARD");
    keyCodesMap.put(0, "KEY_LOCATION_UNKNOWN");
    keyCodesMap.put(401, "KEY_PRESSED");
    keyCodesMap.put(402, "KEY_RELEASED");
    keyCodesMap.put(400, "KEY_TYPED");
    keyCodesMap.put(48, "0");
    keyCodesMap.put(49, "1");
    keyCodesMap.put(50, "2");
    keyCodesMap.put(51, "3");
    keyCodesMap.put(52, "4");
    keyCodesMap.put(53, "5");
    keyCodesMap.put(54, "6");
    keyCodesMap.put(55, "7");
    keyCodesMap.put(56, "8");
    keyCodesMap.put(57, "9");
    keyCodesMap.put(65, "A");
    keyCodesMap.put(30, "ACCEPT");
    keyCodesMap.put(107, "ADD");
    keyCodesMap.put(65481, "AGAIN");
    keyCodesMap.put(256, "ALL_CANDIDATES");
    keyCodesMap.put(240, "ALPHANUMERIC");
    keyCodesMap.put(18, "ALT");
    keyCodesMap.put(65406, "ALT_GRAPH");
    keyCodesMap.put(150, "AMPERSAND");
    keyCodesMap.put(151, "ASTERISK");
    keyCodesMap.put(512, "AT");
    keyCodesMap.put(66, "B");
    keyCodesMap.put(192, "BACK_QUOTE");
    keyCodesMap.put(92, "BACK_SLASH");
    keyCodesMap.put(8, "BACK_SPACE");
    keyCodesMap.put(65368, "BEGIN");
    keyCodesMap.put(161, "BRACELEFT");
    keyCodesMap.put(162, "BRACERIGHT");
    keyCodesMap.put(67, "C");
    keyCodesMap.put(3, "CANCEL");
    keyCodesMap.put(20, "CAPS_LOCK");
    keyCodesMap.put(514, "CIRCUMFLEX");
    keyCodesMap.put(12, "CLEAR");
    keyCodesMap.put(93, "CLOSE_BRACKET");
    keyCodesMap.put(258, "CODE_INPUT");
    keyCodesMap.put(513, "COLON");
    keyCodesMap.put(44, "COMMA");
    keyCodesMap.put(65312, "COMPOSE");
    keyCodesMap.put(525, "CONTEXT_MENU");
    keyCodesMap.put(17, "CONTROL");
    keyCodesMap.put(28, "CONVERT");
    keyCodesMap.put(65485, "COPY");
    keyCodesMap.put(65489, "CUT");
    keyCodesMap.put(68, "D");
    keyCodesMap.put(134, "DEAD_ABOVEDOT");
    keyCodesMap.put(136, "DEAD_ABOVERING");
    keyCodesMap.put(129, "DEAD_ACUTE");
    keyCodesMap.put(133, "DEAD_BREVE");
    keyCodesMap.put(138, "DEAD_CARON");
    keyCodesMap.put(139, "DEAD_CEDILLA");
    keyCodesMap.put(130, "DEAD_CIRCUMFLEX");
    keyCodesMap.put(135, "DEAD_DIAERESIS");
    keyCodesMap.put(137, "DEAD_DOUBLEACUTE");
    keyCodesMap.put(128, "DEAD_GRAVE");
    keyCodesMap.put(141, "DEAD_IOTA");
    keyCodesMap.put(132, "DEAD_MACRON");
    keyCodesMap.put(140, "DEAD_OGONEK");
    keyCodesMap.put(143, "DEAD_SEMIVOICED_SOUND");
    keyCodesMap.put(131, "DEAD_TILDE");
    keyCodesMap.put(142, "DEAD_VOICED_SOUND");
    keyCodesMap.put(110, "DECIMAL");
    keyCodesMap.put(127, "DELETE");
    keyCodesMap.put(111, "DIVIDE");
    keyCodesMap.put(515, "DOLLAR");
    keyCodesMap.put(40, "DOWN");
    keyCodesMap.put(69, "E");
    keyCodesMap.put(35, "END");
    keyCodesMap.put(10, "ENTER");
    keyCodesMap.put(61, "EQUALS");
    keyCodesMap.put(27, "ESCAPE");
    keyCodesMap.put(516, "EURO_SIGN");
    keyCodesMap.put(517, "EXCLAMATION_MARK");
    keyCodesMap.put(70, "F");
    keyCodesMap.put(112, "F1");
    keyCodesMap.put(121, "F10");
    keyCodesMap.put(122, "F11");
    keyCodesMap.put(123, "F12");
    keyCodesMap.put(61440, "F13");
    keyCodesMap.put(61441, "F14");
    keyCodesMap.put(61442, "F15");
    keyCodesMap.put(61443, "F16");
    keyCodesMap.put(61444, "F17");
    keyCodesMap.put(61445, "F18");
    keyCodesMap.put(61446, "F19");
    keyCodesMap.put(113, "F2");
    keyCodesMap.put(61447, "F20");
    keyCodesMap.put(61448, "F21");
    keyCodesMap.put(61449, "F22");
    keyCodesMap.put(61450, "F23");
    keyCodesMap.put(61451, "F24");
    keyCodesMap.put(114, "F3");
    keyCodesMap.put(115, "F4");
    keyCodesMap.put(116, "F5");
    keyCodesMap.put(117, "F6");
    keyCodesMap.put(118, "F7");
    keyCodesMap.put(119, "F8");
    keyCodesMap.put(120, "F9");
    keyCodesMap.put(24, "FINAL");
    keyCodesMap.put(65488, "FIND");
    keyCodesMap.put(243, "FULL_WIDTH");
    keyCodesMap.put(71, "G");
    keyCodesMap.put(160, "GREATER");
    keyCodesMap.put(72, "H");
    keyCodesMap.put(244, "HALF_WIDTH");
    keyCodesMap.put(156, "HELP");
    keyCodesMap.put(242, "HIRAGANA");
    keyCodesMap.put(36, "HOME");
    keyCodesMap.put(73, "I");
    keyCodesMap.put(263, "INPUT_METHOD_ON_OFF");
    keyCodesMap.put(155, "INSERT");
    keyCodesMap.put(518, "INVERTED_EXCLAMATION_MARK");
    keyCodesMap.put(74, "J");
    keyCodesMap.put(260, "JAPANESE_HIRAGANA");
    keyCodesMap.put(259, "JAPANESE_KATAKANA");
    keyCodesMap.put(261, "JAPANESE_ROMAN");
    keyCodesMap.put(75, "K");
    keyCodesMap.put(21, "KANA");
    keyCodesMap.put(262, "KANA_LOCK");
    keyCodesMap.put(25, "KANJI");
    keyCodesMap.put(241, "KATAKANA");
    keyCodesMap.put(225, "KP_DOWN");
    keyCodesMap.put(226, "KP_LEFT");
    keyCodesMap.put(227, "KP_RIGHT");
    keyCodesMap.put(224, "KP_UP");
    keyCodesMap.put(76, "L");
    keyCodesMap.put(37, "LEFT");
    keyCodesMap.put(519, "LEFT_PARENTHESIS");
    keyCodesMap.put(153, "LESS");
    keyCodesMap.put(77, "M");
    keyCodesMap.put(157, "META");
    keyCodesMap.put(45, "MINUS");
    keyCodesMap.put(31, "MODECHANGE");
    keyCodesMap.put(106, "MULTIPLY");
    keyCodesMap.put(78, "N");
    keyCodesMap.put(29, "NONCONVERT");
    keyCodesMap.put(520, "NUMBER_SIGN");
    keyCodesMap.put(96, "NUMPAD0");
    keyCodesMap.put(97, "NUMPAD1");
    keyCodesMap.put(98, "NUMPAD2");
    keyCodesMap.put(99, "NUMPAD3");
    keyCodesMap.put(100, "NUMPAD4");
    keyCodesMap.put(101, "NUMPAD5");
    keyCodesMap.put(102, "NUMPAD6");
    keyCodesMap.put(103, "NUMPAD7");
    keyCodesMap.put(104, "NUMPAD8");
    keyCodesMap.put(105, "NUMPAD9");
    keyCodesMap.put(144, "NUM_LOCK");
    keyCodesMap.put(79, "O");
    keyCodesMap.put(91, "OPEN_BRACKET");
    keyCodesMap.put(80, "P");
    keyCodesMap.put(34, "PAGE_DOWN");
    keyCodesMap.put(33, "PAGE_UP");
    keyCodesMap.put(65487, "PASTE");
    keyCodesMap.put(19, "PAUSE");
    keyCodesMap.put(46, "PERIOD");
    keyCodesMap.put(521, "PLUS");
    keyCodesMap.put(257, "PREVIOUS_CANDIDATE");
    keyCodesMap.put(154, "PRINTSCREEN");
    keyCodesMap.put(65482, "PROPS");
    keyCodesMap.put(81, "Q");
    keyCodesMap.put(222, "QUOTE");
    keyCodesMap.put(152, "QUOTEDBL");
    keyCodesMap.put(82, "R");
    keyCodesMap.put(39, "RIGHT");
    keyCodesMap.put(522, "RIGHT_PARENTHESIS");
    keyCodesMap.put(245, "ROMAN_CHARACTERS");
    keyCodesMap.put(83, "S");
    keyCodesMap.put(145, "SCROLL_LOCK");
    keyCodesMap.put(59, "SEMICOLON");
    keyCodesMap.put(108, "SEPARATER");
    keyCodesMap.put(108, "SEPARATOR");
    keyCodesMap.put(16, "SHIFT");
    keyCodesMap.put(47, "SLASH");
    keyCodesMap.put(32, "SPACE");
    keyCodesMap.put(65480, "STOP");
    keyCodesMap.put(109, "SUBTRACT");
    keyCodesMap.put(84, "T");
    keyCodesMap.put(9, "TAB");
    keyCodesMap.put(85, "U");
    keyCodesMap.put(0, "UNDEFINED");
    keyCodesMap.put(523, "UNDERSCORE");
    keyCodesMap.put(65483, "UNDO");
    keyCodesMap.put(38, "UP");
    keyCodesMap.put(86, "V");
    keyCodesMap.put(87, "W");
    keyCodesMap.put(524, "WINDOWS");
    keyCodesMap.put(88, "X");
    keyCodesMap.put(89, "Y");
    keyCodesMap.put(90, "Z");
  }

}
