<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.make.dependencies.ModulesCluster" file="ModulesCluster.java">
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Iterator" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.Wrappers" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IMapping" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ITranslator2" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode dependClassName="jetbrains.mps.project.DevKit" />
    <classNode dependClassName="jetbrains.mps.project.IModule" />
    <classNode dependClassName="jetbrains.mps.project.dependency.DependenciesManager" />
    <classNode dependClassName="jetbrains.mps.project.structure.modules.ModuleReference" />
    <classNode dependClassName="jetbrains.mps.smodel.Generator" />
    <classNode dependClassName="jetbrains.mps.smodel.Language" />
    <classNode extendsClassName="jetbrains.mps.internal.make.runtime.util.GraphAnalyzer" />
  </dependency>
  <dependency className="jetbrains.mps.make.dependencies.ModulesClusterizer" file="ModulesClusterizer.java">
    <classNode dependClassName="java.lang.Iterable" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Collection" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Queue" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.generator.runtime.TemplateModule" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ISelector" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.QueueSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.Sequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode dependClassName="jetbrains.mps.logging.Logger" />
    <classNode dependClassName="jetbrains.mps.make.dependencies.ModulesCluster" />
    <classNode dependClassName="jetbrains.mps.make.resources.IResource" />
    <classNode dependClassName="jetbrains.mps.project.IModule" />
    <classNode dependClassName="jetbrains.mps.smodel.Language" />
    <classNode dependClassName="jetbrains.mps.smodel.language.LanguageRegistry" />
    <classNode dependClassName="jetbrains.mps.smodel.language.LanguageRuntime" />
    <classNode dependClassName="jetbrains.mps.smodel.resources.IMResource" />
  </dependency>
</dependenciesRoot>

