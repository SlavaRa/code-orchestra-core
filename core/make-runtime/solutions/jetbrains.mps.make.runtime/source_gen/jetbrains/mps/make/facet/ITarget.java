package jetbrains.mps.make.facet;

/*Generated by MPS */

import jetbrains.mps.make.resources.IResource;
import jetbrains.mps.make.script.IConfig;
import jetbrains.mps.make.script.IJob;
import jetbrains.mps.internal.make.runtime.util.DefaultHName;

public interface ITarget {
  public ITarget.Name getName();
  public boolean requiresInput();
  public boolean producesOutput();
  public Iterable<Class<? extends IResource>> expectedInput();
  public Iterable<Class<? extends IResource>> expectedOutput();
  public Iterable<ITarget.Name> before();
  public Iterable<ITarget.Name> notBefore();
  public Iterable<ITarget.Name> after();
  public Iterable<ITarget.Name> notAfter();
  public IConfig createConfig();
  public <T> T createParameters(Class<T> varCls);
  public <T> T createParameters(Class<T> varCls, T copyFrom);
  public IJob createJob();
  public static class Name extends DefaultHName<IFacet.Name> {
    public Name(String name) {
      super(name);
    }

    protected final IFacet.Name createParentName(String parentFqName) {
      return new IFacet.Name(parentFqName);
    }
  }

}
