package jetbrains.mps.editor.runtime.impl.cellActions;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorCellAction;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CellAction_DeleteSmart extends EditorCellAction {
  private SNode mySource;
  private SNode myLink;
  private SNode myTarget;

  public CellAction_DeleteSmart(SNode source, SNode link, SNode target) {
    mySource = source;
    myLink = link;
    myTarget = target;
  }

  public boolean canExecute(EditorContext context) {
    return true;
  }

  public void execute(EditorContext context) {
    SNode genuineLinkDeclaration = SModelUtil.getGenuineLinkDeclaration(myLink);
    if (SPropertyOperations.hasValue(genuineLinkDeclaration, "metaClass", "aggregation", "reference")) {
      SNodeOperations.deleteNode(myTarget);
      if (SPropertyOperations.hasValue(genuineLinkDeclaration, "sourceCardinality", "1", "0..1")) {
        SNode defaultTarget = SModelUtil_new.instantiateConceptDeclaration(SLinkOperations.getTarget(myLink, "target", false), SNodeOperations.getModel(mySource));
        mySource.setChild(SPropertyOperations.getString(genuineLinkDeclaration, "role"), defaultTarget);
      }
    } else {
      // <node> 
      mySource.removeReferent(SPropertyOperations.getString(genuineLinkDeclaration, "role"));
    }
  }
}
