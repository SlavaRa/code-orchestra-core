package jetbrains.mps.debug.evaluation.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.BaseMethodCall;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EvaluatorsSuperMethodCall extends BaseMethodCall {
  public static final String concept = "jetbrains.mps.debug.evaluation.structure.EvaluatorsSuperMethodCall";

  public EvaluatorsSuperMethodCall(SNode node) {
    super(node);
  }

  public InstanceMethodDeclaration getInstanceMethodDeclaration() {
    return this.ensureAdapter(InstanceMethodDeclaration.class, "baseMethodDeclaration", this.getBaseMethodDeclaration());
  }

  public void setInstanceMethodDeclaration(InstanceMethodDeclaration node) {
    this.setBaseMethodDeclaration(node);
  }

  public static EvaluatorsSuperMethodCall newInstance(SModel sm, boolean init) {
    return (EvaluatorsSuperMethodCall) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.evaluation.structure.EvaluatorsSuperMethodCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EvaluatorsSuperMethodCall newInstance(SModel sm) {
    return EvaluatorsSuperMethodCall.newInstance(sm, false);
  }
}
