package jetbrains.mps.debug.apiLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BreakpointableNodeItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.debug.apiLang.structure.BreakpointableNodeItem";
  public static final String DECLARATION = "declaration";
  public static final String CREATE_BREAKPOINT = "createBreakpoint";
  public static final String CONCEPTS_TO_CREATE_BREAKPOINT = "conceptsToCreateBreakpoint";

  public BreakpointableNodeItem(SNode node) {
    super(node);
  }

  public ConceptDeclaration getDeclaration() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, BreakpointableNodeItem.DECLARATION);
  }

  public void setDeclaration(ConceptDeclaration node) {
    super.setReferent(BreakpointableNodeItem.DECLARATION, node);
  }

  public ConceptFunction_CreateBreakpoint getCreateBreakpoint() {
    return (ConceptFunction_CreateBreakpoint) this.getChild(ConceptFunction_CreateBreakpoint.class, BreakpointableNodeItem.CREATE_BREAKPOINT);
  }

  public void setCreateBreakpoint(ConceptFunction_CreateBreakpoint node) {
    super.setChild(BreakpointableNodeItem.CREATE_BREAKPOINT, node);
  }

  public int getConceptsToCreateBreakpointsCount() {
    return this.getChildCount(BreakpointableNodeItem.CONCEPTS_TO_CREATE_BREAKPOINT);
  }

  public Iterator<ConceptDeclarationReference> conceptsToCreateBreakpoints() {
    return this.children(ConceptDeclarationReference.class, BreakpointableNodeItem.CONCEPTS_TO_CREATE_BREAKPOINT);
  }

  public List<ConceptDeclarationReference> getConceptsToCreateBreakpoints() {
    return this.getChildren(ConceptDeclarationReference.class, BreakpointableNodeItem.CONCEPTS_TO_CREATE_BREAKPOINT);
  }

  public void addConceptsToCreateBreakpoint(ConceptDeclarationReference node) {
    this.addChild(BreakpointableNodeItem.CONCEPTS_TO_CREATE_BREAKPOINT, node);
  }

  public void insertConceptsToCreateBreakpoint(ConceptDeclarationReference prev, ConceptDeclarationReference node) {
    this.insertChild(prev, BreakpointableNodeItem.CONCEPTS_TO_CREATE_BREAKPOINT, node);
  }

  public static BreakpointableNodeItem newInstance(SModel sm, boolean init) {
    return (BreakpointableNodeItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.apiLang.structure.BreakpointableNodeItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BreakpointableNodeItem newInstance(SModel sm) {
    return BreakpointableNodeItem.newInstance(sm, false);
  }
}
