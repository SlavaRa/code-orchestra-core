package jetbrains.mps.debug.apiLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BreakpointCreator extends BaseConcept {
  public static final String concept = "jetbrains.mps.debug.apiLang.structure.BreakpointCreator";
  public static final String BREAKPOINTABLE_CONCEPTS = "breakpointableConcepts";

  public BreakpointCreator(SNode node) {
    super(node);
  }

  public int getBreakpointableConceptsesCount() {
    return this.getChildCount(BreakpointCreator.BREAKPOINTABLE_CONCEPTS);
  }

  public Iterator<BreakpointableNodeItem> breakpointableConceptses() {
    return this.children(BreakpointableNodeItem.class, BreakpointCreator.BREAKPOINTABLE_CONCEPTS);
  }

  public List<BreakpointableNodeItem> getBreakpointableConceptses() {
    return this.getChildren(BreakpointableNodeItem.class, BreakpointCreator.BREAKPOINTABLE_CONCEPTS);
  }

  public void addBreakpointableConcepts(BreakpointableNodeItem node) {
    this.addChild(BreakpointCreator.BREAKPOINTABLE_CONCEPTS, node);
  }

  public void insertBreakpointableConcepts(BreakpointableNodeItem prev, BreakpointableNodeItem node) {
    this.insertChild(prev, BreakpointCreator.BREAKPOINTABLE_CONCEPTS, node);
  }

  public static BreakpointCreator newInstance(SModel sm, boolean init) {
    return (BreakpointCreator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.apiLang.structure.BreakpointCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BreakpointCreator newInstance(SModel sm) {
    return BreakpointCreator.newInstance(sm, false);
  }
}
