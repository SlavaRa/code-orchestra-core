package jetbrains.mps.debug.apiLang.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DebuggerReference extends Expression {
  public static final String concept = "jetbrains.mps.debug.apiLang.structure.DebuggerReference";
  public static final String DEBUGGER_NAME = "debuggerName";

  public DebuggerReference(SNode node) {
    super(node);
  }

  public String getDebuggerName() {
    return this.getProperty(DebuggerReference.DEBUGGER_NAME);
  }

  public void setDebuggerName(String value) {
    this.setProperty(DebuggerReference.DEBUGGER_NAME, value);
  }

  public static DebuggerReference newInstance(SModel sm, boolean init) {
    return (DebuggerReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.apiLang.structure.DebuggerReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DebuggerReference newInstance(SModel sm) {
    return DebuggerReference.newInstance(sm, false);
  }
}
