package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.SettingsEditorEx;
import jetbrains.mps.execution.lib.JavaRunParameters_Configuration_Editor;
import com.intellij.openapi.util.Disposer;
import org.jetbrains.annotations.NotNull;
import javax.swing.JPanel;
import java.awt.GridBagLayout;
import jetbrains.mps.ide.common.LayoutUtil;
import com.intellij.openapi.options.ConfigurationException;

public class JUnitTests_Configuration_Editor extends SettingsEditorEx<JUnitTests_Configuration> {
  private JUnitConfigEditor myEditor;
  private JavaRunParameters_Configuration_Editor myJavaRunParameters;

  public JUnitTests_Configuration_Editor(JavaRunParameters_Configuration_Editor javaRunParameters) {
    myJavaRunParameters = javaRunParameters;
  }

  public void disposeEditor() {
    myEditor.dispose();
    Disposer.dispose(myJavaRunParameters);
  }

  @NotNull
  public JPanel createEditor() {
    JPanel panel = new JPanel(new GridBagLayout());
    myEditor = new JUnitConfigEditor();

    panel.add(myEditor, LayoutUtil.createPanelConstraints(0));
    panel.add(myJavaRunParameters.createEditor(), LayoutUtil.createPanelConstraints(1));

    return panel;
  }

  public void applyEditorTo(final JUnitTests_Configuration configuration) throws ConfigurationException {
    myJavaRunParameters.applyEditorTo(configuration.getJavaRunParameters());
    myEditor.apply(configuration);
  }

  public void resetEditorFrom(final JUnitTests_Configuration configuration) {
    myJavaRunParameters.resetEditorFrom(configuration.getJavaRunParameters());
    myEditor.reset(configuration);
  }
}
