package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestMethod_Behavior;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestCase_Behavior;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.baseLanguage.unitTest.runtime.TestRunParameters;
import jetbrains.mps.baseLanguage.unitTest.behavior.ITestable_Behavior;
import org.jetbrains.annotations.NonNls;

public class LanguageTestWrapper extends AbstractTestWrapper<SNode> {
  public LanguageTestWrapper(SNode test) {
    super(test);
  }

  public boolean isTestCase() {
    return SNodeOperations.isInstanceOf(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase");
  }

  private boolean isTestMethod() {
    return SNodeOperations.isInstanceOf(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod");
  }

  @Nullable
  @Override
  public ITestNodeWrapper getTestCase() {
    if (SNodeOperations.isInstanceOf(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod")) {
      return TestNodeWrapperFactory.tryToWrap(ITestMethod_Behavior.call_getTestCase_1216134500045(SNodeOperations.cast(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod")));
    }
    if (isTestCase()) {
      return null;
    }
    return null;
  }

  @NotNull
  @Override
  public Iterable<ITestNodeWrapper> getTestMethods() {
    if (!(isTestCase())) {
      return super.getTestMethods();
    }
    return ListSequence.fromList(ITestCase_Behavior.call_getTestMethods_2148145109766218395(SNodeOperations.cast(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))).select(new ISelector<SNode, ITestNodeWrapper>() {
      public ITestNodeWrapper select(SNode it) {
        return TestNodeWrapperFactory.tryToWrap(it);
      }
    });
  }

  @Override
  public TestRunParameters getTestRunParameters() {
    return ITestable_Behavior.call_getTestRunParameters_1216045139515(myNode);
  }

  @NonNls
  @Override
  public String getFqName() {
    if (isTestCase()) {
      return ITestCase_Behavior.call_getClassName_1216136193905(SNodeOperations.cast(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"));
    }
    return super.getFqName();
  }

  @NonNls
  @Override
  public String getName() {
    if (isTestMethod()) {
      return ITestMethod_Behavior.call_getTestName_1216136419751(SNodeOperations.cast(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod"));
    }
    return ITestCase_Behavior.call_getSimpleClassName_1229278847513(SNodeOperations.cast(myNode, "jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"));
  }
}
