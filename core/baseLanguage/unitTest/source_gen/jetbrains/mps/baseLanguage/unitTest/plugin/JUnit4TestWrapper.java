package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.NonNls;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class JUnit4TestWrapper extends AbstractTestWrapper<SNode> {
  public JUnit4TestWrapper(SNode clazz) {
    super(clazz);
  }

  public boolean isTestCase() {
    return true;
  }

  @NonNls
  @Override
  public String getFqName() {
    return INamedConcept_Behavior.call_getFqName_1213877404258(myNode);
  }

  @NotNull
  @Override
  public Iterable<ITestNodeWrapper> getTestMethods() {
    return ListSequence.fromList(SLinkOperations.getTargets(myNode, "method", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return JUnit4MethodWrapper.isJUnit4TestMethod(it);
      }
    }).select(new ISelector<SNode, ITestNodeWrapper>() {
      public ITestNodeWrapper select(SNode it) {
        return TestNodeWrapperFactory.tryToWrap(it);
      }
    }).where(new IWhereFilter<ITestNodeWrapper>() {
      public boolean accept(ITestNodeWrapper it) {
        return it != null;
      }
    });
  }

  public static boolean isJUnit4TestCase(SNode clazz) {
    for (SNode method : ListSequence.fromList(SLinkOperations.getTargets(clazz, "method", true))) {
      if (JUnit4MethodWrapper.isJUnit4TestMethod(method)) {
        return true;
      }
    }
    return false;
  }
}
