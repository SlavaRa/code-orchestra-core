package jetbrains.mps.baseLanguage.unitTest.plugin;

/*Generated by MPS */

import javax.swing.Icon;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.plugins.MacrosUtil;
import jetbrains.mps.util.MacrosFactory;
import jetbrains.mps.ide.icons.IconManager;

public enum TestState {
  NOT_RAN("testNotRan.png"),
  IN_PROGRESS("testInProgress1.png"),
  IGNORED("testIgnored.png"),
  FAILED("testFailed.png"),
  ERROR("testError.png"),
  PASSED("testPassed.png"),
  PAUSED("testPaused.png"),
  TERMINATED("testTerminated.png");

  private final Icon myIcon;

  TestState(String iconName) {
    Language language = Language.getLanguageFor(SNodeOperations.getModel(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")).getModelDescriptor());
    String pathToIcon = MacrosUtil.expandPath(MacrosFactory.LANGUAGE_DESCRIPTOR + "/icons/states/" + iconName, language.getModuleFqName());
    this.myIcon = IconManager.loadIcon(pathToIcon, true);
  }

  public Icon getIcon() {
    if (this.equals(TestState.IN_PROGRESS)) {
      return TestTreeIconAnimator.getCurrentFrame();
    }
    return this.myIcon;
  }
}
