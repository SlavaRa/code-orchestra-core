package jetbrains.mps.baseLanguage.classifiers.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.IThisExpression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ThisClassifierExpression extends Expression implements IThisExpression {
  public static final String concept = "jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String CLASSIFIER = "classifier";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public ThisClassifierExpression(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(ThisClassifierExpression.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ThisClassifierExpression.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ThisClassifierExpression.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ThisClassifierExpression.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ThisClassifierExpression.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ThisClassifierExpression.VIRTUAL_PACKAGE, value);
  }

  public IClassifier getClassifier() {
    return (IClassifier) this.getReferent(IClassifier.class, ThisClassifierExpression.CLASSIFIER);
  }

  public void setClassifier(IClassifier node) {
    super.setReferent(ThisClassifierExpression.CLASSIFIER, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(ThisClassifierExpression.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, ThisClassifierExpression.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, ThisClassifierExpression.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(ThisClassifierExpression.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, ThisClassifierExpression.SMODEL_ATTRIBUTE, node);
  }

  public static ThisClassifierExpression newInstance(SModel sm, boolean init) {
    return (ThisClassifierExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ThisClassifierExpression newInstance(SModel sm) {
    return ThisClassifierExpression.newInstance(sm, false);
  }
}
