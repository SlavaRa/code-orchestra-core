package jetbrains.mps.baseLanguage.collections.sandbox.model4;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class TestClosureWithExtRefOnSNode {
  public Object aaa(SNode var) {
    final SNode valDecl = SLinkOperations.getTarget(var, "variableDeclaration", false);
    if ((valDecl == null)) {
      return null;
    }
    Iterable<SNode> statements = SLinkOperations.getTargets(SNodeOperations.getAncestor(var, "jetbrains.mps.baseLanguage.structure.StatementList", false, false), "statement", true);
    return Sequence.fromIterable(statements).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        if (SNodeOperations.isInstanceOf(it, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
          return SLinkOperations.getTarget(SNodeOperations.cast(it, "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"), "localVariableDeclaration", true) == valDecl;
        }
      }
    });
  }
}
