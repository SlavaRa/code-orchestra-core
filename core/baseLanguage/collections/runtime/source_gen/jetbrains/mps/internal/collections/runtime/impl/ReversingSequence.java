package jetbrains.mps.internal.collections.runtime.impl;

/*Generated by MPS */

import java.util.Iterator;
import java.util.ArrayList;
import java.util.ListIterator;

public class ReversingSequence<T> extends AbstractChainedSequence<T, T> {
  public ReversingSequence(Iterable<T> input) {
    super(input);
  }

  public Iterator<T> iterator() {
    ArrayList<T> cache = new ArrayList<T>();
    for (T u : getInput()) {
      cache.add(u);
    }
    return new ReversingSequence.ReversingIterator(cache.listIterator(cache.size()));
  }

  private static class ReversingIterator<U> implements Iterator<U> {
    private ListIterator<U> listIterator;

    public ReversingIterator(ListIterator<U> listIterator) {
      this.listIterator = listIterator;
    }

    public boolean hasNext() {
      return listIterator.hasPrevious();
    }

    public U next() {
      return listIterator.previous();
    }

    public void remove() {
      listIterator.remove();
    }
  }
}
