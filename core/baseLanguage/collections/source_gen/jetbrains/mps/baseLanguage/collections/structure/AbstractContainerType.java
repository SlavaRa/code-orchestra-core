package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AbstractContainerType extends Type {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType";
  public static final String ELEMENT_TYPE = "elementType";

  public AbstractContainerType(SNode node) {
    super(node);
  }

  public Type getElementType() {
    return (Type) this.getChild(Type.class, AbstractContainerType.ELEMENT_TYPE);
  }

  public void setElementType(Type node) {
    super.setChild(AbstractContainerType.ELEMENT_TYPE, node);
  }

  public static AbstractContainerType newInstance(SModel sm, boolean init) {
    return (AbstractContainerType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AbstractContainerType newInstance(SModel sm) {
    return AbstractContainerType.newInstance(sm, false);
  }
}
