package jetbrains.mps.baseLanguage.collections.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.pluginparts.custom.BaseCustomApplicationPlugin;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import java.util.ArrayList;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SModelFqName;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class SampleCustomContainers_CustomApplicationPlugin extends BaseCustomApplicationPlugin {
  public SampleCustomContainers_CustomApplicationPlugin() {
  }

  public void doInit() {
    final _FunctionTypes._return_P0_E0<? extends List<SNode>> provider = new _FunctionTypes._return_P0_E0<List<SNode>>() {
      public List<SNode> invoke() {
        List<SNode> res = new ArrayList<SNode>();
        // Find the model(s) with custom container declarations 
        SModelDescriptor desc = GlobalScope.getInstance().getModelDescriptor(SModelFqName.fromString("jetbrains.mps.baseLanguage.collections.custom"));
        SModel mdl = desc.getSModel();
        if (mdl != null) {
          ListSequence.fromList(res).addSequence(ListSequence.fromList(SModelOperations.getNodes(mdl, "jetbrains.mps.baseLanguage.collections.structure.CustomContainers")));
        }
        return res;
      }
    };
    CollectionsLanguage.runOnInit(new _FunctionTypes._void_P1_E0<CollectionsLanguage>() {
      public void invoke(CollectionsLanguage cl) {
        cl.getCustomContainersRegistry().registerProvider(provider);
      }
    });
    CollectionsLanguage.runOnDispose(new _FunctionTypes._void_P1_E0<CollectionsLanguage>() {
      public void invoke(CollectionsLanguage cl) {
        cl.getCustomContainersRegistry().unRegisterProvider(provider);
      }
    });
  }
}
