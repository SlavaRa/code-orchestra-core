package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MapElement extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.MapElement";
  public static final String MAP = "map";
  public static final String KEY = "key";

  public MapElement(SNode node) {
    super(node);
  }

  public Expression getMap() {
    return (Expression) this.getChild(Expression.class, MapElement.MAP);
  }

  public void setMap(Expression node) {
    super.setChild(MapElement.MAP, node);
  }

  public Expression getKey() {
    return (Expression) this.getChild(Expression.class, MapElement.KEY);
  }

  public void setKey(Expression node) {
    super.setChild(MapElement.KEY, node);
  }

  public static MapElement newInstance(SModel sm, boolean init) {
    return (MapElement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.MapElement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MapElement newInstance(SModel sm) {
    return MapElement.newInstance(sm, false);
  }
}
