package jetbrains.mps.baseLanguage.collections.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CustomContainerCreator extends AbstractContainerCreator {
  public static final String concept = "jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator";
  public static final String CONTAINER_DECLARATION = "containerDeclaration";

  public CustomContainerCreator(SNode node) {
    super(node);
  }

  public CustomContainerDeclaration getContainerDeclaration() {
    return (CustomContainerDeclaration) this.getReferent(CustomContainerDeclaration.class, CustomContainerCreator.CONTAINER_DECLARATION);
  }

  public void setContainerDeclaration(CustomContainerDeclaration node) {
    super.setReferent(CustomContainerCreator.CONTAINER_DECLARATION, node);
  }

  public static CustomContainerCreator newInstance(SModel sm, boolean init) {
    return (CustomContainerCreator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CustomContainerCreator newInstance(SModel sm) {
    return CustomContainerCreator.newInstance(sm, false);
  }
}
