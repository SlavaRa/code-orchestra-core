package jetbrains.mps.baseLanguageInternal.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.structure.BehaviorDescriptor;
import jetbrains.mps.smodel.structure.ConceptRegistry;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class ExtractStatementListExpression_Behavior {
  private static Class[] PARAMETERS_3196918548952834932 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static List<SNode> virtual_getLocalVariableElements_1238805763253(SNode thisNode) {
    List<SNode> elems = new ArrayList<SNode>();
    ListSequence.fromList(elems).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "stmts", true), "statement", true)));
    ListSequence.fromList(elems).addElement(SLinkOperations.getTarget(thisNode, "innerExpr", true));
    return elems;
  }

  public static List<SNode> call_getLocalVariableElements_3196918548952834932(SNode thisNode) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (List<SNode>) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression"), "virtual_getLocalVariableElements_1238805763253", PARAMETERS_3196918548952834932);
  }

  public static List<SNode> callSuper_getLocalVariableElements_3196918548952834932(SNode thisNode, String callerConceptFqName) {
    return (List<SNode>) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression"), callerConceptFqName, "virtual_getLocalVariableElements_1238805763253", PARAMETERS_3196918548952834932);
  }
}
