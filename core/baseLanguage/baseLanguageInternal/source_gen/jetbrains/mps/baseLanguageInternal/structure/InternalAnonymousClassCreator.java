package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.AbstractCreator;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InternalAnonymousClassCreator extends AbstractCreator {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClassCreator";
  public static final String CLS = "cls";

  public InternalAnonymousClassCreator(SNode node) {
    super(node);
  }

  public InternalAnonymousClass getCls() {
    return (InternalAnonymousClass) this.getChild(InternalAnonymousClass.class, InternalAnonymousClassCreator.CLS);
  }

  public void setCls(InternalAnonymousClass node) {
    super.setChild(InternalAnonymousClassCreator.CLS, node);
  }

  public static InternalAnonymousClassCreator newInstance(SModel sm, boolean init) {
    return (InternalAnonymousClassCreator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClassCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InternalAnonymousClassCreator newInstance(SModel sm) {
    return InternalAnonymousClassCreator.newInstance(sm, false);
  }
}
