package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TypeHintExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression";
  public static final String EXPRESSION = "expression";
  public static final String TYPE_HINT = "typeHint";

  public TypeHintExpression(SNode node) {
    super(node);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, TypeHintExpression.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(TypeHintExpression.EXPRESSION, node);
  }

  public Type getTypeHint() {
    return (Type) this.getChild(Type.class, TypeHintExpression.TYPE_HINT);
  }

  public void setTypeHint(Type node) {
    super.setChild(TypeHintExpression.TYPE_HINT, node);
  }

  public static TypeHintExpression newInstance(SModel sm, boolean init) {
    return (TypeHintExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TypeHintExpression newInstance(SModel sm) {
    return TypeHintExpression.newInstance(sm, false);
  }
}
