package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InternalClassExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.InternalClassExpression";
  public static final String TYPE = "type";

  public InternalClassExpression(SNode node) {
    super(node);
  }

  public Type getType() {
    return (Type) this.getChild(Type.class, InternalClassExpression.TYPE);
  }

  public void setType(Type node) {
    super.setChild(InternalClassExpression.TYPE, node);
  }

  public static InternalClassExpression newInstance(SModel sm, boolean init) {
    return (InternalClassExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalClassExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InternalClassExpression newInstance(SModel sm) {
    return InternalClassExpression.newInstance(sm, false);
  }
}
