package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.ClassConcept;
import jetbrains.mps.baseLanguage.structure.IAnonymousClass;
import jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InternalAnonymousClass extends ClassConcept implements IAnonymousClass, IControlFlowInterrupter {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClass";
  public static final String FQ_CLASS_NAME = "fqClassName";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String TYPE = "type";
  public static final String CONSTRUCTOR_ARGUMENT = "constructorArgument";
  public static final String TYPE_PARAMETER = "typeParameter";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public InternalAnonymousClass(SNode node) {
    super(node);
  }

  public String getFqClassName() {
    return this.getProperty(InternalAnonymousClass.FQ_CLASS_NAME);
  }

  public void setFqClassName(String value) {
    this.setProperty(InternalAnonymousClass.FQ_CLASS_NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(InternalAnonymousClass.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InternalAnonymousClass.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InternalAnonymousClass.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InternalAnonymousClass.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InternalAnonymousClass.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InternalAnonymousClass.VIRTUAL_PACKAGE, value);
  }

  public Type getType() {
    return (Type) this.getChild(Type.class, InternalAnonymousClass.TYPE);
  }

  public void setType(Type node) {
    super.setChild(InternalAnonymousClass.TYPE, node);
  }

  public int getConstructorArgumentsCount() {
    return this.getChildCount(InternalAnonymousClass.CONSTRUCTOR_ARGUMENT);
  }

  public Iterator<Expression> constructorArguments() {
    return this.children(Expression.class, InternalAnonymousClass.CONSTRUCTOR_ARGUMENT);
  }

  public List<Expression> getConstructorArguments() {
    return this.getChildren(Expression.class, InternalAnonymousClass.CONSTRUCTOR_ARGUMENT);
  }

  public void addConstructorArgument(Expression node) {
    this.addChild(InternalAnonymousClass.CONSTRUCTOR_ARGUMENT, node);
  }

  public void insertConstructorArgument(Expression prev, Expression node) {
    this.insertChild(prev, InternalAnonymousClass.CONSTRUCTOR_ARGUMENT, node);
  }

  public int getTypeParametersCount() {
    return this.getChildCount(InternalAnonymousClass.TYPE_PARAMETER);
  }

  public Iterator<Type> typeParameters() {
    return this.children(Type.class, InternalAnonymousClass.TYPE_PARAMETER);
  }

  public List<Type> getTypeParameters() {
    return this.getChildren(Type.class, InternalAnonymousClass.TYPE_PARAMETER);
  }

  public void addTypeParameter(Type node) {
    this.addChild(InternalAnonymousClass.TYPE_PARAMETER, node);
  }

  public void insertTypeParameter(Type prev, Type node) {
    this.insertChild(prev, InternalAnonymousClass.TYPE_PARAMETER, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(InternalAnonymousClass.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, InternalAnonymousClass.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, InternalAnonymousClass.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(InternalAnonymousClass.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, InternalAnonymousClass.SMODEL_ATTRIBUTE, node);
  }

  public static InternalAnonymousClass newInstance(SModel sm, boolean init) {
    return (InternalAnonymousClass) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClass", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InternalAnonymousClass newInstance(SModel sm) {
    return InternalAnonymousClass.newInstance(sm, false);
  }
}
