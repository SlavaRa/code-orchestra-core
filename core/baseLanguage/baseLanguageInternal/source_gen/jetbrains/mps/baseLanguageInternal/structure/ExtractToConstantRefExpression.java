package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExtractToConstantRefExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantRefExpression";
  public static final String ORIGINAL = "original";

  public ExtractToConstantRefExpression(SNode node) {
    super(node);
  }

  public ExtractToConstantExpression getOriginal() {
    return (ExtractToConstantExpression) this.getReferent(ExtractToConstantExpression.class, ExtractToConstantRefExpression.ORIGINAL);
  }

  public void setOriginal(ExtractToConstantExpression node) {
    super.setReferent(ExtractToConstantRefExpression.ORIGINAL, node);
  }

  public static ExtractToConstantRefExpression newInstance(SModel sm, boolean init) {
    return (ExtractToConstantRefExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantRefExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExtractToConstantRefExpression newInstance(SModel sm) {
    return ExtractToConstantRefExpression.newInstance(sm, false);
  }
}
