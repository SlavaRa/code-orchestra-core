package jetbrains.mps.baseLanguageInternal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExtractToConstantExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression";
  public static final String FIELD_NAME = "fieldName";
  public static final String MAKE_UNIQUE = "makeUnique";
  public static final String EXPRESSION = "expression";

  public ExtractToConstantExpression(SNode node) {
    super(node);
  }

  public String getFieldName() {
    return this.getProperty(ExtractToConstantExpression.FIELD_NAME);
  }

  public void setFieldName(String value) {
    this.setProperty(ExtractToConstantExpression.FIELD_NAME, value);
  }

  public boolean getMakeUnique() {
    return this.getBooleanProperty(ExtractToConstantExpression.MAKE_UNIQUE);
  }

  public void setMakeUnique(boolean value) {
    this.setBooleanProperty(ExtractToConstantExpression.MAKE_UNIQUE, value);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, ExtractToConstantExpression.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(ExtractToConstantExpression.EXPRESSION, node);
  }

  public static ExtractToConstantExpression newInstance(SModel sm, boolean init) {
    return (ExtractToConstantExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExtractToConstantExpression newInstance(SModel sm) {
    return ExtractToConstantExpression.newInstance(sm, false);
  }
}
