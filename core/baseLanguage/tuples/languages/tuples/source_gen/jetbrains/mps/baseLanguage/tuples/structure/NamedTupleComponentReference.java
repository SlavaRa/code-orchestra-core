package jetbrains.mps.baseLanguage.tuples.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NamedTupleComponentReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.tuples.structure.NamedTupleComponentReference";
  public static final String COMPONENT_DECLARATION = "componentDeclaration";
  public static final String VALUE = "value";

  public NamedTupleComponentReference(SNode node) {
    super(node);
  }

  public NamedTupleComponentDeclaration getComponentDeclaration() {
    return (NamedTupleComponentDeclaration) this.getReferent(NamedTupleComponentDeclaration.class, NamedTupleComponentReference.COMPONENT_DECLARATION);
  }

  public void setComponentDeclaration(NamedTupleComponentDeclaration node) {
    super.setReferent(NamedTupleComponentReference.COMPONENT_DECLARATION, node);
  }

  public Expression getValue() {
    return (Expression) this.getChild(Expression.class, NamedTupleComponentReference.VALUE);
  }

  public void setValue(Expression node) {
    super.setChild(NamedTupleComponentReference.VALUE, node);
  }

  public static NamedTupleComponentReference newInstance(SModel sm, boolean init) {
    return (NamedTupleComponentReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.tuples.structure.NamedTupleComponentReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NamedTupleComponentReference newInstance(SModel sm) {
    return NamedTupleComponentReference.newInstance(sm, false);
  }
}
