package jetbrains.mps.baseLanguage.overloadedOperators.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CustomOperatorUsage_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> getVisibleCustomOperators_1141736782992984505(SModel model) {
    List<SNode> result = new ArrayList<SNode>();
    List<SNode> containers = SModelOperations.getRootsIncludingImported(model, GlobalScope.getInstance(), "jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedOperatorContainer");
    for (SNode container : containers) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(container, "customOperators", true)));
    }
    return result;
  }
}
