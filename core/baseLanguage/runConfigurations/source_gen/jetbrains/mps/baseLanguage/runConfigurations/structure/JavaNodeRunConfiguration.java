package jetbrains.mps.baseLanguage.runConfigurations.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class JavaNodeRunConfiguration extends JavaRunConfiguration {
  public static final String concept = "jetbrains.mps.baseLanguage.runConfigurations.structure.JavaNodeRunConfiguration";
  public static final String GENERATE = "generate";
  public static final String CONCEPT_DECLARATION = "conceptDeclaration";
  public static final String IS_APPLICABLE_BLOCK = "isApplicableBlock";

  public JavaNodeRunConfiguration(SNode node) {
    super(node);
  }

  public boolean getGenerate() {
    return this.getBooleanProperty(JavaNodeRunConfiguration.GENERATE);
  }

  public void setGenerate(boolean value) {
    this.setBooleanProperty(JavaNodeRunConfiguration.GENERATE, value);
  }

  public AbstractConceptDeclaration getConceptDeclaration() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, JavaNodeRunConfiguration.CONCEPT_DECLARATION);
  }

  public void setConceptDeclaration(AbstractConceptDeclaration node) {
    super.setReferent(JavaNodeRunConfiguration.CONCEPT_DECLARATION, node);
  }

  public IsApplicableBlock getIsApplicableBlock() {
    return (IsApplicableBlock) this.getChild(IsApplicableBlock.class, JavaNodeRunConfiguration.IS_APPLICABLE_BLOCK);
  }

  public void setIsApplicableBlock(IsApplicableBlock node) {
    super.setChild(JavaNodeRunConfiguration.IS_APPLICABLE_BLOCK, node);
  }

  public static JavaNodeRunConfiguration newInstance(SModel sm, boolean init) {
    return (JavaNodeRunConfiguration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.runConfigurations.structure.JavaNodeRunConfiguration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static JavaNodeRunConfiguration newInstance(SModel sm) {
    return JavaNodeRunConfiguration.newInstance(sm, false);
  }
}
