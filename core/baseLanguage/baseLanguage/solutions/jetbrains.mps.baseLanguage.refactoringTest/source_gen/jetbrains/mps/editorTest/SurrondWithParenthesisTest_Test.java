package jetbrains.mps.editorTest;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.util.plugin.run.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseTestBody;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.plugin.ParenthesisUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import junit.framework.Assert;
import jetbrains.mps.lang.test.matcher.NodesMatcher;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

@MPSLaunch
public class SurrondWithParenthesisTest_Test extends BaseTransformationTest {
  @Test
  public void test_noBinaryOperation() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:914ee49a-537d-44b2-a5fb-bac87a54743d(jetbrains.mps.editorTest)");
    this.runTest("jetbrains.mps.editorTest.SurrondWithParenthesisTest_Test$TestBody", "test_noBinaryOperation", true);
  }

  @Test
  public void test_thereIsAlreadyParenthesis() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:914ee49a-537d-44b2-a5fb-bac87a54743d(jetbrains.mps.editorTest)");
    this.runTest("jetbrains.mps.editorTest.SurrondWithParenthesisTest_Test$TestBody", "test_thereIsAlreadyParenthesis", true);
  }

  @Test
  public void test_treeRotation() throws Throwable {
    this.initTest("${mps_home}/MPS.mpr", "r:914ee49a-537d-44b2-a5fb-bac87a54743d(jetbrains.mps.editorTest)");
    this.runTest("jetbrains.mps.editorTest.SurrondWithParenthesisTest_Test$TestBody", "test_treeRotation", true);
  }

  @MPSLaunch
  public static class TestBody extends BaseTestBody {
    public void test_noBinaryOperation() throws Exception {
      this.addNodeById("3852894662483077200");
      this.addNodeById("3852894662483077206");
      this.addNodeById("3852894662483228699");
      this.addNodeById("3852894662483230132");
      this.addNodeById("3852894662483240397");
      this.addNodeById("3852894662483240422");
      SNode result = ParenthesisUtil.createParenthesis(SNodeOperations.cast(this.getNodeById("3852894662483077204"), "jetbrains.mps.baseLanguage.structure.IntegerConstant"), true);
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("3852894662483077210"), "jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")), ListSequence.fromListAndArray(new ArrayList<SNode>(), result)));
    }

    public void test_thereIsAlreadyParenthesis() throws Exception {
      this.addNodeById("3852894662483077200");
      this.addNodeById("3852894662483077206");
      this.addNodeById("3852894662483228699");
      this.addNodeById("3852894662483230132");
      this.addNodeById("3852894662483240397");
      this.addNodeById("3852894662483240422");
      ParenthesisUtil.createParenthesis(SNodeOperations.cast(this.getNodeById("3852894662483230127"), "jetbrains.mps.baseLanguage.structure.IntegerConstant"), true);
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("3852894662483230135"), "jetbrains.mps.baseLanguage.structure.ExpressionStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("3852894662483230126"), "jetbrains.mps.baseLanguage.structure.ExpressionStatement"))));
    }

    public void test_treeRotation() throws Exception {
      this.addNodeById("3852894662483077200");
      this.addNodeById("3852894662483077206");
      this.addNodeById("3852894662483228699");
      this.addNodeById("3852894662483230132");
      this.addNodeById("3852894662483240397");
      this.addNodeById("3852894662483240422");
      ParenthesisUtil.createParenthesis(SNodeOperations.cast(this.getNodeById("3852894662483240405"), "jetbrains.mps.baseLanguage.structure.IntegerConstant"), false);
      Assert.assertEquals(null, NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("3852894662483240425"), "jetbrains.mps.baseLanguage.structure.ExpressionStatement")), ListSequence.fromListAndArray(new ArrayList<SNode>(), SNodeOperations.cast(this.getNodeById("3852894662483240400"), "jetbrains.mps.baseLanguage.structure.ExpressionStatement"))));
    }
  }
}
