package jetbrains.mps.baseLanguage.index;

/*Generated by MPS */

import com.intellij.util.io.KeyDescriptor;
import java.io.DataOutput;
import java.io.IOException;
import java.io.DataInput;

public class GlobalSNodeIdDescriptor implements KeyDescriptor<GlobalSNodeId> {
  public GlobalSNodeIdDescriptor() {
  }

  public void save(DataOutput out, GlobalSNodeId nodeId) throws IOException {
    GlobalSNodeIdDescriptor.writeString(out, nodeId.getModelReference());
    GlobalSNodeIdDescriptor.writeString(out, nodeId.getNodeId());
  }

  public GlobalSNodeId read(DataInput input) throws IOException {
    return new GlobalSNodeId(GlobalSNodeIdDescriptor.readString(input), GlobalSNodeIdDescriptor.readString(input));
  }

  public int getHashCode(GlobalSNodeId id) {
    return id.hashCode();
  }

  public boolean isEqual(GlobalSNodeId first, GlobalSNodeId second) {
    return first.equals(second);
  }

  private static void writeString(DataOutput out, String text) throws IOException {
    byte[] bytes = text.getBytes();
    out.writeInt(bytes.length);
    out.write(bytes);
  }

  private static String readString(DataInput input) throws IOException {
    int length = input.readInt();
    byte[] bytes = new byte[length];
    input.readFully(bytes);
    return new String(bytes);
  }
}
