package jetbrains.mps.baseLanguage.search;

/*Generated by MPS */

import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.util.Condition;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class SuperMethodCall_InstanceMethodScope extends ClassifierVisibleMembersScope {
  public SuperMethodCall_InstanceMethodScope(@Nullable SNode superclassType, @Nullable SNode contextNode) {
    super(superclassType, contextNode, IClassifiersSearchScope.INSTANCE_METHOD);
  }

  @NotNull
  public List<SNode> getNodes(Condition<SNode> condition) {
    List<SNode> nodes = super.getNodes(condition);
    List<SNode> result = new ArrayList<SNode>();
    for (SNode node : nodes) {
      if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) {
        if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.ClassConcept")) {
          result.add(node);
        }
      }
    }
    return result;
  }
}
