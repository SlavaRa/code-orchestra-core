package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.core.behavior.BaseConcept_Behavior;

public class IBLDeprecatable_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isDeprecated_1224609060727(SNode thisNode) {
    if (SPropertyOperations.getBoolean(thisNode, "isDeprecated")) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.baseLanguage.structure.HasAnnotation")) {
      for (SNode annotation : SLinkOperations.getTargets(SNodeOperations.cast(thisNode, "jetbrains.mps.baseLanguage.structure.HasAnnotation"), "annotation", true)) {
        SNode annotationLink = SLinkOperations.getTarget(annotation, "annotation", false);
        if ((annotation == null) || (annotationLink == null) || SPropertyOperations.getString(annotationLink, "name") == null) {
          continue;
        }
        if (SPropertyOperations.getString(annotationLink, "name").equals("Deprecated")) {
          return true;
        }
      }
    }
    return false;
  }

  public static String virtual_getMessage_1225207468592(SNode thisNode) {
    StringBuilder result = new StringBuilder();
    result.append(BaseConcept_Behavior.call_getPresentation_1213877396640(thisNode));
    result.append(" is deprecated");
    return result.toString();
  }
}
