package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class SuperMethodCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_getInstanceType_8008512149545154471(SNode thisNode) {
    SNode concept = ClassConcept_Behavior.getContextClass_8008512149545173402(thisNode);
    List<SNode> typeVarRefs = new ArrayList<SNode>();
    for (SNode tvd : SLinkOperations.getTargets(concept, "typeVariableDeclaration", true)) {
      ListSequence.fromList(typeVarRefs).addElement(new SuperMethodCall_Behavior.QuotationClass_ypylvf_a0a0a0c0b().createNode(tvd));
    }
    return new SuperMethodCall_Behavior.QuotationClass_ypylvf_a0d0b().createNode(typeVarRefs, concept);
  }

  public static class QuotationClass_ypylvf_a0a0a0c0b {
    public QuotationClass_ypylvf_a0a0a0c0b() {
    }

    public SNode createNode(Object parameter_3) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TypeVariableReference", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.setReferent("typeVariableDeclaration", (SNode) parameter_3);
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_ypylvf_a0d0b {
    public QuotationClass_ypylvf_a0d0b() {
    }

    public SNode createNode(Object parameter_4, Object parameter_5) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_3 = quotedNode_1;
        quotedNode1_3.setReferent("classifier", (SNode) parameter_5);
        {
          List<SNode> nodes = (List<SNode>) parameter_4;
          for (SNode child : nodes) {
            quotedNode_1.addChild("parameter", HUtil.copyIfNecessary(child));
          }
        }
        result = quotedNode1_3;
      }
      return result;
    }
  }
}
