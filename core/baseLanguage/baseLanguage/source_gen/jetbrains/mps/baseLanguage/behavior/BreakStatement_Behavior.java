package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class BreakStatement_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getLoop_1213877377001(SNode thisNode) {
    SNode loopOrSwitch = BreakStatement_Behavior.call_getLoopOrSwitch_1213877377041(thisNode);
    if (SNodeOperations.isInstanceOf(loopOrSwitch, "jetbrains.mps.baseLanguage.structure.AbstractLoopStatement")) {
      return SNodeOperations.cast(loopOrSwitch, "jetbrains.mps.baseLanguage.structure.AbstractLoopStatement");
    }
    return null;
  }

  public static SNode call_getSwitch_1213877377021(SNode thisNode) {
    SNode loopOrSwitch = BreakStatement_Behavior.call_getLoopOrSwitch_1213877377041(thisNode);
    if (SNodeOperations.isInstanceOf(loopOrSwitch, "jetbrains.mps.baseLanguage.structure.SwitchStatement")) {
      return SNodeOperations.cast(loopOrSwitch, "jetbrains.mps.baseLanguage.structure.SwitchStatement");
    }
    return null;
  }

  public static SNode call_getLoopOrSwitch_1213877377041(SNode thisNode) {
    for (SNode item : SNodeOperations.getAncestorsWhereConceptInList(thisNode, new String[]{"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement", "jetbrains.mps.baseLanguage.structure.SwitchStatement"}, false)) {
      if (SNodeOperations.isInstanceOf(item, "jetbrains.mps.baseLanguage.structure.SwitchStatement")) {
        SNode switchStatement = SNodeOperations.cast(item, "jetbrains.mps.baseLanguage.structure.SwitchStatement");
        if ((SLinkOperations.getTarget(thisNode, "loopLabelReference", true) != null)) {
          SNode loopLabel = SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "loopLabelReference", true), "loopLabel", false);
          if ((loopLabel != null)) {
            if (loopLabel == SLinkOperations.getTarget(switchStatement, "switchLabel", true)) {
              return switchStatement;
            }
          }
        } else {
          if (SPropertyOperations.getString(thisNode, "label") == null) {
            return switchStatement;
          } else {
            if (SPropertyOperations.getString(thisNode, "label").equals(SPropertyOperations.getString(switchStatement, "label"))) {
              return switchStatement;
            }
          }
        }
      }
      if (SNodeOperations.isInstanceOf(item, "jetbrains.mps.baseLanguage.structure.AbstractLoopStatement")) {
        SNode loop = SNodeOperations.cast(item, "jetbrains.mps.baseLanguage.structure.AbstractLoopStatement");
        if ((SLinkOperations.getTarget(thisNode, "loopLabelReference", true) != null)) {
          SNode loopLabel = SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode, "loopLabelReference", true), "loopLabel", false);
          if ((loopLabel != null)) {
            if (loopLabel == SLinkOperations.getTarget(loop, "loopLabel", true)) {
              return loop;
            }
          }
        } else {
          if (SPropertyOperations.getString(thisNode, "label") == null) {
            return loop;
          } else {
            if (SPropertyOperations.getString(thisNode, "label").equals(SPropertyOperations.getString(loop, "label"))) {
              return loop;
            }
          }
        }
      }
    }
    return null;
  }

  public static boolean virtual_isGuardClauseStatement_1237547327995(SNode thisNode) {
    return true;
  }
}
