package jetbrains.mps.baseLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class AssignmentExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode virtual_deriveType_1213877435747(SNode thisNode, SNode expression) {
    SNode type = null;
    if (SNodeOperations.getParent(expression) == thisNode && SNodeOperations.hasRole(expression, "jetbrains.mps.baseLanguage.structure.AssignmentExpression", "rValue")) {
      SNode rawType = SNodeOperations.copyNode(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(thisNode, "lValue", true)));
      if (SNodeOperations.isInstanceOf(rawType, "jetbrains.mps.baseLanguage.structure.Type")) {
        type = SNodeOperations.cast(rawType, "jetbrains.mps.baseLanguage.structure.Type");
      } else {
        return null;
      }
    }
    return type;
  }

  public static boolean virtual_isReadAsignment_1215696236033(SNode thisNode) {
    return false;
  }

  public static boolean call_canConvertToLocalVariableDeclaration_1221573334330(SNode thisNode) {
    return SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.baseLanguage.structure.ExpressionStatement");
  }

  public static SNode call_convertToLocalVariableDeclaration_1221573391693(SNode thisNode, String varName) {
    SNode exprStatement = SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.baseLanguage.structure.ExpressionStatement");
    SNode valueType = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(thisNode, "rValue", true));
    if (SNodeOperations.isInstanceOf(valueType, "jetbrains.mps.baseLanguage.structure.NullType")) {
      valueType = new AssignmentExpression_Behavior.QuotationClass_4cbll2_a0a0a2a4().createNode();
    }
    SNode varType = TypeChecker.getInstance().getRuntimeSupport().coerce_(valueType, HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.Type"), true);
    SNode varDeclStmnt = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", null);
    SLinkOperations.setNewChild(varDeclStmnt, "localVariableDeclaration", "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
    SNode ref = SNodeOperations.cast(SLinkOperations.getTarget(thisNode, "lValue", true), "jetbrains.mps.baseLanguage.structure.LocalVariableReference");
    String name = (varName == null ?
      ((SLinkOperations.getTarget(ref, "variableDeclaration", false) == null) ?
        SNodeOperations.getReference(ref, SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableReference", "localVariableDeclaration")).getResolveInfo() :
        SPropertyOperations.getString(SLinkOperations.getTarget(ref, "variableDeclaration", false), "name")
      ) :
      varName
    );
    SPropertyOperations.set(SLinkOperations.getTarget(varDeclStmnt, "localVariableDeclaration", true), "name", name);
    SLinkOperations.setTarget(SLinkOperations.getTarget(varDeclStmnt, "localVariableDeclaration", true), "type", SNodeOperations.copyNode(varType), true);
    SLinkOperations.setTarget(SLinkOperations.getTarget(varDeclStmnt, "localVariableDeclaration", true), "initializer", SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode, "rValue", true)), true);
    SNodeOperations.replaceWithAnother(exprStatement, varDeclStmnt);
    return varDeclStmnt;
  }

  public static class QuotationClass_4cbll2_a0a0a2a4 {
    public QuotationClass_4cbll2_a0a0a2a4() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)"), SNodeId.fromString("~Object")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
