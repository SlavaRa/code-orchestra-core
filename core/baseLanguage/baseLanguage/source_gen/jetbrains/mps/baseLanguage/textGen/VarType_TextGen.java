package jetbrains.mps.baseLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.textGen.TextGenManager;

public class VarType_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    SNode type = null;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
      SNode parent = SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.VariableDeclaration");
      type = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(parent, "initializer", true));
    }
    if ((type == null)) {
      this.append("???");
    } else {
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), type, this.getSNode());
    }
  }
}
