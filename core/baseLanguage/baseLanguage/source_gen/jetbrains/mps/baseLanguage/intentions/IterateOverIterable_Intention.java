package jetbrains.mps.baseLanguage.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.pattern.GeneratedMatchingPattern;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.core.behavior.BaseConcept_Behavior;
import jetbrains.mps.lang.pattern.IMatchingPattern;
import jetbrains.mps.lang.pattern.runtime.PatternUtil;

public class IterateOverIterable_Intention extends BaseIntention implements Intention {
  private static SNodePointer SNODE_POINTER_w1n2qe_a0a0a0a0b0c0a0a0b0a0a0a6 = new SNodePointer("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)", "~Iterable");
  private static SNodePointer SNODE_POINTER_w1n2qe_a0a0a0a0b0c0a0a0a0a0a0h = new SNodePointer("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)", "~Iterable");

  public IterateOverIterable_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.baseLanguage.structure.ExpressionStatement";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return true;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Iterate over Iterable";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node, "expression", true)), new IterateOverIterable_Intention.Pattern_w1n2qe_a1a0a0a0g(), true) != null);
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    {
      GeneratedMatchingPattern pattern_6isygg_a0a = new IterateOverIterable_Intention.Pattern_w1n2qe_a0a0a0a7();
      SNode coercedNode_6isygg_a0a = TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node, "expression", true)), pattern_6isygg_a0a);
      if (coercedNode_6isygg_a0a != null) {
        SNode foreachStatement = SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ForeachStatement", null);
        SNode variableDeclaration = SNodeFactoryOperations.setNewChild(foreachStatement, "variable", "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
        SLinkOperations.setTarget(variableDeclaration, "type", SNodeOperations.copyNode(((SNode) pattern_6isygg_a0a.getFieldValue("patternVar_elem"))), true);
        SPropertyOperations.set(variableDeclaration, "name", NameUtil.toValidIdentifier(BaseConcept_Behavior.call_getPresentation_1213877396640(((SNode) pattern_6isygg_a0a.getFieldValue("patternVar_elem")))));
        SLinkOperations.setTarget(foreachStatement, "iterable", SNodeOperations.copyNode(SLinkOperations.getTarget(node, "expression", true)), true);
        SNodeOperations.insertNextSiblingChild(node, foreachStatement);
        SNodeOperations.deleteNode(node);
      } else {
      }
    }
  }

  public String getLocationString() {
    return "jetbrains.mps.baseLanguage.intentions";
  }

  public static class Pattern_w1n2qe_a1a0a0a0g extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_elem;

    public Pattern_w1n2qe_a1a0a0a0g() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0;
        nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0 = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0.getConceptFqName()))) {
          return false;
        }
        {
          SNodePointer pointer = SNODE_POINTER_w1n2qe_a0a0a0a0b0c0a0a0b0a0a0a6;
          if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0.getReferent("classifier")))) {
            return false;
          }
        }
        {
          String childRole_IterateOverIterable_6isygg__0 = "parameter";
          if (nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0.getChildCount(childRole_IterateOverIterable_6isygg__0) != 1) {
            return false;
          }
          {
            SNode childVar_IterateOverIterable_6isygg_a0a0a0a0a = nodeToMatch_IterateOverIterable_6isygg_a0a0a0a0.getChildren(childRole_IterateOverIterable_6isygg__0).get(0);
            this.patternVar_elem = childVar_IterateOverIterable_6isygg_a0a0a0a0a;
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_elem = (SNode) pattern.getFieldValue("patternVar_elem");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("patternVar_elem".equals(fieldName)) {
        return patternVar_elem;
      }
      return null;
    }

    public void performActions(Object o) {
    }
  }

  public static class Pattern_w1n2qe_a0a0a0a7 extends GeneratedMatchingPattern implements IMatchingPattern {
    /*package*/ SNode patternVar_elem;

    public Pattern_w1n2qe_a0a0a0a7() {
    }

    public boolean match(SNode nodeToMatch) {
      {
        SNode nodeToMatch_IterateOverIterable_6isygg_a0a0a0;
        nodeToMatch_IterateOverIterable_6isygg_a0a0a0 = nodeToMatch;
        if (!("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(nodeToMatch_IterateOverIterable_6isygg_a0a0a0.getConceptFqName()))) {
          return false;
        }
        {
          SNodePointer pointer = SNODE_POINTER_w1n2qe_a0a0a0a0b0c0a0a0a0a0a0h;
          if (!(PatternUtil.matchReferentWithNode(pointer, nodeToMatch_IterateOverIterable_6isygg_a0a0a0.getReferent("classifier")))) {
            return false;
          }
        }
        {
          String childRole_IterateOverIterable_6isygg_ = "parameter";
          if (nodeToMatch_IterateOverIterable_6isygg_a0a0a0.getChildCount(childRole_IterateOverIterable_6isygg_) != 1) {
            return false;
          }
          {
            SNode childVar_IterateOverIterable_6isygg_a0a0a0a = nodeToMatch_IterateOverIterable_6isygg_a0a0a0.getChildren(childRole_IterateOverIterable_6isygg_).get(0);
            this.patternVar_elem = childVar_IterateOverIterable_6isygg_a0a0a0a;
          }
        }
      }
      return true;
    }

    public boolean hasAntiquotations() {
      return false;
    }

    public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {
      if (pattern != null && pattern.getClass() == this.getClass()) {
        patternVar_elem = (SNode) pattern.getFieldValue("patternVar_elem");
      }
    }

    public Object getFieldValue(String fieldName) {
      if ("patternVar_elem".equals(fieldName)) {
        return patternVar_elem;
      }
      return null;
    }

    public void performActions(Object o) {
    }
  }
}
