package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BreakStatement extends Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.BreakStatement";
  public static final String LABEL = "label";
  public static final String LOOP_LABEL_REFERENCE = "loopLabelReference";

  public BreakStatement(SNode node) {
    super(node);
  }

  public String getLabel() {
    return this.getProperty(BreakStatement.LABEL);
  }

  public void setLabel(String value) {
    this.setProperty(BreakStatement.LABEL, value);
  }

  public LoopLabelReference getLoopLabelReference() {
    return (LoopLabelReference) this.getChild(LoopLabelReference.class, BreakStatement.LOOP_LABEL_REFERENCE);
  }

  public void setLoopLabelReference(LoopLabelReference node) {
    super.setChild(BreakStatement.LOOP_LABEL_REFERENCE, node);
  }

  public static BreakStatement newInstance(SModel sm, boolean init) {
    return (BreakStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BreakStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BreakStatement newInstance(SModel sm) {
    return BreakStatement.newInstance(sm, false);
  }
}
