package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LoopLabelReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.LoopLabelReference";
  public static final String LOOP_LABEL = "loopLabel";

  public LoopLabelReference(SNode node) {
    super(node);
  }

  public LoopLabel getLoopLabel() {
    return (LoopLabel) this.getReferent(LoopLabel.class, LoopLabelReference.LOOP_LABEL);
  }

  public void setLoopLabel(LoopLabel node) {
    super.setReferent(LoopLabelReference.LOOP_LABEL, node);
  }

  public static LoopLabelReference newInstance(SModel sm, boolean init) {
    return (LoopLabelReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LoopLabelReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LoopLabelReference newInstance(SModel sm) {
    return LoopLabelReference.newInstance(sm, false);
  }
}
