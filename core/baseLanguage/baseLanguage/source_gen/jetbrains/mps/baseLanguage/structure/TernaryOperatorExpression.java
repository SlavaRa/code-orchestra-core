package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TernaryOperatorExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression";
  public static final String CONDITION = "condition";
  public static final String IF_TRUE = "ifTrue";
  public static final String IF_FALSE = "ifFalse";

  public TernaryOperatorExpression(SNode node) {
    super(node);
  }

  public Expression getCondition() {
    return (Expression) this.getChild(Expression.class, TernaryOperatorExpression.CONDITION);
  }

  public void setCondition(Expression node) {
    super.setChild(TernaryOperatorExpression.CONDITION, node);
  }

  public Expression getIfTrue() {
    return (Expression) this.getChild(Expression.class, TernaryOperatorExpression.IF_TRUE);
  }

  public void setIfTrue(Expression node) {
    super.setChild(TernaryOperatorExpression.IF_TRUE, node);
  }

  public Expression getIfFalse() {
    return (Expression) this.getChild(Expression.class, TernaryOperatorExpression.IF_FALSE);
  }

  public void setIfFalse(Expression node) {
    super.setChild(TernaryOperatorExpression.IF_FALSE, node);
  }

  public static TernaryOperatorExpression newInstance(SModel sm, boolean init) {
    return (TernaryOperatorExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TernaryOperatorExpression newInstance(SModel sm) {
    return TernaryOperatorExpression.newInstance(sm, false);
  }
}
