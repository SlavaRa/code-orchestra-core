package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EnumValueOfExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.EnumValueOfExpression";
  public static final String ENUM_CLASS = "enumClass";
  public static final String VALUE = "value";

  public EnumValueOfExpression(SNode node) {
    super(node);
  }

  public EnumClass getEnumClass() {
    return (EnumClass) this.getReferent(EnumClass.class, EnumValueOfExpression.ENUM_CLASS);
  }

  public void setEnumClass(EnumClass node) {
    super.setReferent(EnumValueOfExpression.ENUM_CLASS, node);
  }

  public Expression getValue() {
    return (Expression) this.getChild(Expression.class, EnumValueOfExpression.VALUE);
  }

  public void setValue(Expression node) {
    super.setChild(EnumValueOfExpression.VALUE, node);
  }

  public static EnumValueOfExpression newInstance(SModel sm, boolean init) {
    return (EnumValueOfExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumValueOfExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EnumValueOfExpression newInstance(SModel sm) {
    return EnumValueOfExpression.newInstance(sm, false);
  }
}
