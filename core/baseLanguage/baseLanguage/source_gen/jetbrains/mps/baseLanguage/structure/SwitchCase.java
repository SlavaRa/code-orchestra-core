package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SwitchCase extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.SwitchCase";
  public static final String EXPRESSION = "expression";
  public static final String BODY = "body";

  public SwitchCase(SNode node) {
    super(node);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, SwitchCase.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(SwitchCase.EXPRESSION, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, SwitchCase.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(SwitchCase.BODY, node);
  }

  public static SwitchCase newInstance(SModel sm, boolean init) {
    return (SwitchCase) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchCase", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SwitchCase newInstance(SModel sm) {
    return SwitchCase.newInstance(sm, false);
  }
}
