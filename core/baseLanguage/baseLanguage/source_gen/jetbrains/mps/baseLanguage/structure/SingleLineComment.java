package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SingleLineComment extends Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.SingleLineComment";
  public static final String COMMENT_PART = "commentPart";

  public SingleLineComment(SNode node) {
    super(node);
  }

  public int getCommentPartsCount() {
    return this.getChildCount(SingleLineComment.COMMENT_PART);
  }

  public Iterator<CommentPart> commentParts() {
    return this.children(CommentPart.class, SingleLineComment.COMMENT_PART);
  }

  public List<CommentPart> getCommentParts() {
    return this.getChildren(CommentPart.class, SingleLineComment.COMMENT_PART);
  }

  public void addCommentPart(CommentPart node) {
    this.addChild(SingleLineComment.COMMENT_PART, node);
  }

  public void insertCommentPart(CommentPart prev, CommentPart node) {
    this.insertChild(prev, SingleLineComment.COMMENT_PART, node);
  }

  public static SingleLineComment newInstance(SModel sm, boolean init) {
    return (SingleLineComment) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SingleLineComment newInstance(SModel sm) {
    return SingleLineComment.newInstance(sm, false);
  }
}
