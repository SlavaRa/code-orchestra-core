package jetbrains.mps.baseLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class UsingStatement extends Statement {
  public static final String concept = "jetbrains.mps.baseLanguage.structure.UsingStatement";
  public static final String BODY = "body";
  public static final String RESOURCE = "resource";

  public UsingStatement(SNode node) {
    super(node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, UsingStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(UsingStatement.BODY, node);
  }

  public int getResourcesCount() {
    return this.getChildCount(UsingStatement.RESOURCE);
  }

  public Iterator<Expression> resources() {
    return this.children(Expression.class, UsingStatement.RESOURCE);
  }

  public List<Expression> getResources() {
    return this.getChildren(Expression.class, UsingStatement.RESOURCE);
  }

  public void addResource(Expression node) {
    this.addChild(UsingStatement.RESOURCE, node);
  }

  public void insertResource(Expression prev, Expression node) {
    this.insertChild(prev, UsingStatement.RESOURCE, node);
  }

  public static UsingStatement newInstance(SModel sm, boolean init) {
    return (UsingStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.UsingStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static UsingStatement newInstance(SModel sm) {
    return UsingStatement.newInstance(sm, false);
  }
}
