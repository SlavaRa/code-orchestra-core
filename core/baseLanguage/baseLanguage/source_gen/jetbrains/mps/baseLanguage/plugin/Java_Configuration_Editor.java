package jetbrains.mps.baseLanguage.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.SettingsEditorEx;
import javax.swing.JLabel;
import jetbrains.mps.execution.configurations.lib.MultiConceptNode_Configuration_Editor;
import jetbrains.mps.execution.lib.JavaRunParameters_Configuration_Editor;
import com.intellij.openapi.util.Disposer;
import org.jetbrains.annotations.NotNull;
import javax.swing.JPanel;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MultiConceptChooser;
import java.awt.BorderLayout;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.JavaConfigOptions;
import com.intellij.openapi.options.ConfigurationException;

public class Java_Configuration_Editor extends SettingsEditorEx<Java_Configuration> {
  private JLabel myLabel;
  private MultiConceptNode_Configuration_Editor myNode;
  private JavaRunParameters_Configuration_Editor myRunParameters;

  public Java_Configuration_Editor(MultiConceptNode_Configuration_Editor node, JavaRunParameters_Configuration_Editor runParameters) {
    myNode = node;
    myRunParameters = runParameters;
  }

  public void disposeEditor() {
    myRunParameters.dispose();
    Disposer.dispose(myNode);
    Disposer.dispose(myRunParameters);
  }

  @NotNull
  public JPanel createEditor() {
    myLabel = new JLabel("Select class:");
    MultiConceptChooser nodeChooser = myNode.createEditor();
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(myLabel, BorderLayout.NORTH);
    panel.add(nodeChooser, BorderLayout.CENTER);

    JavaConfigOptions javaRunParametersEditor = myRunParameters.createEditor();

    JPanel mainPanel = new JPanel(new BorderLayout());
    mainPanel.add(panel, BorderLayout.NORTH);
    mainPanel.add(javaRunParametersEditor, BorderLayout.CENTER);
    return mainPanel;
  }

  public void applyEditorTo(final Java_Configuration configuration) throws ConfigurationException {
    myNode.applyEditorTo(configuration.getNode());
    myRunParameters.applyEditorTo(configuration.getRunParameters());
  }

  public void resetEditorFrom(final Java_Configuration configuration) {
    myNode.resetEditorFrom(configuration.getNode());
    myRunParameters.resetEditorFrom(configuration.getRunParameters());
  }
}
