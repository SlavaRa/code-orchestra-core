package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorCellKeyMap;
import jetbrains.mps.nodeEditor.EditorCellKeyMapAction;
import java.awt.event.KeyEvent;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.behavior.FieldDeclaration_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class FieldDeclaration_keyMap extends EditorCellKeyMap {
  public FieldDeclaration_keyMap() {
    this.setApplicableToEveryModel(false);
    EditorCellKeyMapAction action;
    action = new FieldDeclaration_keyMap.FieldDeclaration_keyMap_Action0();
    this.putAction("alt", "VK_INSERT", action);
    this.putAction("alt", "VK_HELP", action);
    action = new FieldDeclaration_keyMap.FieldDeclaration_keyMap_Action1();
    this.putAction("alt", "VK_INSERT", action);
    this.putAction("alt", "VK_HELP", action);
  }

  public static class FieldDeclaration_keyMap_Action0 extends EditorCellKeyMapAction {
    public FieldDeclaration_keyMap_Action0() {
      this.setShownInPopupMenu(true);
    }

    public String getDescriptionText() {
      return "Generate getter";
    }

    public boolean isMenuAlwaysShown() {
      return false;
    }

    public boolean canExecute(final KeyEvent keyEvent, final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (contextNode.isInstanceOfConcept("jetbrains.mps.baseLanguage.structure.FieldDeclaration")) {
        return this.canExecute_internal(keyEvent, editorContext, contextNode, this.getSelectedNodes(editorContext));
      }
      return false;
    }

    public void execute(final KeyEvent keyEvent, final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(keyEvent, editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }

    private boolean canExecute_internal(final KeyEvent keyEvent, final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      SNode classConcept = SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false);
      return (classConcept != null) && !(FieldDeclaration_Behavior.call_hasGetter_1213877243808(node, classConcept));
    }

    private void execute_internal(final KeyEvent keyEvent, final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      SNode g;
      g = new FieldDeclaration_keyMap.FieldDeclaration_keyMap_Action0.QuotationClass_bsktda_a0a1a5a().createNode(SNodeOperations.copyNode(SLinkOperations.getTarget(node, "type", true)), node, FieldDeclaration_Behavior.call_getGetterName_1213877243782(node));
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false), "method", true)).addElement(g);
    }

    public String getKeyStroke() {
      return "alt INSERT";
    }

    public static class QuotationClass_bsktda_a0a1a5a {
      public QuotationClass_bsktda_a0a1a5a() {
      }

      public SNode createNode(Object parameter_17, Object parameter_18, Object parameter_19) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_1 = null;
        SNode quotedNode_2 = null;
        SNode quotedNode_3 = null;
        SNode quotedNode_4 = null;
        SNode quotedNode_5 = null;
        SNode quotedNode_6 = null;
        SNode quotedNode_7 = null;
        SNode quotedNode_8 = null;
        {
          quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_9 = quotedNode_1;
          quotedNode1_9.setProperty("name", (String) parameter_19);
          {
            quotedNode_2 = (SNode) parameter_17;
            SNode quotedNode1_10;
            if (_parameterValues_129834374.contains(quotedNode_2)) {
              quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_2);
            } else {
              _parameterValues_129834374.add(quotedNode_2);
              quotedNode1_10 = quotedNode_2;
            }
            if (quotedNode1_10 != null) {
              quotedNode_1.addChild("returnType", HUtil.copyIfNecessary(quotedNode1_10));
            }
          }
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_11 = quotedNode_3;
            quotedNode_1.addChild("visibility", quotedNode1_11);
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_12 = quotedNode_4;
            {
              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_13 = quotedNode_5;
              {
                quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_14 = quotedNode_6;
                {
                  quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ThisExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_15 = quotedNode_7;
                  quotedNode_6.addChild("operand", quotedNode1_15);
                }
                {
                  quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_16 = quotedNode_8;
                  quotedNode1_16.setReferent("fieldDeclaration", (SNode) parameter_18);
                  quotedNode_6.addChild("operation", quotedNode1_16);
                }
                quotedNode_5.addChild("expression", quotedNode1_14);
              }
              quotedNode_4.addChild("statement", quotedNode1_13);
            }
            quotedNode_1.addChild("body", quotedNode1_12);
          }
          result = quotedNode1_9;
        }
        return result;
      }
    }
  }

  public static class FieldDeclaration_keyMap_Action1 extends EditorCellKeyMapAction {
    public FieldDeclaration_keyMap_Action1() {
      this.setShownInPopupMenu(true);
    }

    public String getDescriptionText() {
      return "Generate setter";
    }

    public boolean isMenuAlwaysShown() {
      return false;
    }

    public boolean canExecute(final KeyEvent keyEvent, final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      if (contextNode.isInstanceOfConcept("jetbrains.mps.baseLanguage.structure.FieldDeclaration")) {
        return this.canExecute_internal(keyEvent, editorContext, contextNode, this.getSelectedNodes(editorContext));
      }
      return false;
    }

    public void execute(final KeyEvent keyEvent, final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(keyEvent, editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }

    private boolean canExecute_internal(final KeyEvent keyEvent, final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      SNode classConcept = SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false);
      return (classConcept != null) && !(FieldDeclaration_Behavior.call_hasSetter_1213877243871(node, classConcept));
    }

    private void execute_internal(final KeyEvent keyEvent, final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      SNode s;
      s = new FieldDeclaration_keyMap.FieldDeclaration_keyMap_Action1.QuotationClass_bsktda_a0a1a5b().createNode(node, FieldDeclaration_Behavior.call_getSetterName_1213877243861(node), SNodeOperations.copyNode(SLinkOperations.getTarget(node, "type", true)), SPropertyOperations.getString(node, "name"));
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.ClassConcept", false, false), "method", true)).addElement(s);
    }

    public String getKeyStroke() {
      return "alt INSERT";
    }

    public static class QuotationClass_bsktda_a0a1a5b {
      public QuotationClass_bsktda_a0a1a5b() {
      }

      public SNode createNode(Object parameter_25, Object parameter_26, Object parameter_27, Object parameter_28) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_1 = null;
        SNode quotedNode_2 = null;
        SNode quotedNode_3 = null;
        SNode quotedNode_4 = null;
        SNode quotedNode_5 = null;
        SNode quotedNode_6 = null;
        SNode quotedNode_7 = null;
        SNode quotedNode_8 = null;
        SNode quotedNode_9 = null;
        SNode quotedNode_10 = null;
        SNode quotedNode_11 = null;
        SNode quotedNode_12 = null;
        {
          quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_13 = quotedNode_1;
          quotedNode1_13.setProperty("name", (String) parameter_26);
          {
            quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_14 = quotedNode_2;
            quotedNode_1.addChild("returnType", quotedNode1_14);
          }
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_15 = quotedNode_3;
            quotedNode_1.addChild("visibility", quotedNode1_15);
          }
          {
            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_16 = quotedNode_4;
            {
              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
              SNode quotedNode1_17 = quotedNode_6;
              {
                quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression", null, GlobalScope.getInstance(), false);
                SNode quotedNode1_18 = quotedNode_8;
                {
                  quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_19 = quotedNode_9;
                  quotedNode_8.addChild("rValue", quotedNode1_19);
                }
                {
                  quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression", null, GlobalScope.getInstance(), false);
                  SNode quotedNode1_20 = quotedNode_10;
                  {
                    quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ThisExpression", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_21 = quotedNode_11;
                    quotedNode_10.addChild("operand", quotedNode1_21);
                  }
                  {
                    quotedNode_12 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation", null, GlobalScope.getInstance(), false);
                    SNode quotedNode1_22 = quotedNode_12;
                    quotedNode1_22.setReferent("fieldDeclaration", (SNode) parameter_25);
                    quotedNode_10.addChild("operation", quotedNode1_22);
                  }
                  quotedNode_8.addChild("lValue", quotedNode1_20);
                }
                quotedNode_6.addChild("expression", quotedNode1_18);
              }
              quotedNode_4.addChild("statement", quotedNode1_17);
            }
            quotedNode_1.addChild("body", quotedNode1_16);
          }
          {
            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_23 = quotedNode_5;
            quotedNode1_23.setProperty("name", (String) parameter_28);
            {
              quotedNode_7 = (SNode) parameter_27;
              SNode quotedNode1_24;
              if (_parameterValues_129834374.contains(quotedNode_7)) {
                quotedNode1_24 = HUtil.copyIfNecessary(quotedNode_7);
              } else {
                _parameterValues_129834374.add(quotedNode_7);
                quotedNode1_24 = quotedNode_7;
              }
              if (quotedNode1_24 != null) {
                quotedNode_5.addChild("type", HUtil.copyIfNecessary(quotedNode1_24));
              }
            }
            quotedNode_1.addChild("parameter", quotedNode1_23);
          }
          result = quotedNode1_13;
        }
        quotedNode_9.setReferent("variableDeclaration", quotedNode_5);
        return result;
      }
    }
  }
}
