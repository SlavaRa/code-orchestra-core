package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.EditorCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class ParameterDeclaration_Name_Actions {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.RIGHT_TRANSFORM, new ParameterDeclaration_Name_Actions.ParameterDeclaration_Name_Actions_RIGHT_TRANSFORM(node));
  }

  public static class ParameterDeclaration_Name_Actions_RIGHT_TRANSFORM extends EditorCellAction {
    /*package*/ SNode myNode;

    public ParameterDeclaration_Name_Actions_RIGHT_TRANSFORM(SNode node) {
      this.myNode = node;
    }

    public String getDescriptionText() {
      return "add next parameter";
    }

    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }

    public void execute_internal(EditorContext editorContext, SNode node) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
        SNodeFactoryOperations.addNewChild(SNodeOperations.cast(SNodeOperations.getParent(node), "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"), "parameter", "jetbrains.mps.baseLanguage.structure.ParameterDeclaration");
      }
    }
  }
}
