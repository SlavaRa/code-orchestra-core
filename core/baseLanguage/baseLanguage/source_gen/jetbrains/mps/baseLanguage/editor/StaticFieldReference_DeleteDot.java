package jetbrains.mps.baseLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.EditorCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StaticFieldReference_DeleteDot {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new StaticFieldReference_DeleteDot.StaticFieldReference_DeleteDot_DELETE(node));
  }

  public static class StaticFieldReference_DeleteDot_DELETE extends EditorCellAction {
    /*package*/ SNode myNode;

    public StaticFieldReference_DeleteDot_DELETE(SNode node) {
      this.myNode = node;
    }

    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }

    public void execute_internal(EditorContext editorContext, SNode node) {
      SNodeOperations.replaceWithAnother(node, new StaticFieldReference_DeleteDot.StaticFieldReference_DeleteDot_DELETE.QuotationClass_65e73j_a1a0a1a().createNode(SLinkOperations.getTarget(node, "classifier", false)));
    }

    public static class QuotationClass_65e73j_a1a0a1a {
      public QuotationClass_65e73j_a1a0a1a() {
      }

      public SNode createNode(Object parameter_3) {
        SNode result = null;
        Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
        SNode quotedNode_1 = null;
        {
          quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AbstractClassifierReference", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_2 = quotedNode_1;
          quotedNode1_2.setReferent("classifier", (SNode) parameter_3);
          result = quotedNode1_2;
        }
        return result;
      }
    }
  }
}
