package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import javax.swing.JCheckBox;
import java.awt.Frame;
import jetbrains.mps.nodeEditor.EditorContext;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import javax.swing.JPanel;

public class IntroduceConstantDialog extends IntroduceVariableDialog {
  private IntroduceConstantRefactoring myRefactoring;
  private JCheckBox myReplaceAll = null;

  public IntroduceConstantDialog(Frame frame, IntroduceConstantRefactoring refactoring, EditorContext editorContext) {
    super("Introduce Constant", frame, editorContext);
    this.setMinimumSize(new Dimension(150, 250));
    this.myRefactoring = refactoring;
    this.initPanel();
    int gridy = 1;
    GridBagConstraints c;
    c = new GridBagConstraints();
    c.fill = GridBagConstraints.HORIZONTAL;
    c.gridx = 0;
    c.gridy = gridy++;
    addVisibilityPanel(c);
    if (getRefactoring().hasDuplicates()) {
      addReplacingAll(gridy++);
    }
    c = new GridBagConstraints();
    c.gridy = gridy;
    c.weighty = 1;
    this.myPanel.add(new JPanel(), c);
  }

  public IntroduceVariableRefactoring getRefactoring() {
    return this.myRefactoring;
  }
}
