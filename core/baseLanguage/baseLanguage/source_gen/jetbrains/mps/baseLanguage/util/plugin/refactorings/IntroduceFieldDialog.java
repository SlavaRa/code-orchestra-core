package jetbrains.mps.baseLanguage.util.plugin.refactorings;

/*Generated by MPS */

import java.awt.Frame;
import jetbrains.mps.nodeEditor.EditorContext;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.JPanel;
import javax.swing.JComponent;
import java.awt.GridBagLayout;
import javax.swing.border.TitledBorder;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;
import javax.swing.event.ChangeListener;
import javax.swing.event.ChangeEvent;

public class IntroduceFieldDialog extends IntroduceVariableDialog {
  private IntroduceFieldRefactoring myRefactoring;

  public IntroduceFieldDialog(Frame frame, IntroduceFieldRefactoring refactoring, EditorContext editorContext) {
    super("Introduce Field", frame, editorContext);
    this.setMinimumSize(new Dimension(350, 250));
    this.myRefactoring = refactoring;
    this.initPanel();
    int gridy = 1;
    GridBagConstraints c;
    c = new GridBagConstraints();
    c.fill = GridBagConstraints.HORIZONTAL;
    c.gridx = 1;
    c.gridy = 0;
    addIsFinal(c);
    c = new GridBagConstraints();
    c.fill = GridBagConstraints.BOTH;
    c.insets = new Insets(3, 3, 3, 3);
    c.gridx = 0;
    c.gridy = gridy;
    c.weightx = 1;
    c.weighty = 0;
    this.myPanel.add(this.createInitDestinationPanel(), c);
    c = new GridBagConstraints();
    c.fill = GridBagConstraints.BOTH;
    c.gridx = 1;
    c.gridy = gridy++;
    addVisibilityPanel(c);
    if (getRefactoring().hasDuplicates()) {
      addReplacingAll(gridy++);
    }
    c = new GridBagConstraints();
    c.gridy = gridy;
    c.weighty = 1;
    this.myPanel.add(new JPanel(), c);
  }

  public IntroduceVariableRefactoring getRefactoring() {
    return this.myRefactoring;
  }

  private JComponent createInitDestinationPanel() {
    JPanel result = new JPanel(new GridBagLayout());
    result.setBorder(new TitledBorder("Initialize in"));
    ButtonGroup group = new ButtonGroup();
    JRadioButton method = this.createButton(0, FieldInitializationPlace.METHOD, result, group);
    JRadioButton field = this.createButton(1, FieldInitializationPlace.FIELD, result, group);
    JRadioButton contructor = this.createButton(2, FieldInitializationPlace.CONSTRUCTOR, result, group);
    if (this.myRefactoring.isInitialyzeInFieldAvailable()) {
      field.setSelected(true);
    } else {
      field.setEnabled(false);
      contructor.setEnabled(false);
    }
    method.setSelected(true);
    return result;
  }

  private JRadioButton createButton(int y, final FieldInitializationPlace place, JPanel result, ButtonGroup group) {
    final JRadioButton button = new JRadioButton(place.getName());
    GridBagConstraints c = new GridBagConstraints();
    c.anchor = GridBagConstraints.LINE_START;
    c.gridy = y;
    c.weightx = 1.0;
    result.add(button, c);
    group.add(button);
    button.addChangeListener(new ChangeListener() {
      public void stateChanged(ChangeEvent p0) {
        if (button.isSelected()) {
          IntroduceFieldDialog.this.myRefactoring.setFieldInitializationPlace(place);
        }
      }
    });
    return button;
  }
}
