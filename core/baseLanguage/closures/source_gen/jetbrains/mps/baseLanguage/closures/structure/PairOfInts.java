package jetbrains.mps.baseLanguage.closures.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PairOfInts extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.closures.structure.PairOfInts";
  public static final String FIRST = "first";
  public static final String SECOND = "second";

  public PairOfInts(SNode node) {
    super(node);
  }

  public int getFirst() {
    return this.getIntegerProperty(PairOfInts.FIRST);
  }

  public void setFirst(int value) {
    this.setIntegerProperty(PairOfInts.FIRST, value);
  }

  public int getSecond() {
    return this.getIntegerProperty(PairOfInts.SECOND);
  }

  public void setSecond(int value) {
    this.setIntegerProperty(PairOfInts.SECOND, value);
  }

  public static PairOfInts newInstance(SModel sm, boolean init) {
    return (PairOfInts) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.closures.structure.PairOfInts", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PairOfInts newInstance(SModel sm) {
    return PairOfInts.newInstance(sm, false);
  }
}
