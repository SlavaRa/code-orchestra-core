package jetbrains.mps.baseLanguage.closures.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"jetbrains.mps.baseLanguage.closures.structure.AbstractFunctionType", "jetbrains.mps.baseLanguage.closures.structure.ClosureControlStatement", "jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral", "jetbrains.mps.baseLanguage.closures.structure.CompactInvokeFunctionExpression", "jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionContainer", "jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionDeclaration", "jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral", "jetbrains.mps.baseLanguage.closures.structure.FunctionMethodDeclaration", "jetbrains.mps.baseLanguage.closures.structure.FunctionType", "jetbrains.mps.baseLanguage.closures.structure.InvokeExpression", "jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionExpression", "jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation", "jetbrains.mps.baseLanguage.closures.structure.PairOfInts", "jetbrains.mps.baseLanguage.closures.structure.StringPropertyHolder", "jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral", "jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType", "jetbrains.mps.baseLanguage.closures.structure.YieldAllStatement", "jetbrains.mps.baseLanguage.closures.structure.YieldStatement"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 8:
        return new FunctionType_BehaviorDescriptor();
      case 10:
        return new InvokeFunctionExpression_BehaviorDescriptor();
      case 2:
        return new ClosureLiteral_BehaviorDescriptor();
      case 9:
        return new InvokeExpression_BehaviorDescriptor();
      case 17:
        return new YieldStatement_BehaviorDescriptor();
      case 12:
        return new PairOfInts_BehaviorDescriptor();
      case 13:
        return new StringPropertyHolder_BehaviorDescriptor();
      case 11:
        return new InvokeFunctionOperation_BehaviorDescriptor();
      case 16:
        return new YieldAllStatement_BehaviorDescriptor();
      case 14:
        return new UnrestrictedClosureLiteral_BehaviorDescriptor();
      case 1:
        return new ClosureControlStatement_BehaviorDescriptor();
      case 6:
        return new ControlClosureLiteral_BehaviorDescriptor();
      case 4:
        return new ControlAbstractionContainer_BehaviorDescriptor();
      case 5:
        return new ControlAbstractionDeclaration_BehaviorDescriptor();
      case 15:
        return new UnrestrictedFunctionType_BehaviorDescriptor();
      case 3:
        return new CompactInvokeFunctionExpression_BehaviorDescriptor();
      case 7:
        return new FunctionMethodDeclaration_BehaviorDescriptor();
      case 0:
        return new AbstractFunctionType_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
