package jetbrains.mps.baseLanguage.closures.scripts;

/*Generated by MPS */

import jetbrains.mps.lang.script.runtime.BaseMigrationScript;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.script.runtime.AbstractMigrationRefactoring;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class RemoveWildcardsFromUnboundParams_MigrationScript extends BaseMigrationScript {
  public RemoveWildcardsFromUnboundParams_MigrationScript(IOperationContext operationContext) {
    super("Remove Wildcards from Unbound Params");
    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {
      public String getName() {
        return "remove wildcards from unbound params";
      }

      public String getAdditionalInfo() {
        return "remove wildcards from unbound params";
      }

      public String getFqNameOfConceptToSearchInstances() {
        return "jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration";
      }

      public boolean isApplicableInstanceNode(SNode node) {
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, "type", true), "jetbrains.mps.baseLanguage.structure.WildCardType");
      }

      public void doUpdateInstanceNode(SNode node) {
        SLinkOperations.setNewChild(node, "type", "jetbrains.mps.baseLanguage.structure.UndefinedType");
      }

      public boolean isShowAsIntention() {
        return true;
      }
    });
  }
}
