package jetbrains.mps.baseLanguage.javadoc.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.core.behavior.INamedConcept_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.textGen.TextGenManager;

public class MethodDocReference_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    SNode method = SLinkOperations.getTarget(node, "methodDeclaration", false);
    this.append(INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.getAncestor(method, "jetbrains.mps.baseLanguage.structure.Classifier", false, false)));
    this.append("#");
    this.append(SPropertyOperations.getString(method, "name"));
    this.append("(");
    for (int i = 0; i < ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).count(); i++) {
      if (i != 0) {
        this.append(", ");
      }
      TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(method, "parameter", true)).getElement(i), "type", true), this.getSNode());
    }
    this.append(")");
  }
}
