package jetbrains.mps.lang.behavior.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class ConstraintsUtil {
  private ConstraintsUtil() {
  }

  public static boolean isInsideOfBehavior(SNode node) {
    return (SNodeOperations.getAncestor(node, "jetbrains.mps.lang.behavior.structure.ConceptBehavior", true, false) != null);
  }

  public static boolean isInsideOfNonStaticBehaviorContext(SNode node) {
    if (!(isInsideOfBehavior(node))) {
      return false;
    }

    return ListSequence.fromList(SNodeOperations.getAncestorsWhereConceptInList(node, new String[]{"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration", "jetbrains.mps.lang.behavior.structure.ConceptConstructorDeclaration"}, false)).isNotEmpty();
  }
}
