package jetbrains.mps.lang.behavior.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class LocalBehaviorMethodCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_isVirtualMethodCall_7148319044498537586(SNode thisNode) {
    return (LocalBehaviorMethodCall_Behavior.call_getVirtualMethodDeclaration_7148319044498527612(thisNode) != null);
  }

  public static SNode call_getVirtualMethodDeclaration_7148319044498527612(SNode thisNode) {
    SNode methodDeclaration = SLinkOperations.getTarget(thisNode, "baseMethodDeclaration", false);
    if ((SLinkOperations.getTarget(methodDeclaration, "overriddenMethod", false) != null)) {
      return SLinkOperations.getTarget(methodDeclaration, "overriddenMethod", false);
    } else
    if (SPropertyOperations.getBoolean(methodDeclaration, "isVirtual")) {
      return methodDeclaration;
    } else {
      return null;
    }
  }

  public static boolean virtual_isLegalAsStatement_1239211900844(SNode thisNode) {
    return true;
  }
}
