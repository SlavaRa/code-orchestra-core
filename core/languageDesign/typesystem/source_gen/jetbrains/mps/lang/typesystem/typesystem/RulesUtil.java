package jetbrains.mps.lang.typesystem.typesystem;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class RulesUtil {
  public static final Object MAY_BE_VARIABLE = new Object();

  public RulesUtil() {
  }

  public static boolean withinInferenceItem(SNode node) {
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.InferenceRule", false, false) != null)) {
      return true;
    }
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.InequationReplacementRule", false, false) != null)) {
      return true;
    }
    List<SNode> annotations = SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", false, false), "annotation", true);
    for (SNode annotation : annotations) {
      if (SLinkOperations.getTarget(annotation, "annotation", false) == SLinkOperations.getTarget(new RulesUtil.QuotationClass_yxkngc_a0a0a0d0a().createNode(), "classifier", false)) {
        return true;
      }
    }
    return false;
  }

  public static boolean withinTypeManagingItem(SNode node) {
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.AbstractOverloadedOpsTypeRule", false, false) != null)) {
      return true;
    }
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.SubtypingRule", false, false) != null)) {
      return true;
    }
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.ComparisonRule", false, false) != null)) {
      return true;
    }
    return false;
  }

  public static boolean withinCheckingItem(SNode node) {
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule", true, false) != null)) {
      return true;
    }
    if ((SNodeOperations.getAncestor(node, "jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule", true, false) != null)) {
      return true;
    }
    List<SNode> annotations = SLinkOperations.getTargets(SNodeOperations.getAncestor(node, "jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration", true, false), "annotation", true);
    for (SNode annotation : annotations) {
      if (SLinkOperations.getTarget(annotation, "annotation", false) == SLinkOperations.getTarget(new RulesUtil.QuotationClass_yxkngc_a0a0a0a3a2().createNode(), "classifier", false) || SLinkOperations.getTarget(annotation, "annotation", false) == SLinkOperations.getTarget(new RulesUtil.QuotationClass_yxkngc_a0a0a0a3a2_0().createNode(), "classifier", false)) {
        return true;
      }
    }
    return false;
  }

  public static class QuotationClass_yxkngc_a0a0a0d0a {
    public QuotationClass_yxkngc_a0a0a0d0a() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902b5(jetbrains.mps.lang.typesystem.dependencies)"), SNodeId.fromString("1196177069451")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_yxkngc_a0a0a0a3a2 {
    public QuotationClass_yxkngc_a0a0a0a3a2() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902b5(jetbrains.mps.lang.typesystem.dependencies)"), SNodeId.fromString("1196177069451")));
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_yxkngc_a0a0a0a3a2_0 {
    public QuotationClass_yxkngc_a0a0a0a3a2_0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("r:00000000-0000-4000-0000-011c895902b5(jetbrains.mps.lang.typesystem.dependencies)"), SNodeId.fromString("1223644778913")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
