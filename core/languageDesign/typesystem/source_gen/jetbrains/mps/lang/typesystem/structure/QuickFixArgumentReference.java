package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class QuickFixArgumentReference extends Expression {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.QuickFixArgumentReference";
  public static final String QUICK_FIX_ARGUMENT = "quickFixArgument";

  public QuickFixArgumentReference(SNode node) {
    super(node);
  }

  public QuickFixArgument getQuickFixArgument() {
    return (QuickFixArgument) this.getReferent(QuickFixArgument.class, QuickFixArgumentReference.QUICK_FIX_ARGUMENT);
  }

  public void setQuickFixArgument(QuickFixArgument node) {
    super.setReferent(QuickFixArgumentReference.QUICK_FIX_ARGUMENT, node);
  }

  public static QuickFixArgumentReference newInstance(SModel sm, boolean init) {
    return (QuickFixArgumentReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.QuickFixArgumentReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static QuickFixArgumentReference newInstance(SModel sm) {
    return QuickFixArgumentReference.newInstance(sm, false);
  }
}
