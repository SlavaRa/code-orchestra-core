package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyNameTarget extends MessageTarget {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.PropertyNameTarget";
  public static final String PROPERTY_NAME = "propertyName";

  public PropertyNameTarget(SNode node) {
    super(node);
  }

  public Expression getPropertyName() {
    return (Expression) this.getChild(Expression.class, PropertyNameTarget.PROPERTY_NAME);
  }

  public void setPropertyName(Expression node) {
    super.setChild(PropertyNameTarget.PROPERTY_NAME, node);
  }

  public static PropertyNameTarget newInstance(SModel sm, boolean init) {
    return (PropertyNameTarget) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.PropertyNameTarget", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyNameTarget newInstance(SModel sm) {
    return PropertyNameTarget.newInstance(sm, false);
  }
}
