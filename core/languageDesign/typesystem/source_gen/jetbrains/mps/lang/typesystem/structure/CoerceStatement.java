package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CoerceStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.CoerceStatement";
  public static final String STRONG = "strong";
  public static final String PATTERN = "pattern";
  public static final String NODE_TO_COERCE = "nodeToCoerce";
  public static final String BODY = "body";
  public static final String ELSE_CLAUSE = "elseClause";

  public CoerceStatement(SNode node) {
    super(node);
  }

  public InequalityProperty getStrong() {
    String value = super.getProperty(CoerceStatement.STRONG);
    return InequalityProperty.parseValue(value);
  }

  public void setStrong(InequalityProperty value) {
    super.setProperty(CoerceStatement.STRONG, value.getValueAsString());
  }

  public ApplicableNodeCondition getPattern() {
    return (ApplicableNodeCondition) this.getChild(ApplicableNodeCondition.class, CoerceStatement.PATTERN);
  }

  public void setPattern(ApplicableNodeCondition node) {
    super.setChild(CoerceStatement.PATTERN, node);
  }

  public Expression getNodeToCoerce() {
    return (Expression) this.getChild(Expression.class, CoerceStatement.NODE_TO_COERCE);
  }

  public void setNodeToCoerce(Expression node) {
    super.setChild(CoerceStatement.NODE_TO_COERCE, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, CoerceStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(CoerceStatement.BODY, node);
  }

  public StatementList getElseClause() {
    return (StatementList) this.getChild(StatementList.class, CoerceStatement.ELSE_CLAUSE);
  }

  public void setElseClause(StatementList node) {
    super.setChild(CoerceStatement.ELSE_CLAUSE, node);
  }

  public static CoerceStatement newInstance(SModel sm, boolean init) {
    return (CoerceStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.CoerceStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CoerceStatement newInstance(SModel sm) {
    return CoerceStatement.newInstance(sm, false);
  }
}
