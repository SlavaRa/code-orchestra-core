package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GetOperationType extends Expression {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.GetOperationType";
  public static final String OPERATION = "operation";
  public static final String LEFT_OPERAND_TYPE = "leftOperandType";
  public static final String RIGHT_OPERAND_TYPE = "rightOperandType";

  public GetOperationType(SNode node) {
    super(node);
  }

  public Expression getOperation() {
    return (Expression) this.getChild(Expression.class, GetOperationType.OPERATION);
  }

  public void setOperation(Expression node) {
    super.setChild(GetOperationType.OPERATION, node);
  }

  public Expression getLeftOperandType() {
    return (Expression) this.getChild(Expression.class, GetOperationType.LEFT_OPERAND_TYPE);
  }

  public void setLeftOperandType(Expression node) {
    super.setChild(GetOperationType.LEFT_OPERAND_TYPE, node);
  }

  public Expression getRightOperandType() {
    return (Expression) this.getChild(Expression.class, GetOperationType.RIGHT_OPERAND_TYPE);
  }

  public void setRightOperandType(Expression node) {
    super.setChild(GetOperationType.RIGHT_OPERAND_TYPE, node);
  }

  public static GetOperationType newInstance(SModel sm, boolean init) {
    return (GetOperationType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.GetOperationType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GetOperationType newInstance(SModel sm) {
    return GetOperationType.newInstance(sm, false);
  }
}
