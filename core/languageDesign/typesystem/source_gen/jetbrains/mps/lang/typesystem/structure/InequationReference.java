package jetbrains.mps.lang.typesystem.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InequationReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.typesystem.structure.InequationReference";
  public static final String INEQUATION = "inequation";

  public InequationReference(SNode node) {
    super(node);
  }

  public AbstractInequationStatement getInequation() {
    return (AbstractInequationStatement) this.getReferent(AbstractInequationStatement.class, InequationReference.INEQUATION);
  }

  public void setInequation(AbstractInequationStatement node) {
    super.setReferent(InequationReference.INEQUATION, node);
  }

  public static InequationReference newInstance(SModel sm, boolean init) {
    return (InequationReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.InequationReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InequationReference newInstance(SModel sm) {
    return InequationReference.newInstance(sm, false);
  }
}
