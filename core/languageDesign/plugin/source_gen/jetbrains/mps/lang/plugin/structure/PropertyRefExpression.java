package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.PropertyDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyRefExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.PropertyRefExpression";
  public static final String PROPERTY_DECLARATION = "propertyDeclaration";
  public static final String NODE_EXPR = "nodeExpr";

  public PropertyRefExpression(SNode node) {
    super(node);
  }

  public PropertyDeclaration getPropertyDeclaration() {
    return (PropertyDeclaration) this.getReferent(PropertyDeclaration.class, PropertyRefExpression.PROPERTY_DECLARATION);
  }

  public void setPropertyDeclaration(PropertyDeclaration node) {
    super.setReferent(PropertyRefExpression.PROPERTY_DECLARATION, node);
  }

  public Expression getNodeExpr() {
    return (Expression) this.getChild(Expression.class, PropertyRefExpression.NODE_EXPR);
  }

  public void setNodeExpr(Expression node) {
    super.setChild(PropertyRefExpression.NODE_EXPR, node);
  }

  public static PropertyRefExpression newInstance(SModel sm, boolean init) {
    return (PropertyRefExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.PropertyRefExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyRefExpression newInstance(SModel sm) {
    return PropertyRefExpression.newInstance(sm, false);
  }
}
