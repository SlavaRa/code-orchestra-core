package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ProjectPluginType extends BaseClassifierType {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ProjectPluginType";
  public static final String PLUGIN = "plugin";

  public ProjectPluginType(SNode node) {
    super(node);
  }

  public ProjectPluginDeclaration getPlugin() {
    return (ProjectPluginDeclaration) this.getReferent(ProjectPluginDeclaration.class, ProjectPluginType.PLUGIN);
  }

  public void setPlugin(ProjectPluginDeclaration node) {
    super.setReferent(ProjectPluginType.PLUGIN, node);
  }

  public static ProjectPluginType newInstance(SModel sm, boolean init) {
    return (ProjectPluginType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ProjectPluginType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ProjectPluginType newInstance(SModel sm) {
    return ProjectPluginType.newInstance(sm, false);
  }
}
