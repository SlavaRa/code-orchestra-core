package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AddKeystrokeStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement";
  public static final String STROKE = "stroke";

  public AddKeystrokeStatement(SNode node) {
    super(node);
  }

  public Expression getStroke() {
    return (Expression) this.getChild(Expression.class, AddKeystrokeStatement.STROKE);
  }

  public void setStroke(Expression node) {
    super.setChild(AddKeystrokeStatement.STROKE, node);
  }

  public static AddKeystrokeStatement newInstance(SModel sm, boolean init) {
    return (AddKeystrokeStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AddKeystrokeStatement newInstance(SModel sm) {
    return AddKeystrokeStatement.newInstance(sm, false);
  }
}
