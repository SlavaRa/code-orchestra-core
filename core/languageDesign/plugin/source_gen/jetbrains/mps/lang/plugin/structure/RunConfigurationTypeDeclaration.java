package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunConfigurationTypeDeclaration extends BaseConcept implements INamedConcept, ICheckedNamePolicy {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.RunConfigurationTypeDeclaration";
  public static final String ICON_PATH = "iconPath";
  public static final String CAPTION = "caption";
  public static final String DESCRIPTION = "description";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public RunConfigurationTypeDeclaration(SNode node) {
    super(node);
  }

  public String getIconPath() {
    return this.getProperty(RunConfigurationTypeDeclaration.ICON_PATH);
  }

  public void setIconPath(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.ICON_PATH, value);
  }

  public String getCaption() {
    return this.getProperty(RunConfigurationTypeDeclaration.CAPTION);
  }

  public void setCaption(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.CAPTION, value);
  }

  public String getDescription() {
    return this.getProperty(RunConfigurationTypeDeclaration.DESCRIPTION);
  }

  public void setDescription(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.DESCRIPTION, value);
  }

  public String getName() {
    return this.getProperty(RunConfigurationTypeDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(RunConfigurationTypeDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(RunConfigurationTypeDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(RunConfigurationTypeDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(RunConfigurationTypeDeclaration.VIRTUAL_PACKAGE, value);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(RunConfigurationTypeDeclaration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, RunConfigurationTypeDeclaration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, RunConfigurationTypeDeclaration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(RunConfigurationTypeDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, RunConfigurationTypeDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public static RunConfigurationTypeDeclaration newInstance(SModel sm, boolean init) {
    return (RunConfigurationTypeDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.RunConfigurationTypeDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunConfigurationTypeDeclaration newInstance(SModel sm) {
    return RunConfigurationTypeDeclaration.newInstance(sm, false);
  }
}
