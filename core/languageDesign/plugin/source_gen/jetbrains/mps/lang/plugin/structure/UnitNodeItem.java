package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class UnitNodeItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.UnitNodeItem";
  public static final String UNIT_CONCEPT = "unitConcept";
  public static final String GET_UNIT_NAME = "getUnitName";

  public UnitNodeItem(SNode node) {
    super(node);
  }

  public ConceptDeclaration getUnitConcept() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, UnitNodeItem.UNIT_CONCEPT);
  }

  public void setUnitConcept(ConceptDeclaration node) {
    super.setReferent(UnitNodeItem.UNIT_CONCEPT, node);
  }

  public ConceptFunction_GetUnitName getGetUnitName() {
    return (ConceptFunction_GetUnitName) this.getChild(ConceptFunction_GetUnitName.class, UnitNodeItem.GET_UNIT_NAME);
  }

  public void setGetUnitName(ConceptFunction_GetUnitName node) {
    super.setChild(UnitNodeItem.GET_UNIT_NAME, node);
  }

  public static UnitNodeItem newInstance(SModel sm, boolean init) {
    return (UnitNodeItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.UnitNodeItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static UnitNodeItem newInstance(SModel sm) {
    return UnitNodeItem.newInstance(sm, false);
  }
}
