package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReportErrorStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ReportErrorStatement";
  public static final String ERROR = "error";

  public ReportErrorStatement(SNode node) {
    super(node);
  }

  public Expression getError() {
    return (Expression) this.getChild(Expression.class, ReportErrorStatement.ERROR);
  }

  public void setError(Expression node) {
    super.setChild(ReportErrorStatement.ERROR, node);
  }

  public static ReportErrorStatement newInstance(SModel sm, boolean init) {
    return (ReportErrorStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ReportErrorStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReportErrorStatement newInstance(SModel sm) {
    return ReportErrorStatement.newInstance(sm, false);
  }
}
