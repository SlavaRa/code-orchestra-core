package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ToolbarCreator extends Expression {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ToolbarCreator";
  public static final String IS_HORIZONTAL = "isHorizontal";
  public static final String GROUP = "group";

  public ToolbarCreator(SNode node) {
    super(node);
  }

  public boolean getIsHorizontal() {
    return this.getBooleanProperty(ToolbarCreator.IS_HORIZONTAL);
  }

  public void setIsHorizontal(boolean value) {
    this.setBooleanProperty(ToolbarCreator.IS_HORIZONTAL, value);
  }

  public Expression getGroup() {
    return (Expression) this.getChild(Expression.class, ToolbarCreator.GROUP);
  }

  public void setGroup(Expression node) {
    super.setChild(ToolbarCreator.GROUP, node);
  }

  public static ToolbarCreator newInstance(SModel sm, boolean init) {
    return (ToolbarCreator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ToolbarCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ToolbarCreator newInstance(SModel sm) {
    return ToolbarCreator.newInstance(sm, false);
  }
}
