package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.baseLanguage.classifiers.structure.IClassifier;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ClassConcept;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration;
import java.util.List;
import jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FileGeneratorDeclaration extends BaseConcept implements IClassifier {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.FileGeneratorDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXTENDED_CLASS = "extendedClass";
  public static final String GENERATE_BLOCK = "generateBlock";
  public static final String IS_DEFAULT_BLOCK = "isDefaultBlock";
  public static final String OVERRIDES_DEFAULT_BLOCK = "overridesDefaultBlock";
  public static final String METHOD = "method";
  public static final String FIELD = "field";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public FileGeneratorDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(FileGeneratorDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(FileGeneratorDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(FileGeneratorDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(FileGeneratorDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(FileGeneratorDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(FileGeneratorDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(FileGeneratorDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(FileGeneratorDeclaration.VIRTUAL_PACKAGE, value);
  }

  public ClassConcept getExtendedClass() {
    return (ClassConcept) this.getReferent(ClassConcept.class, FileGeneratorDeclaration.EXTENDED_CLASS);
  }

  public void setExtendedClass(ClassConcept node) {
    super.setReferent(FileGeneratorDeclaration.EXTENDED_CLASS, node);
  }

  public GenerateFileBlock getGenerateBlock() {
    return (GenerateFileBlock) this.getChild(GenerateFileBlock.class, FileGeneratorDeclaration.GENERATE_BLOCK);
  }

  public void setGenerateBlock(GenerateFileBlock node) {
    super.setChild(FileGeneratorDeclaration.GENERATE_BLOCK, node);
  }

  public IsDefaultBlock getIsDefaultBlock() {
    return (IsDefaultBlock) this.getChild(IsDefaultBlock.class, FileGeneratorDeclaration.IS_DEFAULT_BLOCK);
  }

  public void setIsDefaultBlock(IsDefaultBlock node) {
    super.setChild(FileGeneratorDeclaration.IS_DEFAULT_BLOCK, node);
  }

  public OverridesDefaultBlock getOverridesDefaultBlock() {
    return (OverridesDefaultBlock) this.getChild(OverridesDefaultBlock.class, FileGeneratorDeclaration.OVERRIDES_DEFAULT_BLOCK);
  }

  public void setOverridesDefaultBlock(OverridesDefaultBlock node) {
    super.setChild(FileGeneratorDeclaration.OVERRIDES_DEFAULT_BLOCK, node);
  }

  public int getMethodsCount() {
    return this.getChildCount(FileGeneratorDeclaration.METHOD);
  }

  public Iterator<DefaultClassifierMethodDeclaration> methods() {
    return this.children(DefaultClassifierMethodDeclaration.class, FileGeneratorDeclaration.METHOD);
  }

  public List<DefaultClassifierMethodDeclaration> getMethods() {
    return this.getChildren(DefaultClassifierMethodDeclaration.class, FileGeneratorDeclaration.METHOD);
  }

  public void addMethod(DefaultClassifierMethodDeclaration node) {
    this.addChild(FileGeneratorDeclaration.METHOD, node);
  }

  public void insertMethod(DefaultClassifierMethodDeclaration prev, DefaultClassifierMethodDeclaration node) {
    this.insertChild(prev, FileGeneratorDeclaration.METHOD, node);
  }

  public int getFieldsCount() {
    return this.getChildCount(FileGeneratorDeclaration.FIELD);
  }

  public Iterator<DefaultClassifierFieldDeclaration> fields() {
    return this.children(DefaultClassifierFieldDeclaration.class, FileGeneratorDeclaration.FIELD);
  }

  public List<DefaultClassifierFieldDeclaration> getFields() {
    return this.getChildren(DefaultClassifierFieldDeclaration.class, FileGeneratorDeclaration.FIELD);
  }

  public void addField(DefaultClassifierFieldDeclaration node) {
    this.addChild(FileGeneratorDeclaration.FIELD, node);
  }

  public void insertField(DefaultClassifierFieldDeclaration prev, DefaultClassifierFieldDeclaration node) {
    this.insertChild(prev, FileGeneratorDeclaration.FIELD, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(FileGeneratorDeclaration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, FileGeneratorDeclaration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, FileGeneratorDeclaration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(FileGeneratorDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, FileGeneratorDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public static FileGeneratorDeclaration newInstance(SModel sm, boolean init) {
    return (FileGeneratorDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.FileGeneratorDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FileGeneratorDeclaration newInstance(SModel sm) {
    return FileGeneratorDeclaration.newInstance(sm, false);
  }
}
