package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GenerationListenerDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.GenerationListenerDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String BEFORE_GENERATION_BLOCK = "beforeGenerationBlock";
  public static final String MODELS_GENERATED_BLOCK = "modelsGeneratedBlock";
  public static final String AFTER_GENERATION_BLOCK = "afterGenerationBlock";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public GenerationListenerDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(GenerationListenerDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(GenerationListenerDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(GenerationListenerDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(GenerationListenerDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(GenerationListenerDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(GenerationListenerDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(GenerationListenerDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(GenerationListenerDeclaration.VIRTUAL_PACKAGE, value);
  }

  public BeforeGenerationBlock getBeforeGenerationBlock() {
    return (BeforeGenerationBlock) this.getChild(BeforeGenerationBlock.class, GenerationListenerDeclaration.BEFORE_GENERATION_BLOCK);
  }

  public void setBeforeGenerationBlock(BeforeGenerationBlock node) {
    super.setChild(GenerationListenerDeclaration.BEFORE_GENERATION_BLOCK, node);
  }

  public OnModelsGeneratedBlock getModelsGeneratedBlock() {
    return (OnModelsGeneratedBlock) this.getChild(OnModelsGeneratedBlock.class, GenerationListenerDeclaration.MODELS_GENERATED_BLOCK);
  }

  public void setModelsGeneratedBlock(OnModelsGeneratedBlock node) {
    super.setChild(GenerationListenerDeclaration.MODELS_GENERATED_BLOCK, node);
  }

  public AfterGenerationBlock getAfterGenerationBlock() {
    return (AfterGenerationBlock) this.getChild(AfterGenerationBlock.class, GenerationListenerDeclaration.AFTER_GENERATION_BLOCK);
  }

  public void setAfterGenerationBlock(AfterGenerationBlock node) {
    super.setChild(GenerationListenerDeclaration.AFTER_GENERATION_BLOCK, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(GenerationListenerDeclaration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, GenerationListenerDeclaration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, GenerationListenerDeclaration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(GenerationListenerDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, GenerationListenerDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public static GenerationListenerDeclaration newInstance(SModel sm, boolean init) {
    return (GenerationListenerDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.GenerationListenerDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GenerationListenerDeclaration newInstance(SModel sm) {
    return GenerationListenerDeclaration.newInstance(sm, false);
  }
}
