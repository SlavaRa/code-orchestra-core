package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GroupAccessOperation extends Expression {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.GroupAccessOperation";
  public static final String GROUP = "group";

  public GroupAccessOperation(SNode node) {
    super(node);
  }

  public ActionGroupDeclaration getGroup() {
    return (ActionGroupDeclaration) this.getReferent(ActionGroupDeclaration.class, GroupAccessOperation.GROUP);
  }

  public void setGroup(ActionGroupDeclaration node) {
    super.setReferent(GroupAccessOperation.GROUP, node);
  }

  public static GroupAccessOperation newInstance(SModel sm, boolean init) {
    return (GroupAccessOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.GroupAccessOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GroupAccessOperation newInstance(SModel sm) {
    return GroupAccessOperation.newInstance(sm, false);
  }
}
