package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VariableNodeItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.VariableNodeItem";
  public static final String CONCEPT = "concept";
  public static final String VAR_ENTITY = "varEntity";

  public VariableNodeItem(SNode node) {
    super(node);
  }

  public ConceptDeclaration getConcept() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, VariableNodeItem.CONCEPT);
  }

  public void setConcept(ConceptDeclaration node) {
    super.setReferent(VariableNodeItem.CONCEPT, node);
  }

  public Expression getVarEntity() {
    return (Expression) this.getChild(Expression.class, VariableNodeItem.VAR_ENTITY);
  }

  public void setVarEntity(Expression node) {
    super.setChild(VariableNodeItem.VAR_ENTITY, node);
  }

  public static VariableNodeItem newInstance(SModel sm, boolean init) {
    return (VariableNodeItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.VariableNodeItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VariableNodeItem newInstance(SModel sm) {
    return VariableNodeItem.newInstance(sm, false);
  }
}
