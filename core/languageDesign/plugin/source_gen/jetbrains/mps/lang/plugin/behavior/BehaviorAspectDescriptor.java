package jetbrains.mps.lang.plugin.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"jetbrains.mps.lang.plugin.structure.ActionAccessOperation", "jetbrains.mps.lang.plugin.structure.ActionConstructionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionConstructorParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionDataParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionDeclaration", "jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration", "jetbrains.mps.lang.plugin.structure.ActionInstance", "jetbrains.mps.lang.plugin.structure.ActionListStatement", "jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.ActionParameterReference", "jetbrains.mps.lang.plugin.structure.ActionParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.ActionType", "jetbrains.mps.lang.plugin.structure.ActionsList_FunctionParameter", "jetbrains.mps.lang.plugin.structure.ActionsStatement", "jetbrains.mps.lang.plugin.structure.AddElementStatement", "jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement", "jetbrains.mps.lang.plugin.structure.AddStatement", "jetbrains.mps.lang.plugin.structure.AddTabOperation", "jetbrains.mps.lang.plugin.structure.AfterGenerationBlock", "jetbrains.mps.lang.plugin.structure.ApplicationPluginDeclaration", "jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock", "jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock", "jetbrains.mps.lang.plugin.structure.ApplicationPluginType", "jetbrains.mps.lang.plugin.structure.ApplyEditorBlock", "jetbrains.mps.lang.plugin.structure.AskBlock", "jetbrains.mps.lang.plugin.structure.AskStatement", "jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatement", "jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatementSync", "jetbrains.mps.lang.plugin.structure.BaseNodeBlock", "jetbrains.mps.lang.plugin.structure.BaseProjectOperation", "jetbrains.mps.lang.plugin.structure.BeforeGenerationBlock", "jetbrains.mps.lang.plugin.structure.BuildGroupBlock", "jetbrains.mps.lang.plugin.structure.ButtonCreator", "jetbrains.mps.lang.plugin.structure.CheckConfigurationBlock", "jetbrains.mps.lang.plugin.structure.CloseTabOperation", "jetbrains.mps.lang.plugin.structure.CommandClosureLiteral", "jetbrains.mps.lang.plugin.structure.ComponentReference", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_AnActionEvent", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Concept", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Contents", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Debug_Project", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_DebuggableNode", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_IModule", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_InputModel", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_MPSProject", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Model", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OperationContext", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OriginalInputNode", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootDir", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootNode", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_PreferencePage_component", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Project", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ScopeNode", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_UnitNode", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ask", "jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_node", "jetbrains.mps.lang.plugin.structure.ConceptFunction_CreateBreakpoint", "jetbrains.mps.lang.plugin.structure.ConceptFunction_GetUnitName", "jetbrains.mps.lang.plugin.structure.ConceptFunction_GetVariables", "jetbrains.mps.lang.plugin.structure.ConceptFunction_PropertyStringGetter", "jetbrains.mps.lang.plugin.structure.ConfigurationEditorDeclaration", "jetbrains.mps.lang.plugin.structure.ConsoleExpression", "jetbrains.mps.lang.plugin.structure.ConsoleType", "jetbrains.mps.lang.plugin.structure.Console_FunctionParameter", "jetbrains.mps.lang.plugin.structure.CreateBlock", "jetbrains.mps.lang.plugin.structure.CreateModelRunConfigBlock", "jetbrains.mps.lang.plugin.structure.CreateModuleRunConfigBlock", "jetbrains.mps.lang.plugin.structure.CreateNodeAspectBlock", "jetbrains.mps.lang.plugin.structure.CreateNodeRunConfigBlock", "jetbrains.mps.lang.plugin.structure.CreateRunConfigBlock", "jetbrains.mps.lang.plugin.structure.CreateRunConfigBlockParameter", "jetbrains.mps.lang.plugin.structure.CreateRunConfigStatement", "jetbrains.mps.lang.plugin.structure.CreateTabBlock", "jetbrains.mps.lang.plugin.structure.DebugInfoInitializer", "jetbrains.mps.lang.plugin.structure.DebugSessionCreator", "jetbrains.mps.lang.plugin.structure.DebuggableNodeItem", "jetbrains.mps.lang.plugin.structure.DisposeBlock", "jetbrains.mps.lang.plugin.structure.DisposeConsoleBlock", "jetbrains.mps.lang.plugin.structure.DisposeEditorBlock", "jetbrains.mps.lang.plugin.structure.DoUpdateBlock", "jetbrains.mps.lang.plugin.structure.DoUpdateGroupBlock", "jetbrains.mps.lang.plugin.structure.EditorTab", "jetbrains.mps.lang.plugin.structure.EditorTabReference", "jetbrains.mps.lang.plugin.structure.ElementListContents", "jetbrains.mps.lang.plugin.structure.EnumerateChildrenFunction", "jetbrains.mps.lang.plugin.structure.Environment_FunctionParameter", "jetbrains.mps.lang.plugin.structure.EverywhereActionPlace", "jetbrains.mps.lang.plugin.structure.ExecuteBlock", "jetbrains.mps.lang.plugin.structure.ExecuteCommandInEDTStatement", "jetbrains.mps.lang.plugin.structure.ExecuteCommandStatement", "jetbrains.mps.lang.plugin.structure.ExecuteConfigBlock", "jetbrains.mps.lang.plugin.structure.ExecuteEDTCommandStatement", "jetbrains.mps.lang.plugin.structure.ExecuteLightweightCommandStatement", "jetbrains.mps.lang.plugin.structure.ExecuteParameterQuery", "jetbrains.mps.lang.plugin.structure.ExecuteWriteActionStatement", "jetbrains.mps.lang.plugin.structure.ExecutionConsoleStatement", "jetbrains.mps.lang.plugin.structure.Executor_FunctionParameter", "jetbrains.mps.lang.plugin.structure.FileGeneratorDeclaration", "jetbrains.mps.lang.plugin.structure.FileGeneratorType", "jetbrains.mps.lang.plugin.structure.GenerateFileBlock", "jetbrains.mps.lang.plugin.structure.GenerationListenerDeclaration", "jetbrains.mps.lang.plugin.structure.GenerationListener_models", "jetbrains.mps.lang.plugin.structure.GenerationListener_options", "jetbrains.mps.lang.plugin.structure.GetBaseNodeBlock", "jetbrains.mps.lang.plugin.structure.GetComponentBlock", "jetbrains.mps.lang.plugin.structure.GetConceptsBlock", "jetbrains.mps.lang.plugin.structure.GetConfigurationIconBlock", "jetbrains.mps.lang.plugin.structure.GetGroupOperation", "jetbrains.mps.lang.plugin.structure.GetInnerTabCaptionBlock", "jetbrains.mps.lang.plugin.structure.GetNodeBlock", "jetbrains.mps.lang.plugin.structure.GetNodesBlock", "jetbrains.mps.lang.plugin.structure.GetPreferencesComponentInProjectOperation", "jetbrains.mps.lang.plugin.structure.GetPreferencesComponentOperation", "jetbrains.mps.lang.plugin.structure.GetSelectedTabOperation", "jetbrains.mps.lang.plugin.structure.GetToolInProjectOperation", "jetbrains.mps.lang.plugin.structure.GetToolOperation", "jetbrains.mps.lang.plugin.structure.GetUserDataExpression", "jetbrains.mps.lang.plugin.structure.GroupAccessOperation", "jetbrains.mps.lang.plugin.structure.GroupAnchor", "jetbrains.mps.lang.plugin.structure.GroupType", "jetbrains.mps.lang.plugin.structure.IconResource", "jetbrains.mps.lang.plugin.structure.IconResourceExpression", "jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor", "jetbrains.mps.lang.plugin.structure.InitBlock", "jetbrains.mps.lang.plugin.structure.InitTabBlock", "jetbrains.mps.lang.plugin.structure.InterfaceExtentionPoint", "jetbrains.mps.lang.plugin.structure.InterfaceGroup", "jetbrains.mps.lang.plugin.structure.IsApplicableBlock", "jetbrains.mps.lang.plugin.structure.IsApplicableTabBlock", "jetbrains.mps.lang.plugin.structure.IsDefaultBlock", "jetbrains.mps.lang.plugin.structure.KeyMapKeystroke", "jetbrains.mps.lang.plugin.structure.KeyStrokeType", "jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration", "jetbrains.mps.lang.plugin.structure.ListenBlock", "jetbrains.mps.lang.plugin.structure.MakeConfigBlock", "jetbrains.mps.lang.plugin.structure.ModelCreatorTarget", "jetbrains.mps.lang.plugin.structure.ModificationStatement", "jetbrains.mps.lang.plugin.structure.ModuleCreatorTarget", "jetbrains.mps.lang.plugin.structure.MultitabbedEditorTab", "jetbrains.mps.lang.plugin.structure.MultitabbedEditorTabType", "jetbrains.mps.lang.plugin.structure.NewCreateBlock", "jetbrains.mps.lang.plugin.structure.NodeCreatorTarget", "jetbrains.mps.lang.plugin.structure.NodesCreatorTarget", "jetbrains.mps.lang.plugin.structure.OnAfterReadBlock", "jetbrains.mps.lang.plugin.structure.OnBeforeWriteBlock", "jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock", "jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock_success", "jetbrains.mps.lang.plugin.structure.Order", "jetbrains.mps.lang.plugin.structure.OrderReference", "jetbrains.mps.lang.plugin.structure.OverridesDefaultBlock", "jetbrains.mps.lang.plugin.structure.Parameter_FunctionParameter", "jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange", "jetbrains.mps.lang.plugin.structure.ParametrizedExecuteActions", "jetbrains.mps.lang.plugin.structure.ParametrizedExecuteBlock", "jetbrains.mps.lang.plugin.structure.ParametrizedExecuteConsole", "jetbrains.mps.lang.plugin.structure.ParametrizedExecuteProcess", "jetbrains.mps.lang.plugin.structure.PersistentPropertyDeclaration", "jetbrains.mps.lang.plugin.structure.PersistentPropertyReference", "jetbrains.mps.lang.plugin.structure.PopupCreator", "jetbrains.mps.lang.plugin.structure.PreferencePage", "jetbrains.mps.lang.plugin.structure.PreferencePageCommitBlock", "jetbrains.mps.lang.plugin.structure.PreferencePageIsModifiedBlock", "jetbrains.mps.lang.plugin.structure.PreferencePageResetBlock", "jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration", "jetbrains.mps.lang.plugin.structure.PreferencesComponentType", "jetbrains.mps.lang.plugin.structure.PrepareConceptFunction", "jetbrains.mps.lang.plugin.structure.PrepareReturnType_FunctionParameter", "jetbrains.mps.lang.plugin.structure.ProcessHandlerStatement", "jetbrains.mps.lang.plugin.structure.ProcessStatement", "jetbrains.mps.lang.plugin.structure.ProjectCreatorTarget", "jetbrains.mps.lang.plugin.structure.ProjectExpression", "jetbrains.mps.lang.plugin.structure.ProjectOperation", "jetbrains.mps.lang.plugin.structure.ProjectPluginDeclaration", "jetbrains.mps.lang.plugin.structure.ProjectPluginDisposeBlock", "jetbrains.mps.lang.plugin.structure.ProjectPluginInitBlock", "jetbrains.mps.lang.plugin.structure.ProjectPluginType", "jetbrains.mps.lang.plugin.structure.Project_ConceptFunctionParameter", "jetbrains.mps.lang.plugin.structure.PropertyRefExpression", "jetbrains.mps.lang.plugin.structure.PropertyRefType", "jetbrains.mps.lang.plugin.structure.ReportErrorStatement", "jetbrains.mps.lang.plugin.structure.ResetEditorBlock", "jetbrains.mps.lang.plugin.structure.RunConfigExecutionParameterDeclaration", "jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement", "jetbrains.mps.lang.plugin.structure.RunConfigParameterReferenceOperation", "jetbrains.mps.lang.plugin.structure.RunConfigPropertyInstance", "jetbrains.mps.lang.plugin.structure.RunConfigType", "jetbrains.mps.lang.plugin.structure.RunConfigurationDeclaration", "jetbrains.mps.lang.plugin.structure.RunConfigurationMethodDeclaration", "jetbrains.mps.lang.plugin.structure.RunConfigurationTypeDeclaration", "jetbrains.mps.lang.plugin.structure.RunModelConfigCreator", "jetbrains.mps.lang.plugin.structure.RunModuleConfigCreator", "jetbrains.mps.lang.plugin.structure.RunNodeConfigCreator", "jetbrains.mps.lang.plugin.structure.ScopeNodeItem", "jetbrains.mps.lang.plugin.structure.Separator", "jetbrains.mps.lang.plugin.structure.SimpleActionPlace", "jetbrains.mps.lang.plugin.structure.SimpleShortcutChange", "jetbrains.mps.lang.plugin.structure.SingletabbedEditorTab", "jetbrains.mps.lang.plugin.structure.SingletabbedEditorTabType", "jetbrains.mps.lang.plugin.structure.SmartDisposeClosureParameterDeclaration", "jetbrains.mps.lang.plugin.structure.TabbedEditorDeclaration", "jetbrains.mps.lang.plugin.structure.TabbedToolDeclaration", "jetbrains.mps.lang.plugin.structure.ToStringConceptFunction", "jetbrains.mps.lang.plugin.structure.ToStringParameter", "jetbrains.mps.lang.plugin.structure.ToolActionPlace", "jetbrains.mps.lang.plugin.structure.ToolDeclaration", "jetbrains.mps.lang.plugin.structure.ToolInstanceExpression", "jetbrains.mps.lang.plugin.structure.ToolTab", "jetbrains.mps.lang.plugin.structure.ToolType", "jetbrains.mps.lang.plugin.structure.ToolbarCreator", "jetbrains.mps.lang.plugin.structure.UnitNodeItem", "jetbrains.mps.lang.plugin.structure.UniversalRunConfigCreator", "jetbrains.mps.lang.plugin.structure.UpdateGroupBlock", "jetbrains.mps.lang.plugin.structure.UpdateGroupFunction", "jetbrains.mps.lang.plugin.structure.VariableNodeExpression", "jetbrains.mps.lang.plugin.structure.VariableNodeItem"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 197:
        return new SingletabbedEditorTab_BehaviorDescriptor();
      case 205:
        return new ToolDeclaration_BehaviorDescriptor();
      case 80:
        return new DoUpdateBlock_BehaviorDescriptor();
      case 38:
        return new ConceptFunctionParameter_AnActionEvent_BehaviorDescriptor();
      case 88:
        return new ExecuteBlock_BehaviorDescriptor();
      case 6:
        return new ActionGroupDeclaration_BehaviorDescriptor();
      case 7:
        return new ActionInstance_BehaviorDescriptor();
      case 137:
        return new ModificationStatement_BehaviorDescriptor();
      case 119:
        return new GroupAnchor_BehaviorDescriptor();
      case 139:
        return new MultitabbedEditorTab_BehaviorDescriptor();
      case 65:
        return new CreateBlock_BehaviorDescriptor();
      case 110:
        return new GetNodeBlock_BehaviorDescriptor();
      case 111:
        return new GetNodesBlock_BehaviorDescriptor();
      case 109:
        return new GetInnerTabCaptionBlock_BehaviorDescriptor();
      case 56:
        return new ConceptFunctionParameter_node_BehaviorDescriptor();
      case 200:
        return new TabbedEditorDeclaration_BehaviorDescriptor();
      case 104:
        return new GetBaseNodeBlock_BehaviorDescriptor();
      case 47:
        return new ConceptFunctionParameter_OperationContext_BehaviorDescriptor();
      case 127:
        return new InterfaceGroup_BehaviorDescriptor();
      case 126:
        return new InterfaceExtentionPoint_BehaviorDescriptor();
      case 206:
        return new ToolInstanceExpression_BehaviorDescriptor();
      case 43:
        return new ConceptFunctionParameter_IModule_BehaviorDescriptor();
      case 45:
        return new ConceptFunctionParameter_MPSProject_BehaviorDescriptor();
      case 194:
        return new Separator_BehaviorDescriptor();
      case 9:
        return new ActionParameterDeclaration_BehaviorDescriptor();
      case 128:
        return new IsApplicableBlock_BehaviorDescriptor();
      case 12:
        return new ActionType_BehaviorDescriptor();
      case 11:
        return new ActionParameterReferenceOperation_BehaviorDescriptor();
      case 173:
        return new ProjectPluginDeclaration_BehaviorDescriptor();
      case 175:
        return new ProjectPluginInitBlock_BehaviorDescriptor();
      case 174:
        return new ProjectPluginDisposeBlock_BehaviorDescriptor();
      case 176:
        return new ProjectPluginType_BehaviorDescriptor();
      case 32:
        return new BuildGroupBlock_BehaviorDescriptor();
      case 15:
        return new AddElementStatement_BehaviorDescriptor();
      case 84:
        return new ElementListContents_BehaviorDescriptor();
      case 131:
        return new KeyMapKeystroke_BehaviorDescriptor();
      case 81:
        return new DoUpdateGroupBlock_BehaviorDescriptor();
      case 120:
        return new GroupType_BehaviorDescriptor();
      case 208:
        return new ToolType_BehaviorDescriptor();
      case 172:
        return new ProjectOperation_BehaviorDescriptor();
      case 116:
        return new GetToolOperation_BehaviorDescriptor();
      case 108:
        return new GetGroupOperation_BehaviorDescriptor();
      case 101:
        return new GenerationListenerDeclaration_BehaviorDescriptor();
      case 146:
        return new OnModelsGeneratedBlock_BehaviorDescriptor();
      case 147:
        return new OnModelsGeneratedBlock_success_BehaviorDescriptor();
      case 31:
        return new BeforeGenerationBlock_BehaviorDescriptor();
      case 102:
        return new GenerationListener_models_BehaviorDescriptor();
      case 164:
        return new PreferencesComponentDeclaration_BehaviorDescriptor();
      case 157:
        return new PersistentPropertyDeclaration_BehaviorDescriptor();
      case 158:
        return new PersistentPropertyReference_BehaviorDescriptor();
      case 165:
        return new PreferencesComponentType_BehaviorDescriptor();
      case 113:
        return new GetPreferencesComponentOperation_BehaviorDescriptor();
      case 145:
        return new OnBeforeWriteBlock_BehaviorDescriptor();
      case 144:
        return new OnAfterReadBlock_BehaviorDescriptor();
      case 160:
        return new PreferencePage_BehaviorDescriptor();
      case 163:
        return new PreferencePageResetBlock_BehaviorDescriptor();
      case 161:
        return new PreferencePageCommitBlock_BehaviorDescriptor();
      case 51:
        return new ConceptFunctionParameter_PreferencePage_component_BehaviorDescriptor();
      case 162:
        return new PreferencePageIsModifiedBlock_BehaviorDescriptor();
      case 19:
        return new AfterGenerationBlock_BehaviorDescriptor();
      case 124:
        return new InitBlock_BehaviorDescriptor();
      case 77:
        return new DisposeBlock_BehaviorDescriptor();
      case 52:
        return new ConceptFunctionParameter_Project_BehaviorDescriptor();
      case 105:
        return new GetComponentBlock_BehaviorDescriptor();
      case 22:
        return new ApplicationPluginInitBlock_BehaviorDescriptor();
      case 21:
        return new ApplicationPluginDisposeBlock_BehaviorDescriptor();
      case 23:
        return new ApplicationPluginType_BehaviorDescriptor();
      case 20:
        return new ApplicationPluginDeclaration_BehaviorDescriptor();
      case 3:
        return new ActionDataParameterDeclaration_BehaviorDescriptor();
      case 4:
        return new ActionDataParameterReferenceOperation_BehaviorDescriptor();
      case 98:
        return new FileGeneratorDeclaration_BehaviorDescriptor();
      case 100:
        return new GenerateFileBlock_BehaviorDescriptor();
      case 99:
        return new FileGeneratorType_BehaviorDescriptor();
      case 150:
        return new OverridesDefaultBlock_BehaviorDescriptor();
      case 130:
        return new IsDefaultBlock_BehaviorDescriptor();
      case 50:
        return new ConceptFunctionParameter_OutputRootNode_BehaviorDescriptor();
      case 48:
        return new ConceptFunctionParameter_OriginalInputNode_BehaviorDescriptor();
      case 44:
        return new ConceptFunctionParameter_InputModel_BehaviorDescriptor();
      case 40:
        return new ConceptFunctionParameter_Contents_BehaviorDescriptor();
      case 49:
        return new ConceptFunctionParameter_OutputRootDir_BehaviorDescriptor();
      case 55:
        return new ConceptFunctionParameter_ask_BehaviorDescriptor();
      case 27:
        return new BaseExecuteCommandStatement_BehaviorDescriptor();
      case 36:
        return new CommandClosureLiteral_BehaviorDescriptor();
      case 89:
        return new ExecuteCommandInEDTStatement_BehaviorDescriptor();
      case 90:
        return new ExecuteCommandStatement_BehaviorDescriptor();
      case 92:
        return new ExecuteEDTCommandStatement_BehaviorDescriptor();
      case 93:
        return new ExecuteLightweightCommandStatement_BehaviorDescriptor();
      case 95:
        return new ExecuteWriteActionStatement_BehaviorDescriptor();
      case 1:
        return new ActionConstructionParameterDeclaration_BehaviorDescriptor();
      case 2:
        return new ActionConstructorParameterReferenceOperation_BehaviorDescriptor();
      case 17:
        return new AddStatement_BehaviorDescriptor();
      case 202:
        return new ToStringConceptFunction_BehaviorDescriptor();
      case 203:
        return new ToStringParameter_BehaviorDescriptor();
      case 28:
        return new BaseExecuteCommandStatementSync_BehaviorDescriptor();
      case 212:
        return new UpdateGroupBlock_BehaviorDescriptor();
      case 213:
        return new UpdateGroupFunction_BehaviorDescriptor();
      case 85:
        return new EnumerateChildrenFunction_BehaviorDescriptor();
      case 133:
        return new KeymapChangesDeclaration_BehaviorDescriptor();
      case 196:
        return new SimpleShortcutChange_BehaviorDescriptor();
      case 152:
        return new ParameterizedShortcutChange_BehaviorDescriptor();
      case 189:
        return new RunConfigurationTypeDeclaration_BehaviorDescriptor();
      case 187:
        return new RunConfigurationDeclaration_BehaviorDescriptor();
      case 107:
        return new GetConfigurationIconBlock_BehaviorDescriptor();
      case 34:
        return new CheckConfigurationBlock_BehaviorDescriptor();
      case 91:
        return new ExecuteConfigBlock_BehaviorDescriptor();
      case 14:
        return new ActionsStatement_BehaviorDescriptor();
      case 168:
        return new ProcessHandlerStatement_BehaviorDescriptor();
      case 96:
        return new ExecutionConsoleStatement_BehaviorDescriptor();
      case 78:
        return new DisposeConsoleBlock_BehaviorDescriptor();
      case 97:
        return new Executor_FunctionParameter_BehaviorDescriptor();
      case 86:
        return new Environment_FunctionParameter_BehaviorDescriptor();
      case 180:
        return new ReportErrorStatement_BehaviorDescriptor();
      case 61:
        return new ConfigurationEditorDeclaration_BehaviorDescriptor();
      case 24:
        return new ApplyEditorBlock_BehaviorDescriptor();
      case 181:
        return new ResetEditorBlock_BehaviorDescriptor();
      case 79:
        return new DisposeEditorBlock_BehaviorDescriptor();
      case 37:
        return new ComponentReference_BehaviorDescriptor();
      case 178:
        return new PropertyRefExpression_BehaviorDescriptor();
      case 179:
        return new PropertyRefType_BehaviorDescriptor();
      case 195:
        return new SimpleActionPlace_BehaviorDescriptor();
      case 204:
        return new ToolActionPlace_BehaviorDescriptor();
      case 87:
        return new EverywhereActionPlace_BehaviorDescriptor();
      case 125:
        return new InitTabBlock_BehaviorDescriptor();
      case 198:
        return new SingletabbedEditorTabType_BehaviorDescriptor();
      case 140:
        return new MultitabbedEditorTabType_BehaviorDescriptor();
      case 186:
        return new RunConfigType_BehaviorDescriptor();
      case 8:
        return new ActionListStatement_BehaviorDescriptor();
      case 72:
        return new CreateRunConfigStatement_BehaviorDescriptor();
      case 185:
        return new RunConfigPropertyInstance_BehaviorDescriptor();
      case 69:
        return new CreateNodeRunConfigBlock_BehaviorDescriptor();
      case 183:
        return new RunConfigMainNodeStatement_BehaviorDescriptor();
      case 46:
        return new ConceptFunctionParameter_Model_BehaviorDescriptor();
      case 67:
        return new CreateModuleRunConfigBlock_BehaviorDescriptor();
      case 66:
        return new CreateModelRunConfigBlock_BehaviorDescriptor();
      case 192:
        return new RunNodeConfigCreator_BehaviorDescriptor();
      case 191:
        return new RunModuleConfigCreator_BehaviorDescriptor();
      case 190:
        return new RunModelConfigCreator_BehaviorDescriptor();
      case 169:
        return new ProcessStatement_BehaviorDescriptor();
      case 62:
        return new ConsoleExpression_BehaviorDescriptor();
      case 63:
        return new ConsoleType_BehaviorDescriptor();
      case 211:
        return new UniversalRunConfigCreator_BehaviorDescriptor();
      case 142:
        return new NodeCreatorTarget_BehaviorDescriptor();
      case 136:
        return new ModelCreatorTarget_BehaviorDescriptor();
      case 138:
        return new ModuleCreatorTarget_BehaviorDescriptor();
      case 70:
        return new CreateRunConfigBlock_BehaviorDescriptor();
      case 71:
        return new CreateRunConfigBlockParameter_BehaviorDescriptor();
      case 170:
        return new ProjectCreatorTarget_BehaviorDescriptor();
      case 201:
        return new TabbedToolDeclaration_BehaviorDescriptor();
      case 18:
        return new AddTabOperation_BehaviorDescriptor();
      case 35:
        return new CloseTabOperation_BehaviorDescriptor();
      case 114:
        return new GetSelectedTabOperation_BehaviorDescriptor();
      case 76:
        return new DebuggableNodeItem_BehaviorDescriptor();
      case 74:
        return new DebugInfoInitializer_BehaviorDescriptor();
      case 199:
        return new SmartDisposeClosureParameterDeclaration_BehaviorDescriptor();
      case 143:
        return new NodesCreatorTarget_BehaviorDescriptor();
      case 207:
        return new ToolTab_BehaviorDescriptor();
      case 25:
        return new AskBlock_BehaviorDescriptor();
      case 26:
        return new AskStatement_BehaviorDescriptor();
      case 106:
        return new GetConceptsBlock_BehaviorDescriptor();
      case 141:
        return new NewCreateBlock_BehaviorDescriptor();
      case 39:
        return new ConceptFunctionParameter_Concept_BehaviorDescriptor();
      case 215:
        return new VariableNodeItem_BehaviorDescriptor();
      case 214:
        return new VariableNodeExpression_BehaviorDescriptor();
      case 117:
        return new GetUserDataExpression_BehaviorDescriptor();
      case 193:
        return new ScopeNodeItem_BehaviorDescriptor();
      case 59:
        return new ConceptFunction_GetVariables_BehaviorDescriptor();
      case 53:
        return new ConceptFunctionParameter_ScopeNode_BehaviorDescriptor();
      case 182:
        return new RunConfigExecutionParameterDeclaration_BehaviorDescriptor();
      case 184:
        return new RunConfigParameterReferenceOperation_BehaviorDescriptor();
      case 154:
        return new ParametrizedExecuteBlock_BehaviorDescriptor();
      case 153:
        return new ParametrizedExecuteActions_BehaviorDescriptor();
      case 155:
        return new ParametrizedExecuteConsole_BehaviorDescriptor();
      case 156:
        return new ParametrizedExecuteProcess_BehaviorDescriptor();
      case 64:
        return new Console_FunctionParameter_BehaviorDescriptor();
      case 94:
        return new ExecuteParameterQuery_BehaviorDescriptor();
      case 151:
        return new Parameter_FunctionParameter_BehaviorDescriptor();
      case 188:
        return new RunConfigurationMethodDeclaration_BehaviorDescriptor();
      case 112:
        return new GetPreferencesComponentInProjectOperation_BehaviorDescriptor();
      case 30:
        return new BaseProjectOperation_BehaviorDescriptor();
      case 115:
        return new GetToolInProjectOperation_BehaviorDescriptor();
      case 13:
        return new ActionsList_FunctionParameter_BehaviorDescriptor();
      case 57:
        return new ConceptFunction_CreateBreakpoint_BehaviorDescriptor();
      case 42:
        return new ConceptFunctionParameter_DebuggableNode_BehaviorDescriptor();
      case 41:
        return new ConceptFunctionParameter_Debug_Project_BehaviorDescriptor();
      case 0:
        return new ActionAccessOperation_BehaviorDescriptor();
      case 118:
        return new GroupAccessOperation_BehaviorDescriptor();
      case 75:
        return new DebugSessionCreator_BehaviorDescriptor();
      case 177:
        return new Project_ConceptFunctionParameter_BehaviorDescriptor();
      case 210:
        return new UnitNodeItem_BehaviorDescriptor();
      case 58:
        return new ConceptFunction_GetUnitName_BehaviorDescriptor();
      case 54:
        return new ConceptFunctionParameter_UnitNode_BehaviorDescriptor();
      case 166:
        return new PrepareConceptFunction_BehaviorDescriptor();
      case 167:
        return new PrepareReturnType_FunctionParameter_BehaviorDescriptor();
      case 171:
        return new ProjectExpression_BehaviorDescriptor();
      case 103:
        return new GenerationListener_options_BehaviorDescriptor();
      case 60:
        return new ConceptFunction_PropertyStringGetter_BehaviorDescriptor();
      case 123:
        return new IdeaInitializerDescriptor_BehaviorDescriptor();
      case 132:
        return new KeyStrokeType_BehaviorDescriptor();
      case 10:
        return new ActionParameterReference_BehaviorDescriptor();
      case 16:
        return new AddKeystrokeStatement_BehaviorDescriptor();
      case 68:
        return new CreateNodeAspectBlock_BehaviorDescriptor();
      case 82:
        return new EditorTab_BehaviorDescriptor();
      case 129:
        return new IsApplicableTabBlock_BehaviorDescriptor();
      case 29:
        return new BaseNodeBlock_BehaviorDescriptor();
      case 134:
        return new ListenBlock_BehaviorDescriptor();
      case 148:
        return new Order_BehaviorDescriptor();
      case 83:
        return new EditorTabReference_BehaviorDescriptor();
      case 149:
        return new OrderReference_BehaviorDescriptor();
      case 5:
        return new ActionDeclaration_BehaviorDescriptor();
      case 121:
        return new IconResource_BehaviorDescriptor();
      case 135:
        return new MakeConfigBlock_BehaviorDescriptor();
      case 122:
        return new IconResourceExpression_BehaviorDescriptor();
      case 33:
        return new ButtonCreator_BehaviorDescriptor();
      case 159:
        return new PopupCreator_BehaviorDescriptor();
      case 209:
        return new ToolbarCreator_BehaviorDescriptor();
      case 73:
        return new CreateTabBlock_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
