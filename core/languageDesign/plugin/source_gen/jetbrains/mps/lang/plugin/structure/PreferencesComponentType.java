package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PreferencesComponentType extends BaseClassifierType {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.PreferencesComponentType";
  public static final String COMPONENT_DECLARATION = "componentDeclaration";

  public PreferencesComponentType(SNode node) {
    super(node);
  }

  public PreferencesComponentDeclaration getComponentDeclaration() {
    return (PreferencesComponentDeclaration) this.getReferent(PreferencesComponentDeclaration.class, PreferencesComponentType.COMPONENT_DECLARATION);
  }

  public void setComponentDeclaration(PreferencesComponentDeclaration node) {
    super.setReferent(PreferencesComponentType.COMPONENT_DECLARATION, node);
  }

  public static PreferencesComponentType newInstance(SModel sm, boolean init) {
    return (PreferencesComponentType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.PreferencesComponentType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PreferencesComponentType newInstance(SModel sm) {
    return PreferencesComponentType.newInstance(sm, false);
  }
}
