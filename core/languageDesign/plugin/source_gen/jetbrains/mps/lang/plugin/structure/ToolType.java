package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ToolType extends BaseClassifierType {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ToolType";
  public static final String TOOL = "tool";

  public ToolType(SNode node) {
    super(node);
  }

  public BaseToolDeclaration getTool() {
    return (BaseToolDeclaration) this.getReferent(BaseToolDeclaration.class, ToolType.TOOL);
  }

  public void setTool(BaseToolDeclaration node) {
    super.setReferent(ToolType.TOOL, node);
  }

  public static ToolType newInstance(SModel sm, boolean init) {
    return (ToolType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ToolType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ToolType newInstance(SModel sm) {
    return ToolType.newInstance(sm, false);
  }
}
