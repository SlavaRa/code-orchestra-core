package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RunConfigMainNodeStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement";
  public static final String CONTEXT_ITEM = "contextItem";

  public RunConfigMainNodeStatement(SNode node) {
    super(node);
  }

  public Expression getContextItem() {
    return (Expression) this.getChild(Expression.class, RunConfigMainNodeStatement.CONTEXT_ITEM);
  }

  public void setContextItem(Expression node) {
    super.setChild(RunConfigMainNodeStatement.CONTEXT_ITEM, node);
  }

  public static RunConfigMainNodeStatement newInstance(SModel sm, boolean init) {
    return (RunConfigMainNodeStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RunConfigMainNodeStatement newInstance(SModel sm) {
    return RunConfigMainNodeStatement.newInstance(sm, false);
  }
}
