package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BaseExecuteCommandStatement extends Statement {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatement";
  public static final String COMMAND_CLOSURE_LITERAL = "commandClosureLiteral";

  public BaseExecuteCommandStatement(SNode node) {
    super(node);
  }

  public CommandClosureLiteral getCommandClosureLiteral() {
    return (CommandClosureLiteral) this.getChild(CommandClosureLiteral.class, BaseExecuteCommandStatement.COMMAND_CLOSURE_LITERAL);
  }

  public void setCommandClosureLiteral(CommandClosureLiteral node) {
    super.setChild(BaseExecuteCommandStatement.COMMAND_CLOSURE_LITERAL, node);
  }

  public static BaseExecuteCommandStatement newInstance(SModel sm, boolean init) {
    return (BaseExecuteCommandStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BaseExecuteCommandStatement newInstance(SModel sm) {
    return BaseExecuteCommandStatement.newInstance(sm, false);
  }
}
