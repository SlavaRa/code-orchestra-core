package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.ConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ScopeNodeItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ScopeNodeItem";
  public static final String SCOPE_CONCEPT = "scopeConcept";
  public static final String VARIABLES_GETTER = "variablesGetter";

  public ScopeNodeItem(SNode node) {
    super(node);
  }

  public ConceptDeclaration getScopeConcept() {
    return (ConceptDeclaration) this.getReferent(ConceptDeclaration.class, ScopeNodeItem.SCOPE_CONCEPT);
  }

  public void setScopeConcept(ConceptDeclaration node) {
    super.setReferent(ScopeNodeItem.SCOPE_CONCEPT, node);
  }

  public ConceptFunction_GetVariables getVariablesGetter() {
    return (ConceptFunction_GetVariables) this.getChild(ConceptFunction_GetVariables.class, ScopeNodeItem.VARIABLES_GETTER);
  }

  public void setVariablesGetter(ConceptFunction_GetVariables node) {
    super.setChild(ScopeNodeItem.VARIABLES_GETTER, node);
  }

  public static ScopeNodeItem newInstance(SModel sm, boolean init) {
    return (ScopeNodeItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ScopeNodeItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ScopeNodeItem newInstance(SModel sm) {
    return ScopeNodeItem.newInstance(sm, false);
  }
}
