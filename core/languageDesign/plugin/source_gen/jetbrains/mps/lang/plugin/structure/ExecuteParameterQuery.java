package jetbrains.mps.lang.plugin.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.ConceptFunction;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExecuteParameterQuery extends ConceptFunction {
  public static final String concept = "jetbrains.mps.lang.plugin.structure.ExecuteParameterQuery";
  public static final String PARAMETER_TYPE = "parameterType";

  public ExecuteParameterQuery(SNode node) {
    super(node);
  }

  public Type getParameterType() {
    return (Type) this.getChild(Type.class, ExecuteParameterQuery.PARAMETER_TYPE);
  }

  public void setParameterType(Type node) {
    super.setChild(ExecuteParameterQuery.PARAMETER_TYPE, node);
  }

  public static ExecuteParameterQuery newInstance(SModel sm, boolean init) {
    return (ExecuteParameterQuery) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.plugin.structure.ExecuteParameterQuery", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExecuteParameterQuery newInstance(SModel sm) {
    return ExecuteParameterQuery.newInstance(sm, false);
  }
}
