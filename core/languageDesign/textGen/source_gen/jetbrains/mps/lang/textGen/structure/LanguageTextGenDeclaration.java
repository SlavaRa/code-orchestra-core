package jetbrains.mps.lang.textGen.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LanguageTextGenDeclaration extends AbstractTextGenDeclaration {
  public static final String concept = "jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration";
  public static final String CLNK_ApplicableHiddenParameter = "applicableHiddenParameter";
  public static final String BASE_TEXT_GEN = "baseTextGen";
  public static final String OPERATION = "operation";
  public static final String FUNCTION = "function";

  public LanguageTextGenDeclaration(SNode node) {
    super(node);
  }

  public LanguageTextGenDeclaration getBaseTextGen() {
    return (LanguageTextGenDeclaration) this.getReferent(LanguageTextGenDeclaration.class, LanguageTextGenDeclaration.BASE_TEXT_GEN);
  }

  public void setBaseTextGen(LanguageTextGenDeclaration node) {
    super.setReferent(LanguageTextGenDeclaration.BASE_TEXT_GEN, node);
  }

  public int getOperationsCount() {
    return this.getChildCount(LanguageTextGenDeclaration.OPERATION);
  }

  public Iterator<OperationDeclaration> operations() {
    return this.children(OperationDeclaration.class, LanguageTextGenDeclaration.OPERATION);
  }

  public List<OperationDeclaration> getOperations() {
    return this.getChildren(OperationDeclaration.class, LanguageTextGenDeclaration.OPERATION);
  }

  public void addOperation(OperationDeclaration node) {
    this.addChild(LanguageTextGenDeclaration.OPERATION, node);
  }

  public void insertOperation(OperationDeclaration prev, OperationDeclaration node) {
    this.insertChild(prev, LanguageTextGenDeclaration.OPERATION, node);
  }

  public int getFunctionsCount() {
    return this.getChildCount(LanguageTextGenDeclaration.FUNCTION);
  }

  public Iterator<UtilityMethodDeclaration> functions() {
    return this.children(UtilityMethodDeclaration.class, LanguageTextGenDeclaration.FUNCTION);
  }

  public List<UtilityMethodDeclaration> getFunctions() {
    return this.getChildren(UtilityMethodDeclaration.class, LanguageTextGenDeclaration.FUNCTION);
  }

  public void addFunction(UtilityMethodDeclaration node) {
    this.addChild(LanguageTextGenDeclaration.FUNCTION, node);
  }

  public void insertFunction(UtilityMethodDeclaration prev, UtilityMethodDeclaration node) {
    this.insertChild(prev, LanguageTextGenDeclaration.FUNCTION, node);
  }

  public static LanguageTextGenDeclaration newInstance(SModel sm, boolean init) {
    return (LanguageTextGenDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LanguageTextGenDeclaration newInstance(SModel sm) {
    return LanguageTextGenDeclaration.newInstance(sm, false);
  }
}
