package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Concept_NewInstance extends SNodeOperation {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.Concept_NewInstance";
  public static final String PROTOTYPE_NODE = "prototypeNode";

  public Concept_NewInstance(SNode node) {
    super(node);
  }

  public Expression getPrototypeNode() {
    return (Expression) this.getChild(Expression.class, Concept_NewInstance.PROTOTYPE_NODE);
  }

  public void setPrototypeNode(Expression node) {
    super.setChild(Concept_NewInstance.PROTOTYPE_NODE, node);
  }

  public static Concept_NewInstance newInstance(SModel sm, boolean init) {
    return (Concept_NewInstance) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Concept_NewInstance", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Concept_NewInstance newInstance(SModel sm) {
    return Concept_NewInstance.newInstance(sm, false);
  }
}
