package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Node_GetReferenceOperation extends SNodeOperation {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation";
  public static final String LINK_QUALIFIER = "linkQualifier";

  public Node_GetReferenceOperation(SNode node) {
    super(node);
  }

  public OperationParm_LinkQualifier getLinkQualifier() {
    return (OperationParm_LinkQualifier) this.getChild(OperationParm_LinkQualifier.class, Node_GetReferenceOperation.LINK_QUALIFIER);
  }

  public void setLinkQualifier(OperationParm_LinkQualifier node) {
    super.setChild(Node_GetReferenceOperation.LINK_QUALIFIER, node);
  }

  public static Node_GetReferenceOperation newInstance(SModel sm, boolean init) {
    return (Node_GetReferenceOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Node_GetReferenceOperation newInstance(SModel sm) {
    return Node_GetReferenceOperation.newInstance(sm, false);
  }
}
