package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.PropertyDeclaration;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyQualifier extends BaseConcept implements IPropertyQualifier {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.PropertyQualifier";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String PROPERTY = "property";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public PropertyQualifier(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(PropertyQualifier.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(PropertyQualifier.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(PropertyQualifier.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(PropertyQualifier.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(PropertyQualifier.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(PropertyQualifier.VIRTUAL_PACKAGE, value);
  }

  public PropertyDeclaration getProperty() {
    return (PropertyDeclaration) this.getReferent(PropertyDeclaration.class, PropertyQualifier.PROPERTY);
  }

  public void setProperty(PropertyDeclaration node) {
    super.setReferent(PropertyQualifier.PROPERTY, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(PropertyQualifier.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, PropertyQualifier.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, PropertyQualifier.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(PropertyQualifier.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, PropertyQualifier.SMODEL_ATTRIBUTE, node);
  }

  public static PropertyQualifier newInstance(SModel sm, boolean init) {
    return (PropertyQualifier) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.PropertyQualifier", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyQualifier newInstance(SModel sm) {
    return PropertyQualifier.newInstance(sm, false);
  }
}
