package jetbrains.mps.lang.smodel.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class AttributeAccessOperation_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean virtual_isLValue_1213877410080(SNode thisNode) {
    SNode qualifier = SLinkOperations.getTarget(thisNode, "attributeQualifier", true);
    if (SNodeOperations.isInstanceOf(qualifier, "jetbrains.mps.lang.smodel.structure.NodeAttributeAccessQualifier")) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(qualifier, "jetbrains.mps.lang.smodel.structure.LinkAttributeAccessQualifier")) {
      return true;
    }
    if (SNodeOperations.isInstanceOf(qualifier, "jetbrains.mps.lang.smodel.structure.PropertyAttributeAccessQualifier")) {
      return true;
    }
    return false;
  }

  public static boolean virtual_isAggregation_4024382256428848854(SNode thisNode) {
    SNode attributeAccessQualifier = SLinkOperations.getTarget(thisNode, "attributeQualifier", true);
    return ILinkAccess_Behavior.call_isAggregation_4024382256428848854(SNodeOperations.as(attributeAccessQualifier, "jetbrains.mps.lang.smodel.structure.ILinkAccess"));
  }

  public static boolean virtual_isSingularCardinality_4024382256428848847(SNode thisNode) {
    SNode attributeAccessQualifier = SLinkOperations.getTarget(thisNode, "attributeQualifier", true);
    return ILinkAccess_Behavior.call_isSingularCardinality_4024382256428848847(SNodeOperations.as(attributeAccessQualifier, "jetbrains.mps.lang.smodel.structure.ILinkAccess"));
  }

  public static SNode virtual_getTargetConcept_4024382256428848859(SNode thisNode) {
    SNode attributeAccessQualifier = SLinkOperations.getTarget(thisNode, "attributeQualifier", true);
    return ILinkAccess_Behavior.call_getTargetConcept_4024382256428848859(SNodeOperations.as(attributeAccessQualifier, "jetbrains.mps.lang.smodel.structure.ILinkAccess"));
  }
}
