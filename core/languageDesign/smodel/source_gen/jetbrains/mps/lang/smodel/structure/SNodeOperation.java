package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.baseLanguage.structure.IOperation;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SNodeOperation extends BaseConcept implements IOperation {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.SNodeOperation";
  public static final String CPR_ApplicableToModel = "applicableToModel";
  public static final String CPR_ApplicableToNode = "applicableToNode";
  public static final String CPR_ApplicableToSimpleProperty = "applicableToSimpleProperty";
  public static final String CPR_ApplicableToEnumProperty = "applicableToEnumProperty";
  public static final String CPR_ApplicableToConceptProperty = "applicableToConceptProperty";
  public static final String CPR_ApplicableToLink = "applicableToLink";
  public static final String CPR_ApplicableToLinkList = "applicableToLinkList";
  public static final String CPR_ApplicableToConcept = "applicableToConcept";
  public static final String CLNK_ApplicableParameter = "applicableParameter";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String PARAMETER = "parameter";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public SNodeOperation(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(SNodeOperation.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(SNodeOperation.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(SNodeOperation.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(SNodeOperation.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(SNodeOperation.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(SNodeOperation.VIRTUAL_PACKAGE, value);
  }

  public int getParametersCount() {
    return this.getChildCount(SNodeOperation.PARAMETER);
  }

  public Iterator<AbstractOperationParameter> parameters() {
    return this.children(AbstractOperationParameter.class, SNodeOperation.PARAMETER);
  }

  public List<AbstractOperationParameter> getParameters() {
    return this.getChildren(AbstractOperationParameter.class, SNodeOperation.PARAMETER);
  }

  public void addParameter(AbstractOperationParameter node) {
    this.addChild(SNodeOperation.PARAMETER, node);
  }

  public void insertParameter(AbstractOperationParameter prev, AbstractOperationParameter node) {
    this.insertChild(prev, SNodeOperation.PARAMETER, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(SNodeOperation.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, SNodeOperation.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, SNodeOperation.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(SNodeOperation.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, SNodeOperation.SMODEL_ATTRIBUTE, node);
  }

  public static SNodeOperation newInstance(SModel sm, boolean init) {
    return (SNodeOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SNodeOperation newInstance(SModel sm) {
    return SNodeOperation.newInstance(sm, false);
  }
}
