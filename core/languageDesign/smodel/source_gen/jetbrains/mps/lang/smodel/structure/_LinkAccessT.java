package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.baseLanguage.structure.IInternalType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class _LinkAccessT extends Type implements IInternalType {
  public static final String concept = "jetbrains.mps.lang.smodel.structure._LinkAccessT";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String SINGULAR_CRADINALITY = "singularCradinality";
  public static final String AGGREGATION = "aggregation";
  public static final String TARGET_CONCEPT = "targetConcept";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public _LinkAccessT(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(_LinkAccessT.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(_LinkAccessT.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(_LinkAccessT.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(_LinkAccessT.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(_LinkAccessT.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(_LinkAccessT.VIRTUAL_PACKAGE, value);
  }

  public boolean getSingularCradinality() {
    return this.getBooleanProperty(_LinkAccessT.SINGULAR_CRADINALITY);
  }

  public void setSingularCradinality(boolean value) {
    this.setBooleanProperty(_LinkAccessT.SINGULAR_CRADINALITY, value);
  }

  public boolean getAggregation() {
    return this.getBooleanProperty(_LinkAccessT.AGGREGATION);
  }

  public void setAggregation(boolean value) {
    this.setBooleanProperty(_LinkAccessT.AGGREGATION, value);
  }

  public AbstractConceptDeclaration getTargetConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, _LinkAccessT.TARGET_CONCEPT);
  }

  public void setTargetConcept(AbstractConceptDeclaration node) {
    super.setReferent(_LinkAccessT.TARGET_CONCEPT, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(_LinkAccessT.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, _LinkAccessT.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, _LinkAccessT.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(_LinkAccessT.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, _LinkAccessT.SMODEL_ATTRIBUTE, node);
  }

  public static _LinkAccessT newInstance(SModel sm, boolean init) {
    return (_LinkAccessT) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure._LinkAccessT", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static _LinkAccessT newInstance(SModel sm) {
    return _LinkAccessT.newInstance(sm, false);
  }
}
