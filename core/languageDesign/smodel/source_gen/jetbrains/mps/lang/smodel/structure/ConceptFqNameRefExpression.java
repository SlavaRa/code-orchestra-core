package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConceptFqNameRefExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression";
  public static final String CONCEPT_DECLARATION = "conceptDeclaration";

  public ConceptFqNameRefExpression(SNode node) {
    super(node);
  }

  public AbstractConceptDeclaration getConceptDeclaration() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, ConceptFqNameRefExpression.CONCEPT_DECLARATION);
  }

  public void setConceptDeclaration(AbstractConceptDeclaration node) {
    super.setReferent(ConceptFqNameRefExpression.CONCEPT_DECLARATION, node);
  }

  public static ConceptFqNameRefExpression newInstance(SModel sm, boolean init) {
    return (ConceptFqNameRefExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ConceptFqNameRefExpression newInstance(SModel sm) {
    return ConceptFqNameRefExpression.newInstance(sm, false);
  }
}
