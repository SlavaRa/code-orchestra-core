package jetbrains.mps.lang.smodel.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.lang.structure.structure.LinkDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LinkRefExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.smodel.structure.LinkRefExpression";
  public static final String CONCEPT_DECLARATION = "conceptDeclaration";
  public static final String LINK_DECLARATION = "linkDeclaration";

  public LinkRefExpression(SNode node) {
    super(node);
  }

  public AbstractConceptDeclaration getConceptDeclaration() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, LinkRefExpression.CONCEPT_DECLARATION);
  }

  public void setConceptDeclaration(AbstractConceptDeclaration node) {
    super.setReferent(LinkRefExpression.CONCEPT_DECLARATION, node);
  }

  public LinkDeclaration getLinkDeclaration() {
    return (LinkDeclaration) this.getReferent(LinkDeclaration.class, LinkRefExpression.LINK_DECLARATION);
  }

  public void setLinkDeclaration(LinkDeclaration node) {
    super.setReferent(LinkRefExpression.LINK_DECLARATION, node);
  }

  public static LinkRefExpression newInstance(SModel sm, boolean init) {
    return (LinkRefExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.LinkRefExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LinkRefExpression newInstance(SModel sm) {
    return LinkRefExpression.newInstance(sm, false);
  }
}
