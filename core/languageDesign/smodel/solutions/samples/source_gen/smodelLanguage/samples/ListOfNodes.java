package smodelLanguage.samples;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ListOfNodes {
  public void newList(SNode e1, SNode e2) {
    List<SNode> list = ListSequence.fromListAndArray(new ArrayList<SNode>(), e1, e2);
  }

  public void first(SNode sl) {
    ListSequence.fromList(SLinkOperations.getTargets(sl, "statement", true)).first();
    Iterable<SNode> nodes = ListSequence.fromList(SLinkOperations.getTargets(sl, "statement", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.baseLanguage.structure.IfStatement");
      }
    });
  }
}
