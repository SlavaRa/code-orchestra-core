package jetbrains.mps.lang.smodelTests.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Root extends NamedConcept {
  public static final String concept = "jetbrains.mps.lang.smodelTests.structure.Root";
  public static final String CHILD_0_N = "child_0_n";
  public static final String CHILD_1_N = "child_1_n";
  public static final String CHILD_SUB_CONCEPT_0_N = "childSubConcept_0_n";

  public Root(SNode node) {
    super(node);
  }

  public int getChild_0_nsCount() {
    return this.getChildCount(Root.CHILD_0_N);
  }

  public Iterator<Child> child_0_ns() {
    return this.children(Child.class, Root.CHILD_0_N);
  }

  public List<Child> getChild_0_ns() {
    return this.getChildren(Child.class, Root.CHILD_0_N);
  }

  public void addChild_0_n(Child node) {
    this.addChild(Root.CHILD_0_N, node);
  }

  public void insertChild_0_n(Child prev, Child node) {
    this.insertChild(prev, Root.CHILD_0_N, node);
  }

  public int getChild_1_nsCount() {
    return this.getChildCount(Root.CHILD_1_N);
  }

  public Iterator<Child> child_1_ns() {
    return this.children(Child.class, Root.CHILD_1_N);
  }

  public List<Child> getChild_1_ns() {
    return this.getChildren(Child.class, Root.CHILD_1_N);
  }

  public void addChild_1_n(Child node) {
    this.addChild(Root.CHILD_1_N, node);
  }

  public void insertChild_1_n(Child prev, Child node) {
    this.insertChild(prev, Root.CHILD_1_N, node);
  }

  public int getChildSubConcept_0_nsCount() {
    return this.getChildCount(Root.CHILD_SUB_CONCEPT_0_N);
  }

  public Iterator<ChildSubConcept> childSubConcept_0_ns() {
    return this.children(ChildSubConcept.class, Root.CHILD_SUB_CONCEPT_0_N);
  }

  public List<ChildSubConcept> getChildSubConcept_0_ns() {
    return this.getChildren(ChildSubConcept.class, Root.CHILD_SUB_CONCEPT_0_N);
  }

  public void addChildSubConcept_0_n(ChildSubConcept node) {
    this.addChild(Root.CHILD_SUB_CONCEPT_0_N, node);
  }

  public void insertChildSubConcept_0_n(ChildSubConcept prev, ChildSubConcept node) {
    this.insertChild(prev, Root.CHILD_SUB_CONCEPT_0_N, node);
  }

  public static Root newInstance(SModel sm, boolean init) {
    return (Root) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodelTests.structure.Root", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Root newInstance(SModel sm) {
    return Root.newInstance(sm, false);
  }
}
