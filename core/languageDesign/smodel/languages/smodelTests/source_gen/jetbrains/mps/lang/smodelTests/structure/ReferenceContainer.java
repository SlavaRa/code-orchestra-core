package jetbrains.mps.lang.smodelTests.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReferenceContainer extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.smodelTests.structure.ReferenceContainer";
  public static final String ROOT = "root";
  public static final String LEFT_CHILD = "leftChild";
  public static final String RIGHT_CHILD = "rightChild";

  public ReferenceContainer(SNode node) {
    super(node);
  }

  public Root getRoot() {
    return (Root) this.getReferent(Root.class, ReferenceContainer.ROOT);
  }

  public void setRoot(Root node) {
    super.setReferent(ReferenceContainer.ROOT, node);
  }

  public Child getLeftChild() {
    return (Child) this.getReferent(Child.class, ReferenceContainer.LEFT_CHILD);
  }

  public void setLeftChild(Child node) {
    super.setReferent(ReferenceContainer.LEFT_CHILD, node);
  }

  public Child getRightChild() {
    return (Child) this.getReferent(Child.class, ReferenceContainer.RIGHT_CHILD);
  }

  public void setRightChild(Child node) {
    super.setReferent(ReferenceContainer.RIGHT_CHILD, node);
  }

  public static ReferenceContainer newInstance(SModel sm, boolean init) {
    return (ReferenceContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReferenceContainer newInstance(SModel sm) {
    return ReferenceContainer.newInstance(sm, false);
  }
}
