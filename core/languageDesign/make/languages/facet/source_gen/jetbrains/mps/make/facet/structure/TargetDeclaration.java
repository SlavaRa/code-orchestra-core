package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.make.script.structure.JobDeclaration;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TargetDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.make.facet.structure.TargetDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String RESOURCES_POLICY = "resourcesPolicy";
  public static final String OVERRIDES = "overrides";
  public static final String PARAMETERS = "parameters";
  public static final String JOB = "job";
  public static final String INPUT = "input";
  public static final String OUTPUT = "output";
  public static final String DEPENDENCY = "dependency";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public TargetDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(TargetDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(TargetDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(TargetDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TargetDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TargetDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TargetDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TargetDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TargetDeclaration.VIRTUAL_PACKAGE, value);
  }

  public ResourcesPolicy getResourcesPolicy() {
    String value = super.getProperty(TargetDeclaration.RESOURCES_POLICY);
    return ResourcesPolicy.parseValue(value);
  }

  public void setResourcesPolicy(ResourcesPolicy value) {
    super.setProperty(TargetDeclaration.RESOURCES_POLICY, value.getValueAsString());
  }

  public TargetDeclaration getOverrides() {
    return (TargetDeclaration) this.getReferent(TargetDeclaration.class, TargetDeclaration.OVERRIDES);
  }

  public void setOverrides(TargetDeclaration node) {
    super.setReferent(TargetDeclaration.OVERRIDES, node);
  }

  public ParametersDeclaration getParameters() {
    return (ParametersDeclaration) this.getChild(ParametersDeclaration.class, TargetDeclaration.PARAMETERS);
  }

  public void setParameters(ParametersDeclaration node) {
    super.setChild(TargetDeclaration.PARAMETERS, node);
  }

  public JobDeclaration getJob() {
    return (JobDeclaration) this.getChild(JobDeclaration.class, TargetDeclaration.JOB);
  }

  public void setJob(JobDeclaration node) {
    super.setChild(TargetDeclaration.JOB, node);
  }

  public ResourceTypeDeclaration getInput() {
    return (ResourceTypeDeclaration) this.getChild(ResourceTypeDeclaration.class, TargetDeclaration.INPUT);
  }

  public void setInput(ResourceTypeDeclaration node) {
    super.setChild(TargetDeclaration.INPUT, node);
  }

  public ResourceTypeDeclaration getOutput() {
    return (ResourceTypeDeclaration) this.getChild(ResourceTypeDeclaration.class, TargetDeclaration.OUTPUT);
  }

  public void setOutput(ResourceTypeDeclaration node) {
    super.setChild(TargetDeclaration.OUTPUT, node);
  }

  public int getDependenciesCount() {
    return this.getChildCount(TargetDeclaration.DEPENDENCY);
  }

  public Iterator<TargetDependency> dependencies() {
    return this.children(TargetDependency.class, TargetDeclaration.DEPENDENCY);
  }

  public List<TargetDependency> getDependencies() {
    return this.getChildren(TargetDependency.class, TargetDeclaration.DEPENDENCY);
  }

  public void addDependency(TargetDependency node) {
    this.addChild(TargetDeclaration.DEPENDENCY, node);
  }

  public void insertDependency(TargetDependency prev, TargetDependency node) {
    this.insertChild(prev, TargetDeclaration.DEPENDENCY, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(TargetDeclaration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, TargetDeclaration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, TargetDeclaration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(TargetDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, TargetDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public static TargetDeclaration newInstance(SModel sm, boolean init) {
    return (TargetDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.facet.structure.TargetDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TargetDeclaration newInstance(SModel sm) {
    return TargetDeclaration.newInstance(sm, false);
  }
}
