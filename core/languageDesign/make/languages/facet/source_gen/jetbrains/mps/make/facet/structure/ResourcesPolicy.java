package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum ResourcesPolicy {
  transform("transform", "TRANSFORM"),
  pass_through("pass through", "PASSTHRU"),
  consume("consume", "CONSUME"),
  produce("produce", "PRODUCE");

  private String myName;
  private String myValue;

  ResourcesPolicy(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<ResourcesPolicy> getConstants() {
    List<ResourcesPolicy> list = ListSequence.fromList(new LinkedList<ResourcesPolicy>());
    ListSequence.fromList(list).addElement(ResourcesPolicy.transform);
    ListSequence.fromList(list).addElement(ResourcesPolicy.pass_through);
    ListSequence.fromList(list).addElement(ResourcesPolicy.consume);
    ListSequence.fromList(list).addElement(ResourcesPolicy.produce);
    return list;
  }

  public static ResourcesPolicy getDefault() {
    return ResourcesPolicy.transform;
  }

  public static ResourcesPolicy parseValue(String value) {
    if (value == null) {
      return ResourcesPolicy.getDefault();
    }
    if (value.equals(ResourcesPolicy.transform.getValueAsString())) {
      return ResourcesPolicy.transform;
    }
    if (value.equals(ResourcesPolicy.pass_through.getValueAsString())) {
      return ResourcesPolicy.pass_through;
    }
    if (value.equals(ResourcesPolicy.consume.getValueAsString())) {
      return ResourcesPolicy.consume;
    }
    if (value.equals(ResourcesPolicy.produce.getValueAsString())) {
      return ResourcesPolicy.produce;
    }
    return ResourcesPolicy.getDefault();
  }
}
