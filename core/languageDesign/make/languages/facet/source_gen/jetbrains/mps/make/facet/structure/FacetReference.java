package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FacetReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.make.facet.structure.FacetReference";
  public static final String FACET = "facet";

  public FacetReference(SNode node) {
    super(node);
  }

  public FacetDeclaration getFacet() {
    return (FacetDeclaration) this.getReferent(FacetDeclaration.class, FacetReference.FACET);
  }

  public void setFacet(FacetDeclaration node) {
    super.setReferent(FacetReference.FACET, node);
  }

  public static FacetReference newInstance(SModel sm, boolean init) {
    return (FacetReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.facet.structure.FacetReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FacetReference newInstance(SModel sm) {
    return FacetReference.newInstance(sm, false);
  }
}
