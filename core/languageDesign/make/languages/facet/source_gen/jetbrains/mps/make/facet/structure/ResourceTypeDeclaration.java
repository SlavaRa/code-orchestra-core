package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ResourceTypeDeclaration extends BaseConcept {
  public static final String concept = "jetbrains.mps.make.facet.structure.ResourceTypeDeclaration";
  public static final String RESOURCE_TYPE = "resourceType";

  public ResourceTypeDeclaration(SNode node) {
    super(node);
  }

  public int getResourceTypesCount() {
    return this.getChildCount(ResourceTypeDeclaration.RESOURCE_TYPE);
  }

  public Iterator<ResourceClassifierType> resourceTypes() {
    return this.children(ResourceClassifierType.class, ResourceTypeDeclaration.RESOURCE_TYPE);
  }

  public List<ResourceClassifierType> getResourceTypes() {
    return this.getChildren(ResourceClassifierType.class, ResourceTypeDeclaration.RESOURCE_TYPE);
  }

  public void addResourceType(ResourceClassifierType node) {
    this.addChild(ResourceTypeDeclaration.RESOURCE_TYPE, node);
  }

  public void insertResourceType(ResourceClassifierType prev, ResourceClassifierType node) {
    this.insertChild(prev, ResourceTypeDeclaration.RESOURCE_TYPE, node);
  }

  public static ResourceTypeDeclaration newInstance(SModel sm, boolean init) {
    return (ResourceTypeDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.facet.structure.ResourceTypeDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ResourceTypeDeclaration newInstance(SModel sm) {
    return ResourceTypeDeclaration.newInstance(sm, false);
  }
}
