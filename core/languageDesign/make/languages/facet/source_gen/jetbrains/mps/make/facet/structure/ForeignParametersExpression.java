package jetbrains.mps.make.facet.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ForeignParametersExpression extends Expression {
  public static final String concept = "jetbrains.mps.make.facet.structure.ForeignParametersExpression";
  public static final String TARGET = "target";

  public ForeignParametersExpression(SNode node) {
    super(node);
  }

  public TargetDeclaration getTarget() {
    return (TargetDeclaration) this.getReferent(TargetDeclaration.class, ForeignParametersExpression.TARGET);
  }

  public void setTarget(TargetDeclaration node) {
    super.setReferent(ForeignParametersExpression.TARGET, node);
  }

  public static ForeignParametersExpression newInstance(SModel sm, boolean init) {
    return (ForeignParametersExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.facet.structure.ForeignParametersExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ForeignParametersExpression newInstance(SModel sm) {
    return ForeignParametersExpression.newInstance(sm, false);
  }
}
