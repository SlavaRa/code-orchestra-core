package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class OptionExpression extends Expression {
  public static final String concept = "jetbrains.mps.make.script.structure.OptionExpression";
  public static final String OPTION = "option";

  public OptionExpression(SNode node) {
    super(node);
  }

  public Option getOption() {
    return (Option) this.getReferent(Option.class, OptionExpression.OPTION);
  }

  public void setOption(Option node) {
    super.setReferent(OptionExpression.OPTION, node);
  }

  public static OptionExpression newInstance(SModel sm, boolean init) {
    return (OptionExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.OptionExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static OptionExpression newInstance(SModel sm) {
    return OptionExpression.newInstance(sm, false);
  }
}
