package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RelayQueryExpression extends Expression {
  public static final String concept = "jetbrains.mps.make.script.structure.RelayQueryExpression";
  public static final String QUERY = "query";
  public static final String PARAMETER = "parameter";

  public RelayQueryExpression(SNode node) {
    super(node);
  }

  public QueryDefinition getQuery() {
    return (QueryDefinition) this.getReferent(QueryDefinition.class, RelayQueryExpression.QUERY);
  }

  public void setQuery(QueryDefinition node) {
    super.setReferent(RelayQueryExpression.QUERY, node);
  }

  public int getParametersCount() {
    return this.getChildCount(RelayQueryExpression.PARAMETER);
  }

  public Iterator<Expression> parameters() {
    return this.children(Expression.class, RelayQueryExpression.PARAMETER);
  }

  public List<Expression> getParameters() {
    return this.getChildren(Expression.class, RelayQueryExpression.PARAMETER);
  }

  public void addParameter(Expression node) {
    this.addChild(RelayQueryExpression.PARAMETER, node);
  }

  public void insertParameter(Expression prev, Expression node) {
    this.insertChild(prev, RelayQueryExpression.PARAMETER, node);
  }

  public static RelayQueryExpression newInstance(SModel sm, boolean init) {
    return (RelayQueryExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.RelayQueryExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RelayQueryExpression newInstance(SModel sm) {
    return RelayQueryExpression.newInstance(sm, false);
  }
}
