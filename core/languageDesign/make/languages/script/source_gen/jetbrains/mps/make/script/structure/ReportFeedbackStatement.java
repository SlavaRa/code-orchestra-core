package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReportFeedbackStatement extends Statement {
  public static final String concept = "jetbrains.mps.make.script.structure.ReportFeedbackStatement";
  public static final String FEEDBACK = "feedback";
  public static final String MESSAGE = "message";

  public ReportFeedbackStatement(SNode node) {
    super(node);
  }

  public Feedback getFeedback() {
    String value = super.getProperty(ReportFeedbackStatement.FEEDBACK);
    return Feedback.parseValue(value);
  }

  public void setFeedback(Feedback value) {
    super.setProperty(ReportFeedbackStatement.FEEDBACK, value.getValueAsString());
  }

  public Expression getMessage() {
    return (Expression) this.getChild(Expression.class, ReportFeedbackStatement.MESSAGE);
  }

  public void setMessage(Expression node) {
    super.setChild(ReportFeedbackStatement.MESSAGE, node);
  }

  public static ReportFeedbackStatement newInstance(SModel sm, boolean init) {
    return (ReportFeedbackStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.ReportFeedbackStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReportFeedbackStatement newInstance(SModel sm) {
    return ReportFeedbackStatement.newInstance(sm, false);
  }
}
