package jetbrains.mps.make.script.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AdvanceWorkStatement extends Statement {
  public static final String concept = "jetbrains.mps.make.script.structure.AdvanceWorkStatement";
  public static final String WORK_STATEMENT = "workStatement";
  public static final String AMOUNT = "amount";
  public static final String COMMENT = "comment";

  public AdvanceWorkStatement(SNode node) {
    super(node);
  }

  public BeginWorkStatement getWorkStatement() {
    return (BeginWorkStatement) this.getReferent(BeginWorkStatement.class, AdvanceWorkStatement.WORK_STATEMENT);
  }

  public void setWorkStatement(BeginWorkStatement node) {
    super.setReferent(AdvanceWorkStatement.WORK_STATEMENT, node);
  }

  public Expression getAmount() {
    return (Expression) this.getChild(Expression.class, AdvanceWorkStatement.AMOUNT);
  }

  public void setAmount(Expression node) {
    super.setChild(AdvanceWorkStatement.AMOUNT, node);
  }

  public Expression getComment() {
    return (Expression) this.getChild(Expression.class, AdvanceWorkStatement.COMMENT);
  }

  public void setComment(Expression node) {
    super.setChild(AdvanceWorkStatement.COMMENT, node);
  }

  public static AdvanceWorkStatement newInstance(SModel sm, boolean init) {
    return (AdvanceWorkStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.make.script.structure.AdvanceWorkStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AdvanceWorkStatement newInstance(SModel sm) {
    return AdvanceWorkStatement.newInstance(sm, false);
  }
}
