package jetbrains.mps.lang.quotation.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateSwitchMapping;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.generator.runtime.TemplateReductionRule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import java.util.Collection;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.generator.impl.AbandonRuleInputException;
import java.util.Collections;

public class SwitchQuotationModel__switch implements TemplateSwitchMapping {
  private static SNodePointer reductionRule_m6rw76_a0a2a = new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)", "1196351886656");
  private static SNodePointer conseq_m6rw76_a0a0a4a = new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)", "1196351886657");
  private static SNodePointer conseq_m6rw76_a0a0a3 = new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)", "1196351886666");

  private final Iterable<TemplateReductionRule> rules;

  public SwitchQuotationModel__switch() {
    rules = TemplateUtil.<TemplateReductionRule>asIterable(new SwitchQuotationModel__switch.ReductionRule0());
  }

  public SNodePointer getSwitchNode() {
    return new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)", "1196351886655");
  }

  public SNodePointer getModifiesSwitch() {
    return null;
  }

  public Iterable<TemplateReductionRule> getReductionRules() {
    return rules;
  }

  public Collection<SNode> applyDefault(final TemplateExecutionEnvironment environment, SNodePointer templateSwitch, String mappingLabel, final TemplateContext context) throws GenerationException {
    environment.getTracer().pushRuleConsequence(conseq_m6rw76_a0a0a3);
    Collection<SNode> tlist1 = new TemplateQuotationModel__NullModel().apply(environment, context);
    return tlist1;
  }

  public void processNull(TemplateExecutionEnvironment environment, SNodePointer templateSwitch, TemplateContext context) {
  }

  public class ReductionRule0 implements TemplateReductionRule {
    public ReductionRule0() {
    }

    public boolean applyToInheritors() {
      return false;
    }

    public String getApplicableConcept() {
      return "jetbrains.mps.lang.quotation.structure.Quotation";
    }

    public SNodePointer getRuleNode() {
      return reductionRule_m6rw76_a0a2a;
    }

    public Collection<SNode> tryToApply(final TemplateExecutionEnvironment environment, final TemplateContext context) throws GenerationException {
      if (!(QueriesGenerated.baseMappingRule_Condition_1196351886658(environment.getOperationContext(), new BaseMappingRuleContext(context.getInput(), reductionRule_m6rw76_a0a2a, environment.getGenerator())))) {
        return null;
      }

      environment.getTracer().pushRule(reductionRule_m6rw76_a0a2a);
      try {
        return apply(context, environment.getEnvironment(context.getInput(), this));
      } catch (AbandonRuleInputException e) {
        return Collections.emptyList();
      } finally {
        environment.getTracer().closeRule(reductionRule_m6rw76_a0a2a);
      }

    }

    private Collection<SNode> apply(final TemplateContext context, final TemplateExecutionEnvironment environment) throws GenerationException {
      environment.getTracer().pushRuleConsequence(conseq_m6rw76_a0a0a4a);
      Collection<SNode> tlist1 = new TemplateQuotationModel__modelToCreate().apply(environment, context);
      return tlist1;
    }
  }
}
