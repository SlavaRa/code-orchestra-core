package jetbrains.mps.lang.structure.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AggregationConceptLink extends ConceptLink {
  public static final String concept = "jetbrains.mps.lang.structure.structure.AggregationConceptLink";
  public static final String TARGET = "target";

  public AggregationConceptLink(SNode node) {
    super(node);
  }

  public AggregationConceptLinkDeclaration getAggregationConceptLinkDeclaration() {
    return this.ensureAdapter(AggregationConceptLinkDeclaration.class, "conceptLinkDeclaration", this.getConceptLinkDeclaration());
  }

  public void setAggregationConceptLinkDeclaration(AggregationConceptLinkDeclaration node) {
    this.setConceptLinkDeclaration(node);
  }

  public BaseConcept getTarget() {
    return (BaseConcept) this.getChild(BaseConcept.class, AggregationConceptLink.TARGET);
  }

  public void setTarget(BaseConcept node) {
    super.setChild(AggregationConceptLink.TARGET, node);
  }

  public static AggregationConceptLink newInstance(SModel sm, boolean init) {
    return (AggregationConceptLink) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.structure.structure.AggregationConceptLink", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AggregationConceptLink newInstance(SModel sm) {
    return AggregationConceptLink.newInstance(sm, false);
  }
}
