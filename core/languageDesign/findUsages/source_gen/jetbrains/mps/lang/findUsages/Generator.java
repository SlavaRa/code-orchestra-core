package jetbrains.mps.lang.findUsages;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.project.structure.modules.ModuleReference;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateMappingPriorityRule;
import jetbrains.mps.generator.runtime.TemplateModel;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.lang.findUsages.generator.baseLanguage.template.main.TemplateModelImpl;
import jetbrains.mps.smodel.language.LanguageRuntime;

public class Generator implements TemplateModule {
  public static ModuleReference MODULE_REFERENCE = ModuleReference.fromString("1759b4cc-455d-49b4-a360-8baf1f5f8bab(jetbrains.mps.lang.findUsages#1197044805809)");

  private Language sourceLanguage;
  private final Collection<TemplateMappingPriorityRule> priorities;
  private final Collection<TemplateModel> models;
  private final Collection<String> referencedGenerators;
  private Collection<String> usedLanguages;

  public Generator(Language sourceLanguage) {
    this.sourceLanguage = sourceLanguage;
    priorities = TemplateUtil.asCollection(TemplateUtil.createStrictlyBeforeRule(TemplateUtil.createRefExternal("1759b4cc-455d-49b4-a360-8baf1f5f8bab(jetbrains.mps.lang.findUsages#1197044805809)", TemplateUtil.createRefLocal()), TemplateUtil.createRefExternal("5f9babc9-8d5d-4825-8e61-17b241ee6272(jetbrains.mps.baseLanguage.collections#1151699677197)", TemplateUtil.createRefLocal())));
    models = TemplateUtil.<TemplateModel>asCollection(new TemplateModelImpl(this));
    referencedGenerators = TemplateUtil.<String>asCollection("jetbrains.mps.baseLanguage.collections/jetbrains.mps.baseLanguage.collections#1151699677197");
    usedLanguages = TemplateUtil.<String>asCollection("jetbrains.mps.baseLanguage", "jetbrains.mps.baseLanguage.collections", "jetbrains.mps.lang.smodel");
  }

  public String getAlias() {
    return "jetbrains.mps.lang.findUsages/<no name>";
  }

  public Collection<TemplateModel> getModels() {
    return models;
  }

  public Collection<TemplateMappingPriorityRule> getPriorities() {
    return priorities;
  }

  public ModuleReference getReference() {
    return MODULE_REFERENCE;
  }

  public Collection<String> getUsedLanguages() {
    return usedLanguages;
  }

  public LanguageRuntime getSourceLanguage() {
    return sourceLanguage;
  }

  public Collection<String> getReferencedModules() {
    return referencedGenerators;
  }
}
