package jetbrains.mps.lang.project.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ModuleDependency extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.project.structure.ModuleDependency";
  public static final String REEXPORT = "reexport";
  public static final String MODULE_REF = "moduleRef";

  public ModuleDependency(SNode node) {
    super(node);
  }

  public boolean getReexport() {
    return this.getBooleanProperty(ModuleDependency.REEXPORT);
  }

  public void setReexport(boolean value) {
    this.setBooleanProperty(ModuleDependency.REEXPORT, value);
  }

  public ModuleReference getModuleRef() {
    return (ModuleReference) this.getChild(ModuleReference.class, ModuleDependency.MODULE_REF);
  }

  public void setModuleRef(ModuleReference node) {
    super.setChild(ModuleDependency.MODULE_REF, node);
  }

  public static ModuleDependency newInstance(SModel sm, boolean init) {
    return (ModuleDependency) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.project.structure.ModuleDependency", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ModuleDependency newInstance(SModel sm) {
    return ModuleDependency.newInstance(sm, false);
  }
}
