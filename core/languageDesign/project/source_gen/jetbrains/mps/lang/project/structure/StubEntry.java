package jetbrains.mps.lang.project.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StubEntry extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.project.structure.StubEntry";
  public static final String PATH = "path";
  public static final String INCLUDED_IN_V_C_S = "includedInVCS";
  public static final String MANAGER = "manager";

  public StubEntry(SNode node) {
    super(node);
  }

  public String getPath() {
    return this.getProperty(StubEntry.PATH);
  }

  public void setPath(String value) {
    this.setProperty(StubEntry.PATH, value);
  }

  public boolean getIncludedInVCS() {
    return this.getBooleanProperty(StubEntry.INCLUDED_IN_V_C_S);
  }

  public void setIncludedInVCS(boolean value) {
    this.setBooleanProperty(StubEntry.INCLUDED_IN_V_C_S, value);
  }

  public ModelRootManager getManager() {
    return (ModelRootManager) this.getChild(ModelRootManager.class, StubEntry.MANAGER);
  }

  public void setManager(ModelRootManager node) {
    super.setChild(StubEntry.MANAGER, node);
  }

  public static StubEntry newInstance(SModel sm, boolean init) {
    return (StubEntry) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.project.structure.StubEntry", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StubEntry newInstance(SModel sm) {
    return StubEntry.newInstance(sm, false);
  }
}
