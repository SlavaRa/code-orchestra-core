package jetbrains.mps.lang.intentions.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GenerateIntentionDeclaration extends BaseIntentionDeclaration {
  public static final String concept = "jetbrains.mps.lang.intentions.structure.GenerateIntentionDeclaration";
  public static final String IS_ALWAYS_VISIBLE = "isAlwaysVisible";
  public static final String EXECUTE_U_I = "executeUI";
  public static final String PARAMETER = "parameter";

  public GenerateIntentionDeclaration(SNode node) {
    super(node);
  }

  public boolean getIsAlwaysVisible() {
    return this.getBooleanProperty(GenerateIntentionDeclaration.IS_ALWAYS_VISIBLE);
  }

  public void setIsAlwaysVisible(boolean value) {
    this.setBooleanProperty(GenerateIntentionDeclaration.IS_ALWAYS_VISIBLE, value);
  }

  public ExecuteUIBlock getExecuteUI() {
    return (ExecuteUIBlock) this.getChild(ExecuteUIBlock.class, GenerateIntentionDeclaration.EXECUTE_U_I);
  }

  public void setExecuteUI(ExecuteUIBlock node) {
    super.setChild(GenerateIntentionDeclaration.EXECUTE_U_I, node);
  }

  public int getParametersCount() {
    return this.getChildCount(GenerateIntentionDeclaration.PARAMETER);
  }

  public Iterator<IntentionContextParameterDeclaration> parameters() {
    return this.children(IntentionContextParameterDeclaration.class, GenerateIntentionDeclaration.PARAMETER);
  }

  public List<IntentionContextParameterDeclaration> getParameters() {
    return this.getChildren(IntentionContextParameterDeclaration.class, GenerateIntentionDeclaration.PARAMETER);
  }

  public void addParameter(IntentionContextParameterDeclaration node) {
    this.addChild(GenerateIntentionDeclaration.PARAMETER, node);
  }

  public void insertParameter(IntentionContextParameterDeclaration prev, IntentionContextParameterDeclaration node) {
    this.insertChild(prev, GenerateIntentionDeclaration.PARAMETER, node);
  }

  public static GenerateIntentionDeclaration newInstance(SModel sm, boolean init) {
    return (GenerateIntentionDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.intentions.structure.GenerateIntentionDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GenerateIntentionDeclaration newInstance(SModel sm) {
    return GenerateIntentionDeclaration.newInstance(sm, false);
  }
}
