package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReadOnlyModelAccessor extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.structure.ReadOnlyModelAccessor";
  public static final String GETTER = "getter";

  public ReadOnlyModelAccessor(SNode node) {
    super(node);
  }

  public QueryFunction_ModelAccess_Getter getGetter() {
    return (QueryFunction_ModelAccess_Getter) this.getChild(QueryFunction_ModelAccess_Getter.class, ReadOnlyModelAccessor.GETTER);
  }

  public void setGetter(QueryFunction_ModelAccess_Getter node) {
    super.setChild(ReadOnlyModelAccessor.GETTER, node);
  }

  public static ReadOnlyModelAccessor newInstance(SModel sm, boolean init) {
    return (ReadOnlyModelAccessor) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.ReadOnlyModelAccessor", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReadOnlyModelAccessor newInstance(SModel sm) {
    return ReadOnlyModelAccessor.newInstance(sm, false);
  }
}
