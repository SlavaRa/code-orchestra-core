package jetbrains.mps.lang.editor.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.util.NameUtil;

public class BaseEditorComponent_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> call_getApplicableComponents_1213877372457(SNode thisNode, IScope scope) {
    final SNode conceptDeclaration = AbstractComponent_Behavior.call_getConceptDeclaration_7055725856388417603(thisNode);
    List<SNode> editorComponents = SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(thisNode), scope, "jetbrains.mps.lang.editor.structure.EditorComponentDeclaration");
    return ListSequence.fromList(editorComponents).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SConceptOperations.isSuperConceptOf(AbstractComponent_Behavior.call_getConceptDeclaration_7055725856388417603(it), NameUtil.nodeFQName(conceptDeclaration));
      }
    }).toListSequence();
  }
}
