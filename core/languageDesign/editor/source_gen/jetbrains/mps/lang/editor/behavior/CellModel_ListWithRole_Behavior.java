package jetbrains.mps.lang.editor.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class CellModel_ListWithRole_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_isVertical_1239873472748(SNode thisNode) {
    return (SPropertyOperations.getBoolean(thisNode, "vertical") && (SLinkOperations.getTarget(thisNode, "cellLayout", true) == null)) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "cellLayout", true), "jetbrains.mps.lang.editor.structure.CellLayout_Vertical");
  }

  public static boolean call_isVerticalGrid_1239873867713(SNode thisNode) {
    return (SPropertyOperations.getBoolean(thisNode, "gridLayout") && (SLinkOperations.getTarget(thisNode, "cellLayout", true) == null)) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "cellLayout", true), "jetbrains.mps.lang.editor.structure.CellLayout_VerticalGrid");
  }

  public static boolean call_isHorizontal_1239873867736(SNode thisNode) {
    return (!(SPropertyOperations.getBoolean(thisNode, "vertical")) && (SLinkOperations.getTarget(thisNode, "cellLayout", true) == null)) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, "cellLayout", true), "jetbrains.mps.lang.editor.structure.CellLayout_Horizontal");
  }

  public static boolean call_isFoldingEnabled_4601216887035799532(SNode thisNode) {
    return SPropertyOperations.getBoolean(thisNode, "usesFolding") || (SLinkOperations.getTarget(thisNode, "usesFoldingCondition", true) != null);
  }
}
