package jetbrains.mps.lang.editor.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TrimConstantCell_Intention extends BaseIntention implements Intention {
  public TrimConstantCell_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.editor.structure.CellModel_Constant";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Trim Constant Cell";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    String text = SPropertyOperations.getString(node, "text");
    if (text == null || text.length() == 0) {
      return false;
    }
    if (text.charAt(0) == ' ' || text.charAt(text.length() - 1) == ' ') {
      return true;
    }
    return false;
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "text", SPropertyOperations.getString(node, "text").trim());
  }

  public String getLocationString() {
    return "jetbrains.mps.lang.editor.intentions";
  }
}
