package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellModel_AbstractLabel extends EditorCellModel {
  public static final String concept = "jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel";
  public static final String DEFAULT_CARET_POSITION = "defaultCaretPosition";
  public static final String CELL_FOREGROUND_FUNCTION = "cellForegroundFunction";
  public static final String TEXT_FOREGROUND_EMPTY_FUNCTION = "textForegroundEmptyFunction";
  public static final String TEXT_BACKGROUND_FUNCTION = "textBackgroundFunction";
  public static final String TEXT_BG_COLOR_SELECTED_FUNCTION = "textBgColorSelectedFunction";

  public CellModel_AbstractLabel(SNode node) {
    super(node);
  }

  public _CaretPosition_Enum getDefaultCaretPosition() {
    String value = super.getProperty(CellModel_AbstractLabel.DEFAULT_CARET_POSITION);
    return _CaretPosition_Enum.parseValue(value);
  }

  public void setDefaultCaretPosition(_CaretPosition_Enum value) {
    super.setProperty(CellModel_AbstractLabel.DEFAULT_CARET_POSITION, value.getValueAsString());
  }

  public QueryFunction_Color getCellForegroundFunction() {
    return (QueryFunction_Color) this.getChild(QueryFunction_Color.class, CellModel_AbstractLabel.CELL_FOREGROUND_FUNCTION);
  }

  public void setCellForegroundFunction(QueryFunction_Color node) {
    super.setChild(CellModel_AbstractLabel.CELL_FOREGROUND_FUNCTION, node);
  }

  public QueryFunction_Color getTextForegroundEmptyFunction() {
    return (QueryFunction_Color) this.getChild(QueryFunction_Color.class, CellModel_AbstractLabel.TEXT_FOREGROUND_EMPTY_FUNCTION);
  }

  public void setTextForegroundEmptyFunction(QueryFunction_Color node) {
    super.setChild(CellModel_AbstractLabel.TEXT_FOREGROUND_EMPTY_FUNCTION, node);
  }

  public QueryFunction_Color getTextBackgroundFunction() {
    return (QueryFunction_Color) this.getChild(QueryFunction_Color.class, CellModel_AbstractLabel.TEXT_BACKGROUND_FUNCTION);
  }

  public void setTextBackgroundFunction(QueryFunction_Color node) {
    super.setChild(CellModel_AbstractLabel.TEXT_BACKGROUND_FUNCTION, node);
  }

  public QueryFunction_Color getTextBgColorSelectedFunction() {
    return (QueryFunction_Color) this.getChild(QueryFunction_Color.class, CellModel_AbstractLabel.TEXT_BG_COLOR_SELECTED_FUNCTION);
  }

  public void setTextBgColorSelectedFunction(QueryFunction_Color node) {
    super.setChild(CellModel_AbstractLabel.TEXT_BG_COLOR_SELECTED_FUNCTION, node);
  }

  public static CellModel_AbstractLabel newInstance(SModel sm, boolean init) {
    return (CellModel_AbstractLabel) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellModel_AbstractLabel newInstance(SModel sm) {
    return CellModel_AbstractLabel.newInstance(sm, false);
  }
}
