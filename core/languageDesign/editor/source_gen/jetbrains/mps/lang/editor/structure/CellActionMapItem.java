package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellActionMapItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.editor.structure.CellActionMapItem";
  public static final String DESCRIPTION = "description";
  public static final String ACTION_ID = "actionId";
  public static final String EXECUTE_FUNCTION = "executeFunction";

  public CellActionMapItem(SNode node) {
    super(node);
  }

  public String getDescription() {
    return this.getProperty(CellActionMapItem.DESCRIPTION);
  }

  public void setDescription(String value) {
    this.setProperty(CellActionMapItem.DESCRIPTION, value);
  }

  public CellActionId getActionId() {
    String value = super.getProperty(CellActionMapItem.ACTION_ID);
    return CellActionId.parseValue(value);
  }

  public void setActionId(CellActionId value) {
    super.setProperty(CellActionMapItem.ACTION_ID, value.getValueAsString());
  }

  public CellActionMap_ExecuteFunction getExecuteFunction() {
    return (CellActionMap_ExecuteFunction) this.getChild(CellActionMap_ExecuteFunction.class, CellActionMapItem.EXECUTE_FUNCTION);
  }

  public void setExecuteFunction(CellActionMap_ExecuteFunction node) {
    super.setChild(CellActionMapItem.EXECUTE_FUNCTION, node);
  }

  public static CellActionMapItem newInstance(SModel sm, boolean init) {
    return (CellActionMapItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.editor.structure.CellActionMapItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellActionMapItem newInstance(SModel sm) {
    return CellActionMapItem.newInstance(sm, false);
  }
}
