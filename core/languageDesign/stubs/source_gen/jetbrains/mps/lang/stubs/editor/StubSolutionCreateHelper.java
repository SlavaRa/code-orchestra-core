package jetbrains.mps.lang.stubs.editor;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.project.structure.modules.StubSolution;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.IOperationContext;
import javax.swing.JOptionPane;
import jetbrains.mps.project.ModuleId;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.SModelRepository;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.project.structure.modules.LanguageDescriptor;

public class StubSolutionCreateHelper {
  public StubSolutionCreateHelper() {
  }

  public static List<StubSolution> getAvailableStubSolutions(SNode node) {
    Language currentLanguage = StubSolutionCreateHelper.getCurrentLanguage(node);
    return currentLanguage.getModuleDescriptor().getStubSolutions();
  }

  public static Language getCurrentLanguage(SNode node) {
    SModelDescriptor currentModel = SNodeOperations.getModel(node).getModelDescriptor();
    return Language.getLanguageForLanguageAspect(currentModel);
  }

  public static void createNewStubSolution(IOperationContext context, SNode node) {
    final Language language = StubSolutionCreateHelper.getCurrentLanguage(node);

    String solutionName = JOptionPane.showInputDialog(context.getMainFrame(), "NewSolution");

    final StubSolution stubSolution = new StubSolution();
    stubSolution.setId(ModuleId.generate());
    stubSolution.setName(solutionName);

    SPropertyOperations.set(node, "moduleName", solutionName);
    SPropertyOperations.set(node, "moduleId", stubSolution.getId().toString());

    SModelRepository.getInstance().saveAll();

    ModelAccess.instance().runWriteInEDT(new Runnable() {
      public void run() {
        LanguageDescriptor descriptor = language.getModuleDescriptor();
        descriptor.getStubSolutions().add(stubSolution);
        language.setLanguageDescriptor(descriptor, true);
      }
    });

    context.getProject().save();
  }
}
