package jetbrains.mps.lang.actions.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.VariableDeclaration;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SideTransformVariableDeclaration extends VariableDeclaration {
  public static final String concept = "jetbrains.mps.lang.actions.structure.SideTransformVariableDeclaration";
  public static final String INITIALIZER_BLOCK = "initializerBlock";

  public SideTransformVariableDeclaration(SNode node) {
    super(node);
  }

  public QueryFunction_STVariableInitializer getInitializerBlock() {
    return (QueryFunction_STVariableInitializer) this.getChild(QueryFunction_STVariableInitializer.class, SideTransformVariableDeclaration.INITIALIZER_BLOCK);
  }

  public void setInitializerBlock(QueryFunction_STVariableInitializer node) {
    super.setChild(SideTransformVariableDeclaration.INITIALIZER_BLOCK, node);
  }

  public static SideTransformVariableDeclaration newInstance(SModel sm, boolean init) {
    return (SideTransformVariableDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.actions.structure.SideTransformVariableDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SideTransformVariableDeclaration newInstance(SModel sm) {
    return SideTransformVariableDeclaration.newInstance(sm, false);
  }
}
