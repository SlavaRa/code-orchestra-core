package jetbrains.mps.lang.actions.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SmartEditorActions extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.actions.structure.SmartEditorActions";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String SURROUND_WITH = "surroundWith";
  public static final String GENERATE_CODE = "generateCode";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public SmartEditorActions(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(SmartEditorActions.NAME);
  }

  public void setName(String value) {
    this.setProperty(SmartEditorActions.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(SmartEditorActions.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(SmartEditorActions.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(SmartEditorActions.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(SmartEditorActions.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(SmartEditorActions.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(SmartEditorActions.VIRTUAL_PACKAGE, value);
  }

  public int getSurroundWithsCount() {
    return this.getChildCount(SmartEditorActions.SURROUND_WITH);
  }

  public Iterator<SurroundWithAction> surroundWiths() {
    return this.children(SurroundWithAction.class, SmartEditorActions.SURROUND_WITH);
  }

  public List<SurroundWithAction> getSurroundWiths() {
    return this.getChildren(SurroundWithAction.class, SmartEditorActions.SURROUND_WITH);
  }

  public void addSurroundWith(SurroundWithAction node) {
    this.addChild(SmartEditorActions.SURROUND_WITH, node);
  }

  public void insertSurroundWith(SurroundWithAction prev, SurroundWithAction node) {
    this.insertChild(prev, SmartEditorActions.SURROUND_WITH, node);
  }

  public int getGenerateCodesCount() {
    return this.getChildCount(SmartEditorActions.GENERATE_CODE);
  }

  public Iterator<GenerateCodeAction> generateCodes() {
    return this.children(GenerateCodeAction.class, SmartEditorActions.GENERATE_CODE);
  }

  public List<GenerateCodeAction> getGenerateCodes() {
    return this.getChildren(GenerateCodeAction.class, SmartEditorActions.GENERATE_CODE);
  }

  public void addGenerateCode(GenerateCodeAction node) {
    this.addChild(SmartEditorActions.GENERATE_CODE, node);
  }

  public void insertGenerateCode(GenerateCodeAction prev, GenerateCodeAction node) {
    this.insertChild(prev, SmartEditorActions.GENERATE_CODE, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(SmartEditorActions.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, SmartEditorActions.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, SmartEditorActions.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(SmartEditorActions.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, SmartEditorActions.SMODEL_ATTRIBUTE, node);
  }

  public static SmartEditorActions newInstance(SModel sm, boolean init) {
    return (SmartEditorActions) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.actions.structure.SmartEditorActions", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SmartEditorActions newInstance(SModel sm) {
    return SmartEditorActions.newInstance(sm, false);
  }
}
