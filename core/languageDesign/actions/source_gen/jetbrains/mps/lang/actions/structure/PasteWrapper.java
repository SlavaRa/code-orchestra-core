package jetbrains.mps.lang.actions.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PasteWrapper extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.actions.structure.PasteWrapper";
  public static final String SOURCE_CONCEPT = "sourceConcept";
  public static final String TARGET_CONCEPT = "targetConcept";
  public static final String WRAPPER_FUNCTION = "wrapperFunction";

  public PasteWrapper(SNode node) {
    super(node);
  }

  public AbstractConceptDeclaration getSourceConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, PasteWrapper.SOURCE_CONCEPT);
  }

  public void setSourceConcept(AbstractConceptDeclaration node) {
    super.setReferent(PasteWrapper.SOURCE_CONCEPT, node);
  }

  public AbstractConceptDeclaration getTargetConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, PasteWrapper.TARGET_CONCEPT);
  }

  public void setTargetConcept(AbstractConceptDeclaration node) {
    super.setReferent(PasteWrapper.TARGET_CONCEPT, node);
  }

  public QueryFunction_PasteWrapper getWrapperFunction() {
    return (QueryFunction_PasteWrapper) this.getChild(QueryFunction_PasteWrapper.class, PasteWrapper.WRAPPER_FUNCTION);
  }

  public void setWrapperFunction(QueryFunction_PasteWrapper node) {
    super.setChild(PasteWrapper.WRAPPER_FUNCTION, node);
  }

  public static PasteWrapper newInstance(SModel sm, boolean init) {
    return (PasteWrapper) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.actions.structure.PasteWrapper", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PasteWrapper newInstance(SModel sm) {
    return PasteWrapper.newInstance(sm, false);
  }
}
