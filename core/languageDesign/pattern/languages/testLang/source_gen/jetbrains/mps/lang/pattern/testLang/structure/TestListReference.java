package jetbrains.mps.lang.pattern.testLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.pattern.structure.ListPattern;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TestListReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.pattern.testLang.structure.TestListReference";
  public static final String LIST_PATTERN = "listPattern";

  public TestListReference(SNode node) {
    super(node);
  }

  public ListPattern getListPattern() {
    return (ListPattern) this.getReferent(ListPattern.class, TestListReference.LIST_PATTERN);
  }

  public void setListPattern(ListPattern node) {
    super.setReferent(TestListReference.LIST_PATTERN, node);
  }

  public static TestListReference newInstance(SModel sm, boolean init) {
    return (TestListReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.pattern.testLang.structure.TestListReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TestListReference newInstance(SModel sm) {
    return TestListReference.newInstance(sm, false);
  }
}
