package jetbrains.mps.lang.pattern.testLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.StringLiteral;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PropertyValue extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.pattern.testLang.structure.PropertyValue";
  public static final String VARIABLE = "variable";
  public static final String VALUE = "value";

  public PropertyValue(SNode node) {
    super(node);
  }

  public TestPropertyVariableReference getVariable() {
    return (TestPropertyVariableReference) this.getChild(TestPropertyVariableReference.class, PropertyValue.VARIABLE);
  }

  public void setVariable(TestPropertyVariableReference node) {
    super.setChild(PropertyValue.VARIABLE, node);
  }

  public StringLiteral getValue() {
    return (StringLiteral) this.getChild(StringLiteral.class, PropertyValue.VALUE);
  }

  public void setValue(StringLiteral node) {
    super.setChild(PropertyValue.VALUE, node);
  }

  public static PropertyValue newInstance(SModel sm, boolean init) {
    return (PropertyValue) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.pattern.testLang.structure.PropertyValue", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PropertyValue newInstance(SModel sm) {
    return PropertyValue.newInstance(sm, false);
  }
}
