package jetbrains.mps.lang.pattern.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class OrPatternClause extends PatternExpression {
  public static final String concept = "jetbrains.mps.lang.pattern.structure.OrPatternClause";

  public OrPatternClause(SNode node) {
    super(node);
  }

  public BaseConcept getExpression() {
    return this.ensureAdapter(BaseConcept.class, "patternNode", this.getPatternNode());
  }

  public void setExpression(BaseConcept node) {
    this.setPatternNode(node);
  }

  public static OrPatternClause newInstance(SModel sm, boolean init) {
    return (OrPatternClause) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.pattern.structure.OrPatternClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static OrPatternClause newInstance(SModel sm) {
    return OrPatternClause.newInstance(sm, false);
  }
}
