package jetbrains.mps.lang.pattern.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ActionAsPattern extends AsPattern {
  public static final String concept = "jetbrains.mps.lang.pattern.structure.ActionAsPattern";
  public static final String POSITION = "position";
  public static final String ACTION = "action";

  public ActionAsPattern(SNode node) {
    super(node);
  }

  public InsertPosition getPosition() {
    return (InsertPosition) this.getChild(InsertPosition.class, ActionAsPattern.POSITION);
  }

  public void setPosition(InsertPosition node) {
    super.setChild(ActionAsPattern.POSITION, node);
  }

  public ActionStatement getAction() {
    return (ActionStatement) this.getChild(ActionStatement.class, ActionAsPattern.ACTION);
  }

  public void setAction(ActionStatement node) {
    super.setChild(ActionAsPattern.ACTION, node);
  }

  public static ActionAsPattern newInstance(SModel sm, boolean init) {
    return (ActionAsPattern) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.pattern.structure.ActionAsPattern", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ActionAsPattern newInstance(SModel sm) {
    return ActionAsPattern.newInstance(sm, false);
  }
}
