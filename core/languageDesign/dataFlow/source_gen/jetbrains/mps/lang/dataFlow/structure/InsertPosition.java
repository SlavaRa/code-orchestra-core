package jetbrains.mps.lang.dataFlow.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InsertPosition extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.dataFlow.structure.InsertPosition";
  public static final String INSTRUCTION = "instruction";

  public InsertPosition(SNode node) {
    super(node);
  }

  public Expression getInstruction() {
    return (Expression) this.getChild(Expression.class, InsertPosition.INSTRUCTION);
  }

  public void setInstruction(Expression node) {
    super.setChild(InsertPosition.INSTRUCTION, node);
  }

  public static InsertPosition newInstance(SModel sm, boolean init) {
    return (InsertPosition) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.dataFlow.structure.InsertPosition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InsertPosition newInstance(SModel sm) {
    return InsertPosition.newInstance(sm, false);
  }
}
