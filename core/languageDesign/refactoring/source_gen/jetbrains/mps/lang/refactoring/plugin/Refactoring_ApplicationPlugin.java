package jetbrains.mps.lang.refactoring.plugin;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import com.intellij.openapi.extensions.PluginId;
import jetbrains.mps.ide.actions.FindUsages_ActionGroup;
import jetbrains.mps.ide.actions.ModelRefactoring_ActionGroup;
import java.util.List;
import jetbrains.mps.workbench.action.BaseKeymapChanges;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Refactoring_ApplicationPlugin extends BaseApplicationPlugin {
  private PluginId myId = PluginId.getId("jetbrains.mps.lang.refactoring");

  public Refactoring_ApplicationPlugin() {
  }

  public PluginId getId() {
    return myId;
  }

  public void createGroups() {
    // actions w/o parameters 
    // groups 
    addGroup(new ModelRefactorings_ActionGroup());
    addGroup(new NodeRefactoring_ActionGroup());
    addGroup(new NodeRefactoringNoPopup_ActionGroup()); // RE-534
  }

  public void adjustRegularGroups() {
    insertGroupIntoAnother(NodeRefactoring_ActionGroup.ID, FindUsages_ActionGroup.ID, FindUsages_ActionGroup.LABEL_ID_refactoring);
    insertGroupIntoAnother(ModelRefactorings_ActionGroup.ID, ModelRefactoring_ActionGroup.ID, null);
    insertGroupIntoAnother(NodeRefactoringNoPopup_ActionGroup.ID, "RefactorMenu", null); // RE-534
  }

  public List<BaseKeymapChanges> initKeymaps() {
    List<BaseKeymapChanges> res = ListSequence.fromList(new ArrayList<BaseKeymapChanges>());
    ListSequence.fromList(res).addElement(new Default_KeymapChanges());
    return res;
  }
}
