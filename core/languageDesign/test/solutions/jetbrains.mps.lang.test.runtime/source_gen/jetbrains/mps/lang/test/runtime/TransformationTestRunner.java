package jetbrains.mps.lang.test.runtime;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.unitTest.runtime.TestRunner;
import org.junit.runner.Request;
import jetbrains.mps.TestMain;
import javax.swing.SwingUtilities;
import com.intellij.openapi.application.impl.ApplicationImpl;
import com.intellij.openapi.application.ApplicationManager;
import org.junit.internal.requests.ClassRequest;
import org.junit.runner.Runner;
import org.junit.internal.builders.JUnit4Builder;

public class TransformationTestRunner extends TestRunner {
  public TransformationTestRunner() {
  }

  @Override
  protected Request createClassRequest(String className) throws ClassNotFoundException {
    return new TransformationTestRunner.TransformationClassRequest(Class.forName(className));
  }

  public static void main(String[] argv) {
    try {
      new TransformationTestRunner().executeTestsFromArguments(argv);
    } catch (Throwable t) {
      t.printStackTrace(System.err);
      System.exit(1);
    }
    TestMain.PROJECT_CONTAINER.clear();
    try {
      SwingUtilities.invokeAndWait(new Runnable() {
        public void run() {
          ((ApplicationImpl) ApplicationManager.getApplication()).exit(true);
        }
      });
    } catch (Exception e) {
      e.printStackTrace();
    }
    System.exit(0);
  }


  /**
   * Request to run with junit4 first, others only if cannot.
   * Since we have BaseTransformationTest extending TestCase, yet all transformation tests are in junit4 %(
   */
  public class TransformationClassRequest extends ClassRequest {
    private final Class<?> myClass;

    public TransformationClassRequest(Class<?> testClass) {
      super(testClass);
      myClass = testClass;
    }

    @Override
    public Runner getRunner() {
      Runner runner = new JUnit4Builder().safeRunnerForClass(myClass);
      if (runner != null) {
        return runner;
      }
      return super.getRunner();
    }
  }
}
