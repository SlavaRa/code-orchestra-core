package jetbrains.mps.lang.test.runtime;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Map;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.ide.IEditor;
import jetbrains.mps.nodeEditor.NodeEditorComponent;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class CellReference {
  private SNode myNode;
  private SNode myAnnotation;
  private Map<SNode, SNode> myMap;

  public CellReference(SNode node, SNode annotation, Map<SNode, SNode> map) {
    this.myNode = node;
    this.myAnnotation = SNodeOperations.cast(annotation, "jetbrains.mps.lang.test.structure.AnonymousCellAnnotation");
    this.myMap = map;
  }

  public SNode getNode() {
    return this.myNode;
  }

  public String toString() {
    final Wrappers._T<String> result = new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable() {
      public void run() {
        result.value = "(node " + CellReference.this.myNode.getId() + ", id " + SPropertyOperations.getString(CellReference.this.myAnnotation, "cellId") + ")";
      }
    });
    return result.value;
  }

  public void setupSelection(IEditor editor) {
    NodeEditorComponent editorComponent = ((NodeEditorComponent) editor.getCurrentEditorComponent());
    BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(this.myAnnotation, "jetbrains.mps.lang.test.structure.AnonymousCellAnnotation"), "call_setupSelection_6268941039745707957", new Class[]{SNode.class, NodeEditorComponent.class, SNode.class, Map.class}, editorComponent, this.myNode, this.myMap);
  }

  public void assertEditor(IEditor editorComponent, Map<SNode, SNode> map) {
    BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(this.myAnnotation, "jetbrains.mps.lang.test.structure.AnonymousCellAnnotation"), "call_assertEditor_6268941039745719581", new Class[]{SNode.class, IEditor.class, SNode.class, Map.class, Map.class}, editorComponent, this.getNode(), map, this.myMap);
  }
}
