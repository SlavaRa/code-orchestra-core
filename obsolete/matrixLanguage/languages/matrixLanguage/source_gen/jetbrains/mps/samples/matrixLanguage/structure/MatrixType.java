package jetbrains.mps.samples.matrixLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatrixType extends Type {
  public static final String concept = "jetbrains.mps.samples.matrixLanguage.structure.MatrixType";
  public static final String SCALAR_TYPE = "scalarType";

  public MatrixType(SNode node) {
    super(node);
  }

  public Type getScalarType() {
    return (Type) this.getChild(Type.class, MatrixType.SCALAR_TYPE);
  }

  public void setScalarType(Type node) {
    super.setChild(MatrixType.SCALAR_TYPE, node);
  }

  public static MatrixType newInstance(SModel sm, boolean init) {
    return (MatrixType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.matrixLanguage.structure.MatrixType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatrixType newInstance(SModel sm) {
    return MatrixType.newInstance(sm, false);
  }
}
