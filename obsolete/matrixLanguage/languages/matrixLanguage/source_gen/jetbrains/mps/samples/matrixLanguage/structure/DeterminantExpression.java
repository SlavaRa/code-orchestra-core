package jetbrains.mps.samples.matrixLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DeterminantExpression extends Expression {
  public static final String concept = "jetbrains.mps.samples.matrixLanguage.structure.DeterminantExpression";
  public static final String LITERAL = "literal";

  public DeterminantExpression(SNode node) {
    super(node);
  }

  public Expression getLiteral() {
    return (Expression) this.getChild(Expression.class, DeterminantExpression.LITERAL);
  }

  public void setLiteral(Expression node) {
    super.setChild(DeterminantExpression.LITERAL, node);
  }

  public static DeterminantExpression newInstance(SModel sm, boolean init) {
    return (DeterminantExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.matrixLanguage.structure.DeterminantExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DeterminantExpression newInstance(SModel sm) {
    return DeterminantExpression.newInstance(sm, false);
  }
}
