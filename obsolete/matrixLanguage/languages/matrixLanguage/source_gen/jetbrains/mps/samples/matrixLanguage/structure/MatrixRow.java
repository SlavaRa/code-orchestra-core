package jetbrains.mps.samples.matrixLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatrixRow extends BaseConcept {
  public static final String concept = "jetbrains.mps.samples.matrixLanguage.structure.MatrixRow";
  public static final String ITEMS = "items";

  public MatrixRow(SNode node) {
    super(node);
  }

  public int getItemsesCount() {
    return this.getChildCount(MatrixRow.ITEMS);
  }

  public Iterator<Expression> itemses() {
    return this.children(Expression.class, MatrixRow.ITEMS);
  }

  public List<Expression> getItemses() {
    return this.getChildren(Expression.class, MatrixRow.ITEMS);
  }

  public void addItems(Expression node) {
    this.addChild(MatrixRow.ITEMS, node);
  }

  public void insertItems(Expression prev, Expression node) {
    this.insertChild(prev, MatrixRow.ITEMS, node);
  }

  public static MatrixRow newInstance(SModel sm, boolean init) {
    return (MatrixRow) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.matrixLanguage.structure.MatrixRow", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatrixRow newInstance(SModel sm) {
    return MatrixRow.newInstance(sm, false);
  }
}
