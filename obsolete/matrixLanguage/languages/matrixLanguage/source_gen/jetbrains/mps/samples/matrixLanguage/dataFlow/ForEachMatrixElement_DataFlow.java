package jetbrains.mps.samples.matrixLanguage.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class ForEachMatrixElement_DataFlow extends DataFlowBuilder {
  public ForEachMatrixElement_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "matrix", true));
    _context.getBuilder().emitLabel("start");
    _context.getBuilder().emitWrite(SLinkOperations.getTarget(_context.getNode(), "element", true));
    _context.getBuilder().emitWrite(SLinkOperations.getTarget(_context.getNode(), "column", true));
    _context.getBuilder().emitWrite(SLinkOperations.getTarget(_context.getNode(), "row", true));
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "body", true));
    _context.getBuilder().emitIfJump(_context.getBuilder().label(_context.getNode(), "start"));
  }
}
