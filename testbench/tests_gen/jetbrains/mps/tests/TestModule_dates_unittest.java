package jetbrains.mps.tests;

/*Generated by MPS */

import jetbrains.mps.testbench.junit.runners.ModuleSymbolicSuite;
import org.junit.runner.RunWith;

@ModuleSymbolicSuite.ModuleClassSymbols(classes = {"jetbrains.mps.baseLanguage.dates.unittest.tests.Format_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Convert_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Compare_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Round_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Property_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.With_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Period_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.IsNull_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.InlineFormat_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.DateTimeZone_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Parse_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Arithmetic_Test", "jetbrains.mps.baseLanguage.dates.unittest.tests.Cron_Test"}, tests = {"test_timeFormat,test_jodaDateTime,test_nowOptionalDate,test_yesterdayOptionalDate,test_nullOptionalDate,test_usDayOfWeek,test_predefined,test_minutesAgo,test_minutesAfter,test_hoursMinutesAgo,test_formatForPeriod,test_fullDateForPeriod,test_shortDatePeriod,test_ampm,test_formatInLocale,test_testLocale", "test_javaDate,test_javaCalendar,test_jodaDateTime", "test_equals,test_equals2,test_zoneEquals,test_greater,test_greater2,test_never,test_lessOrEquals,test_min,test_max", "test_round,test_roundInTwoZones,test_floor,test_floorInTZ,test_ceiling,test_ceilingInTZ,test_roundNever,test_roundNeverInMonaco", "test_minute,test_month,test_inPropertyOldForInstant,test_inPropertyOldForDuration,test_inPropertyOldForInstantFromDatetime,test_inPropertyForDatetime", "test_monday,test_testInZone", "test_plus,test_plusAndEquals,test_equals,test_lessOrEquals,test_greaterOrEquals,test_less,test_greater,test_greater2,test_convert,test_concat,test_format", "test_isNull,test_isNull2,test_isNotNull,test_isNotNull2,test_nullCompareEquals,test_nullCompareNotEquals,test_nullLess,test_nullIsNever,test_nowIsNotNever,test_zeroDateIsNotNever", "test_inlineFormat,test_withTimezone", "test_londonAndMoscowShortTime,test_londonAndMoscowFullTime,test_westernHemisphereTime,test_westernHemisphereDate,test_timeZoneFromVariable,test_timeZoneFromStringLiteral,test_timeZoneFromString,test_london,test_prague,test_inLocale,test_allZones,test_dataFlowCheck", "test_timeFormat,test_dateParseinTZ,test_jodaDateTime,test_usDayOfWeek,test_predefined,test_fullDateForPeriod,test_shortDatePeriod,test_ampm,test_ampm2,test_timezone", "test_compatibilityPlus,test_plusExpression,test_plusExpressionWithConvert,test_plusExpressionReversed,test_minusExpression,test_minusExpressionWithConvert", "test_cronWeekly,test_cronDaily,test_cronHourly"})
@ModuleSymbolicSuite.ModuleReference("d5e1eadc-0b90-46d3-ad09-aafe577e509d(dates_unittest)")
@RunWith(ModuleSymbolicSuite.class)
public class TestModule_dates_unittest {
  public TestModule_dates_unittest() {
  }
}
