package jetbrains.mps.testbench.suite.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.BasicCellContext;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPart;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import jetbrains.mps.testbench.suite.behavior.IModuleRef_Behavior;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_Empty;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_ReplaceNode_CustomNodeConcept;

public class SolutionRef_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_ns5ajd_a(editorContext, node);
  }

  private EditorCell createCollection_ns5ajd_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_ns5ajd_a");
    editorCell.addEditorCell(this.createConstant_ns5ajd_a0(editorContext, node));
    editorCell.addEditorCell(this.createReadOnlyModelAccessor_ns5ajd_b0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_ns5ajd_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "solution");
    editorCell.setCellId("Constant_ns5ajd_a0");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.EDITABLE, false);
    }
    editorCell.setDefaultText("");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPart[]{new SolutionRef_Editor.ReplaceWith_SolutionRef_cellMenu_a0a0()}));
    return editorCell;
  }

  private EditorCell createReadOnlyModelAccessor_ns5ajd_b0(final EditorContext editorContext, final SNode node) {
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
      public String getText() {
        return IModuleRef_Behavior.call_moduleReference_1280144168199513544(node).getModuleFqName();
      }

      public void setText(String s) {
      }

      public boolean isValidText(String s) {
        return EqualUtil.equals(s, this.getText());
      }
    }, node);
    editorCell.setAction(CellActionType.DELETE, new CellAction_Empty());
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, new BasicCellContext(node), new SubstituteInfoPart[]{new SolutionRef_Editor.ReplaceWith_SolutionRef_cellMenu_a0b0()}));
    editorCell.setCellId("ReadOnlyModelAccessor_ns5ajd_b0");
    return editorCell;
  }

  public static class ReplaceWith_SolutionRef_cellMenu_a0a0 extends AbstractCellMenuPart_ReplaceNode_CustomNodeConcept {
    public ReplaceWith_SolutionRef_cellMenu_a0a0() {
    }

    public String getReplacementConceptName() {
      return "jetbrains.mps.testbench.suite.structure.SolutionRef";
    }
  }

  public static class ReplaceWith_SolutionRef_cellMenu_a0b0 extends AbstractCellMenuPart_ReplaceNode_CustomNodeConcept {
    public ReplaceWith_SolutionRef_cellMenu_a0b0() {
    }

    public String getReplacementConceptName() {
      return "jetbrains.mps.testbench.suite.structure.SolutionRef";
    }
  }
}
