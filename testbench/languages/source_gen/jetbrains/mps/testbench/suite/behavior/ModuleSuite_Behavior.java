package jetbrains.mps.testbench.suite.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class ModuleSuite_Behavior {
  public static void init(SNode thisNode) {
  }

  public static IScope call_scope_1280144168199518341(SNode thisNode) {
    ModuleReference moduleReference = IModuleRef_Behavior.call_moduleReference_1280144168199513544(SLinkOperations.getTarget(thisNode, "moduleRef", true));
    if (moduleReference == null) {
      return null;
    }

    IModule module = MPSModuleRepository.getInstance().getModule(moduleReference);
    if (module == null) {
      return null;
    }

    return module.getScope();
  }

  public static Iterable<SModelDescriptor> call_models_1280144168199531863(SNode thisNode) {
    ModuleReference moduleReference = IModuleRef_Behavior.call_moduleReference_1280144168199513544(SLinkOperations.getTarget(thisNode, "moduleRef", true));
    if (moduleReference == null) {
      return null;
    }

    IModule module = MPSModuleRepository.getInstance().getModule(moduleReference);
    if (module == null) {
      return null;
    }

    return module.getOwnModelDescriptors();
  }

  public static Iterable<SNode> call_getNotMutedTests_8605005254686521789(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "testRef", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(SPropertyOperations.getBoolean(it, "muted"));
      }
    });
  }
}
