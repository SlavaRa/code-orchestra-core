package jetbrains.mps.workbench.make;

/*Generated by MPS */

import com.intellij.openapi.fileEditor.FileEditorProvider;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.fileEditor.FileEditorPolicy;
import org.jetbrains.annotations.NonNls;
import com.intellij.openapi.fileEditor.FileEditorState;
import com.intellij.openapi.project.Project;
import org.jdom.Element;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.openapi.fileEditor.FileEditorStateLevel;
import com.intellij.openapi.fileEditor.FileEditor;
import com.intellij.openapi.util.Disposer;

public class GeneratedTextPreviewEditorProvider implements FileEditorProvider {
  public GeneratedTextPreviewEditorProvider() {
  }

  @NotNull
  public FileEditorPolicy getPolicy() {
    return FileEditorPolicy.NONE;
  }

  @NotNull
  @NonNls
  public String getEditorTypeId() {
    return "GeneratedTextPreview";
  }

  public void writeState(@NotNull FileEditorState state, @NotNull Project project, @NotNull Element element) {
  }

  @NotNull
  public FileEditorState readState(@NotNull Element element, @NotNull Project project, @NotNull VirtualFile file) {
    return new FileEditorState() {
      public boolean canBeMergedWith(FileEditorState p0, FileEditorStateLevel p1) {
        return false;
      }
    };
  }

  public void disposeEditor(@NotNull FileEditor editor) {
    Disposer.dispose(editor);
  }

  @NotNull
  public FileEditor createEditor(@NotNull Project project, @NotNull VirtualFile file) {
    return new GeneratedTextPreviewEditor(project, (TextPreviewFile) file);
  }

  public boolean accept(@NotNull Project project, @NotNull VirtualFile file) {
    return file instanceof TextPreviewFile;
  }
}
