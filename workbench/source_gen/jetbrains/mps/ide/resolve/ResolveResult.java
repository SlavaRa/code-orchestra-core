package jetbrains.mps.ide.resolve;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModelUtil_new;

public class ResolveResult {
  private SNode mySourceNode;
  private String myRole;
  private SNode mySmartRefConcept;
  private SNode myTargetNode;

  public ResolveResult(SNode sourceNode, SNode targetNode, String role, SNode smartRefConcept) {
    mySourceNode = sourceNode;
    myTargetNode = targetNode;
    mySmartRefConcept = smartRefConcept;
    myRole = role;
  }

  public SNode getTargetNode() {
    return myTargetNode;
  }

  public SNode getSourceNode() {
    return mySourceNode;
  }

  public String getRole() {
    return myRole;
  }

  public void setTarget() {
    if (mySmartRefConcept == null) {
      mySourceNode.setReferent(myRole, myTargetNode, false);
    } else {
      SNode parent = mySourceNode.getParent();
      if (parent != null) {
        SNode newNode = SModelUtil_new.instantiateConceptDeclaration(mySmartRefConcept, mySourceNode.getModel());
        newNode.setReferent(myRole, myTargetNode);
        parent.replaceChild(mySourceNode, newNode);
      }
    }
  }
}
