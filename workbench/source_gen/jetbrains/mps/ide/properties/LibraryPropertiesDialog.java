package jetbrains.mps.ide.properties;

/*Generated by MPS */

import jetbrains.mps.workbench.dialogs.project.BasePropertiesDialog;
import jetbrains.mps.project.Library;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.project.structure.modules.LibraryDescriptor;

public class LibraryPropertiesDialog extends BasePropertiesDialog {
  public Library myLibrary;
  public LibraryProperties myProperties;

  /*package*/ LibraryPropertiesDialog(Library solution, IOperationContext operationContext) {
    super("Library Properties", operationContext);
    myLibrary = solution;
    collectSolutionProperties();
  }

  private void collectSolutionProperties() {
    myProperties = new LibraryProperties();
    myProperties.loadFrom(myLibrary.getModuleDescriptor());
  }

  protected boolean doSaveChanges() {
    if (!(checkValidity())) {
      return false;
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable() {
      public void run() {
        LibraryDescriptor descriptor = myLibrary.getModuleDescriptor();
        myProperties.saveTo(descriptor);
        myLibrary.setLibraryDescriptor(descriptor, true);
        myLibrary.save();
      }
    }, getOperationContext().getProject());
    return true;
  }

  protected String getErrorString() {
    return checkStubModels(myProperties.getStubModels());
  }
}
