package jetbrains.mps.ide.actions;

/*Generated by MPS */

import jetbrains.mps.ide.dialogs.BaseDialog;
import javax.swing.JComponent;
import javax.swing.JTextArea;
import com.intellij.openapi.project.Project;
import java.awt.Frame;
import jetbrains.mps.smodel.IOperationContext;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import jetbrains.mps.ide.datatransfer.TextPasteUtil;
import javax.swing.JScrollPane;
import com.intellij.ui.ScrollPaneFactory;
import jetbrains.mps.ide.dialogs.DialogDimensionsSettings;
import jetbrains.mps.plugins.projectplugins.ProjectPluginManager;

public class AnalyzeStacktraceDialog extends BaseDialog {
  private JComponent myComponent;
  private JTextArea myText;
  private Project myProject;

  public AnalyzeStacktraceDialog(Frame frame, final IOperationContext context, Project project) {
    super(frame, "Analyze Stacktrace");
    this.myProject = project;
    this.myComponent = this.createPanel();
  }

  protected JComponent getMainComponent() {
    return this.myComponent;
  }

  public JComponent createPanel() {
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(new JLabel("Put a stack trace here:"), BorderLayout.NORTH);
    this.myText = new JTextArea("");
    String str = TextPasteUtil.getStringFromClipboard();
    if (str != null) {
      this.myText.setText(str);
    }
    panel.add(this.myText, BorderLayout.CENTER);
    JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(panel);
    scrollPane.getVerticalScrollBar().setBlockIncrement(40);
    scrollPane.getVerticalScrollBar().setUnitIncrement(20);
    scrollPane.getHorizontalScrollBar().setBlockIncrement(40);
    return scrollPane;
  }

  @Override
  public DialogDimensionsSettings.DialogDimensions getDefaultDimensionSettings() {
    return new DialogDimensionsSettings.DialogDimensions(100, 200, 700, 600);
  }

  @BaseDialog.Button(name = "OK", mnemonic = 'O', position = 0, defaultButton = true)
  public void onOk() {
    AnalyzeStacktrace_Tool tool = this.myProject.getComponent(ProjectPluginManager.class).getTool(AnalyzeStacktrace_Tool.class);
    tool.setStackTrace(this.myText.getText());
    tool.openToolLater(true);
    this.dispose();
  }

  @BaseDialog.Button(name = "Cancel", mnemonic = 'C', position = 1, defaultButton = false)
  public void onCancel() {
    this.dispose();
  }
}
