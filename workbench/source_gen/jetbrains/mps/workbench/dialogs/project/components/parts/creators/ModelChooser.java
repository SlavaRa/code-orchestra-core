package jetbrains.mps.workbench.dialogs.project.components.parts.creators;

/*Generated by MPS */

import com.intellij.openapi.util.Computable;
import java.util.List;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.workbench.dialogs.project.IBindedDialog;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.workbench.dialogs.choosers.CommonChoosers;

public class ModelChooser implements Computable<List<SModelReference>> {
  private final IBindedDialog myOwner;

  public ModelChooser(IBindedDialog owner) {
    myOwner = owner;
  }

  public List<SModelReference> compute() {
    List<SModelReference> models = ModelAccess.instance().runReadAction(new Computable<List<SModelReference>>() {
      public List<SModelReference> compute() {
        List<SModelDescriptor> descriptors = GlobalScope.getInstance().getModelDescriptors();
        return ListSequence.fromList(descriptors).select(new ISelector<SModelDescriptor, SModelReference>() {
          public SModelReference select(SModelDescriptor it) {
            return it.getSModelReference();
          }
        }).toListSequence();
      }
    });
    return CommonChoosers.showDialogModelCollectionChooser(myOwner.getMainComponent(), models, null);
  }
}
