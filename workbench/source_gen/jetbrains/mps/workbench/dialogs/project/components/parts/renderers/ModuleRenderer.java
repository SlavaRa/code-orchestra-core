package jetbrains.mps.workbench.dialogs.project.components.parts.renderers;

/*Generated by MPS */

import jetbrains.mps.smodel.IScope;
import jetbrains.mps.project.structure.modules.ModuleReference;
import jetbrains.mps.project.IModule;
import jetbrains.mps.smodel.MPSModuleRepository;
import jetbrains.mps.smodel.Generator;
import java.awt.Component;
import javax.swing.JList;
import java.awt.Color;

public class ModuleRenderer extends ProjectLevelRenderer {
  public ModuleRenderer(IScope moduleScope, IScope projectScope) {
    super(moduleScope, projectScope);
  }

  public String getItemLabel(Object value) {
    ModuleReference moduleReference = (ModuleReference) value;
    // RF-598
    IModule module = null;
    if (moduleReference != null) {
      module = MPSModuleRepository.getInstance().getModule(moduleReference);
    }

    if (module == null) {
      // RF-598
      String moduleName = null;
      if (moduleReference != null) {
        moduleName = moduleReference.getModuleFqName();
      } else {
        moduleName = "";
      }

      return (moduleName.equals("") ?
        "<no name>" :
        moduleName
      );
    }
    if (module instanceof Generator) {
      return ((Generator) module).getAlias();
    } else {
      return moduleReference.getModuleFqName();
    }
  }

  public Component getListCellRendererComponent(JList list, final Object value, int index, boolean isSelected, boolean cellHasFocus) {
    ModuleReference moduleReference = (ModuleReference) value;
    final Component result = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
    setText(getItemLabel(value));

    // RF-598
    IModule module = null;
    if (moduleReference != null) {
      module = MPSModuleRepository.getInstance().getModule(moduleReference);
    }

    if (module == null) {
      if (!(isSelected)) {
        setForeground(Color.RED);
      }
      return result;
    }
    return result;
  }
}
