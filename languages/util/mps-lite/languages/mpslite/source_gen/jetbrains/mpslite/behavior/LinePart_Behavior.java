package jetbrains.mpslite.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Map;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.structure.BehaviorDescriptor;
import jetbrains.mps.smodel.structure.ConceptRegistry;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class LinePart_Behavior {
  private static Class[] PARAMETERS_1238593834306 = {SNode.class, SNode.class, Map.class, Map.class};
  private static Class[] PARAMETERS_1238614099938 = {SNode.class, Map.class};

  public static void init(SNode thisNode) {
  }

  public static void virtual_fillConceptStructure_1238593834306(SNode thisNode, SNode concept, Map<SNode, SNode> conceptsToTargets, Map<SNode, SNode> partsToLinks) {
  }

  public static SNode virtual_createCellModel_1238614099938(SNode thisNode, Map<SNode, SNode> partsToLinks) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellModel_Error", null);
    SPropertyOperations.set(result, "text", "not implemented");
    return result;
  }

  public static void call_fillConceptStructure_1238593834306(SNode thisNode, SNode concept, Map<SNode, SNode> conceptsToTargets, Map<SNode, SNode> partsToLinks) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mpslite.structure.LinePart"), "virtual_fillConceptStructure_1238593834306", PARAMETERS_1238593834306, concept, conceptsToTargets, partsToLinks);
  }

  public static SNode call_createCellModel_1238614099938(SNode thisNode, Map<SNode, SNode> partsToLinks) {
    BehaviorDescriptor descriptor = ConceptRegistry.getInstance().getBehaviorDescriptorForInstanceNode(thisNode);
    return (SNode) descriptor.invoke(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mpslite.structure.LinePart"), "virtual_createCellModel_1238614099938", PARAMETERS_1238614099938, partsToLinks);
  }

  public static void callSuper_fillConceptStructure_1238593834306(SNode thisNode, String callerConceptFqName, SNode concept, Map<SNode, SNode> conceptsToTargets, Map<SNode, SNode> partsToLinks) {
    BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mpslite.structure.LinePart"), callerConceptFqName, "virtual_fillConceptStructure_1238593834306", PARAMETERS_1238593834306, concept, conceptsToTargets, partsToLinks);
  }

  public static SNode callSuper_createCellModel_1238614099938(SNode thisNode, String callerConceptFqName, Map<SNode, SNode> partsToLinks) {
    return (SNode) BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "jetbrains.mpslite.structure.LinePart"), callerConceptFqName, "virtual_createCellModel_1238614099938", PARAMETERS_1238614099938, partsToLinks);
  }
}
