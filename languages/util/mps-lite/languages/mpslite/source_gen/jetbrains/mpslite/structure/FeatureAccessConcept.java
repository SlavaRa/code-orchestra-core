package jetbrains.mpslite.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FeatureAccessConcept extends BaseConcept implements IMPSLiteConcept {
  public static final String concept = "jetbrains.mpslite.structure.FeatureAccessConcept";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String ROOT = "root";
  public static final String ABSTRACT = "abstract";
  public static final String EXTENDS = "extends";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public FeatureAccessConcept(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(FeatureAccessConcept.NAME);
  }

  public void setName(String value) {
    this.setProperty(FeatureAccessConcept.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(FeatureAccessConcept.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(FeatureAccessConcept.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(FeatureAccessConcept.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(FeatureAccessConcept.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(FeatureAccessConcept.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(FeatureAccessConcept.VIRTUAL_PACKAGE, value);
  }

  public boolean getRoot() {
    return this.getBooleanProperty(FeatureAccessConcept.ROOT);
  }

  public void setRoot(boolean value) {
    this.setBooleanProperty(FeatureAccessConcept.ROOT, value);
  }

  public boolean getAbstract() {
    return this.getBooleanProperty(FeatureAccessConcept.ABSTRACT);
  }

  public void setAbstract(boolean value) {
    this.setBooleanProperty(FeatureAccessConcept.ABSTRACT, value);
  }

  public AbstractConceptReference getExtends() {
    return (AbstractConceptReference) this.getChild(AbstractConceptReference.class, FeatureAccessConcept.EXTENDS);
  }

  public void setExtends(AbstractConceptReference node) {
    super.setChild(FeatureAccessConcept.EXTENDS, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(FeatureAccessConcept.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, FeatureAccessConcept.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, FeatureAccessConcept.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(FeatureAccessConcept.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, FeatureAccessConcept.SMODEL_ATTRIBUTE, node);
  }

  public static FeatureAccessConcept newInstance(SModel sm, boolean init) {
    return (FeatureAccessConcept) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mpslite.structure.FeatureAccessConcept", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FeatureAccessConcept newInstance(SModel sm) {
    return FeatureAccessConcept.newInstance(sm, false);
  }
}
