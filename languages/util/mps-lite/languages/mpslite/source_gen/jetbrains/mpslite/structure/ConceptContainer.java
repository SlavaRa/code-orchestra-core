package jetbrains.mpslite.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConceptContainer extends BaseConcept {
  public static final String concept = "jetbrains.mpslite.structure.ConceptContainer";
  public static final String STATEMENT_CONCEPT = "statementConcept";
  public static final String EXPRESSION_CONCEPT = "expressionConcept";
  public static final String MPS_LITE_CONCEPT = "mpsLiteConcept";

  public ConceptContainer(SNode node) {
    super(node);
  }

  public StatementConcept getStatementConcept() {
    return (StatementConcept) this.getChild(StatementConcept.class, ConceptContainer.STATEMENT_CONCEPT);
  }

  public void setStatementConcept(StatementConcept node) {
    super.setChild(ConceptContainer.STATEMENT_CONCEPT, node);
  }

  public ExpressionConcept getExpressionConcept() {
    return (ExpressionConcept) this.getChild(ExpressionConcept.class, ConceptContainer.EXPRESSION_CONCEPT);
  }

  public void setExpressionConcept(ExpressionConcept node) {
    super.setChild(ConceptContainer.EXPRESSION_CONCEPT, node);
  }

  public int getMpsLiteConceptsCount() {
    return this.getChildCount(ConceptContainer.MPS_LITE_CONCEPT);
  }

  public Iterator<IMPSLiteConcept> mpsLiteConcepts() {
    return this.children(IMPSLiteConcept.class, ConceptContainer.MPS_LITE_CONCEPT);
  }

  public List<IMPSLiteConcept> getMpsLiteConcepts() {
    return this.getChildren(IMPSLiteConcept.class, ConceptContainer.MPS_LITE_CONCEPT);
  }

  public void addMpsLiteConcept(IMPSLiteConcept node) {
    this.addChild(ConceptContainer.MPS_LITE_CONCEPT, node);
  }

  public void insertMpsLiteConcept(IMPSLiteConcept prev, IMPSLiteConcept node) {
    this.insertChild(prev, ConceptContainer.MPS_LITE_CONCEPT, node);
  }

  public static ConceptContainer newInstance(SModel sm, boolean init) {
    return (ConceptContainer) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mpslite.structure.ConceptContainer", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ConceptContainer newInstance(SModel sm) {
    return ConceptContainer.newInstance(sm, false);
  }
}
