package jetbrains.mps.nanoj.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NanoStatementList extends NanoStatement {
  public static final String concept = "jetbrains.mps.nanoj.structure.NanoStatementList";
  public static final String BODY = "body";

  public NanoStatementList(SNode node) {
    super(node);
  }

  public int getBodiesCount() {
    return this.getChildCount(NanoStatementList.BODY);
  }

  public Iterator<NanoStatement> bodies() {
    return this.children(NanoStatement.class, NanoStatementList.BODY);
  }

  public List<NanoStatement> getBodies() {
    return this.getChildren(NanoStatement.class, NanoStatementList.BODY);
  }

  public void addBody(NanoStatement node) {
    this.addChild(NanoStatementList.BODY, node);
  }

  public void insertBody(NanoStatement prev, NanoStatement node) {
    this.insertChild(prev, NanoStatementList.BODY, node);
  }

  public static NanoStatementList newInstance(SModel sm, boolean init) {
    return (NanoStatementList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoj.structure.NanoStatementList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NanoStatementList newInstance(SModel sm) {
    return NanoStatementList.newInstance(sm, false);
  }
}
