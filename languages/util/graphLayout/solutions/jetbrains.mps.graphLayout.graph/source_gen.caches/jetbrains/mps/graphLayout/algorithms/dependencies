<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="jetbrains.mps.graphLayout.algorithms.BiconnectAugmentation" file="BiconnectAugmentation.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.LinkedHashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectedComponent" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.BiconnectedComponent" file="BiconnectedComponent.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.StringBuilder" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.LinkedHashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectedComponents" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.BiconnectedComponents" file="BiconnectedComponents.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.ConnectivityComponents" file="ConnectivityComponents.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.LinkedListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.Dfs" file="Dfs.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.Dijkstra" file="Dijkstra.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.RuntimeException" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.TreeSet" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ShortestPath" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode extendsClassName="java.util.Comparator" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.FordBellman" file="FordBellman.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ShortestPath" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.GraphOrientation" file="GraphOrientation.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.STNumbering" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.MaxFlow" file="MaxFlow.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ShortestPath" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.MinCostCirculation" file="MinCostCirculation.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.lang.RuntimeException" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlow" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowWithPotentials" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlow" file="MinCostMaxFlow.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.FordBellman" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowCycleCancelling" file="MinCostMaxFlowCycleCancelling.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.FordBellman" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.MaxFlow" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.MinCostMaxFlowWithPotentials" file="MinCostMaxFlowWithPotentials.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.lang.RuntimeException" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.Dijkstra" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ShortestPath" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.STNumbering" file="STNumbering.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectedComponents" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.ShortestPath" file="ShortestPath.java">
    <classNode dependClassName="java.lang.Boolean" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Queue" />
    <classNode dependClassName="jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.QueueSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.TopologicalNumbering" file="TopologicalNumbering.java">
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.TopologicalSorting" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.TopologicalSorting" file="TopologicalSorting.java">
    <classNode dependClassName="java.lang.Override" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.backports.LinkedList" />
    <classNode extendsClassName="jetbrains.mps.graphLayout.algorithms.Dfs" />
  </dependency>
  <dependency className="jetbrains.mps.graphLayout.algorithms.WeightedTopologicalNumbering" file="WeightedTopologicalNumbering.java">
    <classNode dependClassName="java.lang.IllegalArgumentException" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.Math" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.TopologicalSorting" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.util.NodeMap" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
  </dependency>
</dependenciesRoot>

