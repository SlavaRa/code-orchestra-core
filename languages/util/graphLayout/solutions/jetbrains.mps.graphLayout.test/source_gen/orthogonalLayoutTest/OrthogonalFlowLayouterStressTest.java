package orthogonalLayoutTest;

/*Generated by MPS */

import jetbrains.mps.graphLayout.flowOrthogonalLayout.AbstractOrthogonalFlowLayouter;
import jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalFlowLayouter;
import sampleGraphs.LayoutInfoGenerator;
import sampleGraphs.SimpleConnectedGraphGenerator;
import jetbrains.mps.graphLayout.graph.Graph;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import jetbrains.mps.graphLayout.intGeom2D.Dimension;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.graphLayout.graphLayout.LayoutInfo;
import java.io.PrintWriter;
import visualization.GraphIO;
import jetbrains.mps.graphLayout.graphLayout.GraphLayout;

public class OrthogonalFlowLayouterStressTest {
  public OrthogonalFlowLayouterStressTest() {
  }

  public static void main(String[] args) throws Exception {
    String fileName = "C:\\work\\stressCurrent.txt";
    AbstractOrthogonalFlowLayouter layouter = new OrthogonalFlowLayouter();
    int numNodes = Integer.parseInt(args[0]);
    int numEdges = Integer.parseInt(args[1]);
    int numIter = Integer.parseInt(args[2]);
    LayoutInfoGenerator generator = new LayoutInfoGenerator(new SimpleConnectedGraphGenerator(numNodes, numEdges, numEdges));
    generator.setLabelSeed(0.5);
    generator.setNodeSizeConstraints(40, 50, 40, 50);
    generator.setLabelSizeConstraints(60, 100, 60, 100);
    boolean failed = false;
    for (int iter = 0; iter < numIter && !(failed); iter++) {
      System.out.println("ITERATION: " + iter);
      generator.generate();
      Graph graph = generator.getGraph();
      Map<Node, Dimension> nodeSizes = generator.getNodeSizes();
      Map<Edge, Dimension> edgeSizes = generator.getEdgeLabelSizes();
      LayoutInfo layoutInfo = generator.getLayoutInfo();
      PrintWriter out = new PrintWriter(fileName);
      GraphIO.writeGraph(graph, nodeSizes, edgeSizes, out);
      out.close();
      layouter.setUnitLength(30);
      layouter.setAvoidLabelCrossings(true);
      double time = System.currentTimeMillis();
      GraphLayout layout = null;
      try {
        layout = layouter.doLayoutConnectedGraph(layoutInfo);
        OrthogonalLayoutChecker.checkLayout(layout);
      } catch (Exception e) {
        e.printStackTrace();
        failed = true;
      }
      double passedTime = (1.0 * System.currentTimeMillis() - time) / 1000;
      System.out.println("iteration " + iter + " has been working " + passedTime + " seconds");
    }
    System.out.println("END!");
  }
}
