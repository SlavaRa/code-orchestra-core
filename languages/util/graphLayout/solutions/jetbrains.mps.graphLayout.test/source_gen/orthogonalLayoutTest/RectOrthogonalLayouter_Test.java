package orthogonalLayoutTest;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.graphLayout.graph.Graph;
import visualization.GraphIO;
import java.util.Scanner;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import jetbrains.mps.graphLayout.intGeom2D.Dimension;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.graphLayout.graphLayout.GraphLayout;
import jetbrains.mps.graphLayout.stOrthogonalLayout.RectOrthogonalLayouter;

public class RectOrthogonalLayouter_Test extends TestCase {
  public void test_test1() throws Exception {
    String graphString = "10 15  \n1 7  \n1 6  \n2 4  \n3 1  \n3 5  \n3 9  \n4 7  \n5 4  \n5 0  \n6 2  \n6 8  \n6 9  \n6 4  \n7 2  \n9 4";
    Graph graph = GraphIO.scanGraph(new Scanner(graphString));
    test(graph);
  }

  public void test(Graph graph) {
    Map<Node, Dimension> nodeSizes = MapSequence.fromMap(new HashMap<Node, Dimension>());
    Map<Edge, Dimension> edgeSizes = MapSequence.fromMap(new HashMap<Edge, Dimension>());
    for (Node node : ListSequence.fromList(graph.getNodes())) {
      MapSequence.fromMap(nodeSizes).put(node, new Dimension(5, 5));
    }
    for (Edge edge : ListSequence.fromList(graph.getEdges())) {
      MapSequence.fromMap(edgeSizes).put(edge, new Dimension(5, 5));
    }
    GraphLayout layout = new RectOrthogonalLayouter().doLayout(graph, nodeSizes, edgeSizes);
  }
}
