package graphTest;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.graphLayout.graph.Graph;
import sampleGraphs.SimpleDirectedGraphs;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.graphLayout.algorithms.FordBellman;
import junit.framework.Assert;

public class FordBellman_Test extends TestCase {
  public void test_triangle() throws Exception {
    Graph graph = SimpleDirectedGraphs.triangle();
    Map<Edge, Integer> w = MapSequence.fromMap(new HashMap<Edge, Integer>());
    MapSequence.fromMap(w).put(ListSequence.fromList(graph.getNode(0).getEdges()).getElement(0), 1);
    MapSequence.fromMap(w).put(ListSequence.fromList(graph.getNode(0).getEdges()).getElement(1), 4);
    MapSequence.fromMap(w).put(ListSequence.fromList(graph.getNode(1).getEdges()).getElement(0), 2);
    FordBellman bellman = new FordBellman(graph, graph.getNode(0), w);
    bellman.doAlgorithm();
    Assert.assertTrue(ListSequence.fromList(bellman.getShortestPath(graph.getNode(2))).count() == 2);
  }
}
