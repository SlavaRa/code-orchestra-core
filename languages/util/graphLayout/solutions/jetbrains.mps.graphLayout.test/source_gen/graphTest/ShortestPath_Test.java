package graphTest;

/*Generated by MPS */

import junit.framework.TestCase;
import jetbrains.mps.graphLayout.graph.Graph;
import sampleGraphs.SimpleDirectedGraphs;
import java.util.List;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.graphLayout.algorithms.ShortestPath;
import junit.framework.Assert;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class ShortestPath_Test extends TestCase {
  public void test_triangle() throws Exception {
    Graph graph = SimpleDirectedGraphs.triangle();
    List<Edge> path = ShortestPath.getPath(graph, graph.getNode(0), graph.getNode(2), Edge.Direction.FRONT);
    Assert.assertTrue(ListSequence.fromList(path).count() == 1);
    Edge edge = ListSequence.fromList(path).getElement(0);
    Assert.assertTrue(edge.getSource() == graph.getNode(0));
    Assert.assertTrue(edge.getTarget() == graph.getNode(2));
    path = ShortestPath.getPath(graph, graph.getNode(0), graph.getNode(2), Edge.Direction.BACK);
    Assert.assertTrue(path == null);
  }
}
