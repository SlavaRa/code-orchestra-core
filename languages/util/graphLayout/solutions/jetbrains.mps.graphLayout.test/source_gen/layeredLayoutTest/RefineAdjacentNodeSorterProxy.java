package layeredLayoutTest;

/*Generated by MPS */

import jetbrains.mps.graphLayout.layeredLayout.INodeSorter;
import jetbrains.mps.graphLayout.layeredLayout.LayerByLayerNodeSorter;
import jetbrains.mps.graphLayout.layeredLayout.AdjacentExhangeNodeSorter;
import jetbrains.mps.graphLayout.layeredLayout.NodeLayeredOrder;
import jetbrains.mps.graphLayout.graph.Graph;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import junit.framework.Assert;

public class RefineAdjacentNodeSorterProxy implements INodeSorter {
  private LayerByLayerNodeSorter mySorter;

  public RefineAdjacentNodeSorterProxy() {
    INodeSorter medianSorter = new MedianLayerByLayerSorterProxy();
    mySorter = new LayerByLayerNodeSorter(new AdjacentExhangeNodeSorter(), medianSorter);
  }

  public NodeLayeredOrder sortNodes(Graph graph, Map<Node, Integer> layers) {
    NodeLayeredOrder order = mySorter.sortNodes(graph, layers);
    Assert.assertFalse(CheckDummyEdgesCrossing.hasCrosses(order));
    return order;
  }
}
