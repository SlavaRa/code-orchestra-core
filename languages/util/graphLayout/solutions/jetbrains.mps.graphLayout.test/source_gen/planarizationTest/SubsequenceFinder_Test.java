package planarizationTest;

/*Generated by MPS */

import junit.framework.TestCase;
import java.util.List;
import jetbrains.mps.baseLanguage.tuples.runtime.Tuples;
import jetbrains.mps.graphLayout.planarization.SubsequenceFinder;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class SubsequenceFinder_Test extends TestCase {
  public void test_test1() throws Exception {
    Integer[] s = new Integer[]{1, 2, 3, 4};
    Integer[] p = new Integer[]{0, 1, 3, 4, 2};
    List<Tuples._2<Integer, Integer>> pos = SubsequenceFinder.getSubsequence(s, p);
  }

  public void test_test2() throws Exception {
    Integer[] s = new Integer[]{1, 0, 1, 1};
    Integer[] p = new Integer[]{1, 0};
    List<Tuples._2<Integer, Integer>> pos = SubsequenceFinder.getSubsequence(s, p);
  }

  public void test_testCyclic1() throws Exception {
    List<Object> s = ListSequence.fromListAndArray(new ArrayList<Object>(), 1, 2, 3, 4);
    List<Object> p = ListSequence.fromListAndArray(new ArrayList<Object>(), 4, 2, 0, 1, 3);
    List<Tuples._2<Integer, Integer>> pos = SubsequenceFinder.getCyclicSubsequence(s, p);
  }
}
