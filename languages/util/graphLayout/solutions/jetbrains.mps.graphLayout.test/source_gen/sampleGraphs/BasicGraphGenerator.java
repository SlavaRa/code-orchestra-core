package sampleGraphs;

/*Generated by MPS */

import jetbrains.mps.graphLayout.graph.Graph;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.graphLayout.graph.Node;

public class BasicGraphGenerator extends AbstractGraphGenerator {
  public BasicGraphGenerator(int numNodes, int minEdges, int maxEdges) {
    super(numNodes, minEdges, maxEdges);
  }

  protected Graph generateGraph() {
    Graph graph = new Graph();
    for (int i = 0; i < getNumNodes(); i++) {
      graph.createNode();
    }
    for (int i = 0; i < getNumEdges(); i++) {
      Edge edge = generateEdge(graph);
      if (edge == null) {
        return null;
      }
    }
    return graph;
  }

  protected Edge generateEdge(Graph graph) {
    Node source = graph.getNode(random().nextInt(getNumNodes()));
    Node target = graph.getNode(random().nextInt(getNumNodes()));
    return graph.connect(source, target);
  }
}
