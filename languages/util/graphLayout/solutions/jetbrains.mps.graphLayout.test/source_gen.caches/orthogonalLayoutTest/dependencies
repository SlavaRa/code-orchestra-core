<?xml version="1.0" encoding="UTF-8"?>
<dependenciesRoot>
  <dependency className="orthogonalLayoutTest.AmbiguityLayout_Test" file="AmbiguityLayout_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Point" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Rectangle" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.RectOrthogonalLayouter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.ConstraintsChecker" file="ConstraintsChecker.java">
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Rectangle" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="junit.framework.Assert" />
  </dependency>
  <dependency className="orthogonalLayoutTest.ConstraintsGraphStressTest" file="ConstraintsGraphStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectAugmentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiOrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiRepresentationModifier" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Direction2D" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.ConstraintsGraphProcessor" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.PQPlanarizationFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.ShortestPathEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.ConstraintsGraph_Test" file="ConstraintsGraph_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiOrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiRepresentationModifier" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Direction2D" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.ConstraintsGraphProcessor" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.PQPlanarizationFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.ShortestPathEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.ConstraintsSupporter_Test" file="ConstraintsSupporter_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.GraphOrientation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Rectangle" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.STPlanarGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.TreeEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.ConstraintsSupporter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.ConstraintsChecker" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.EmbeddedGraphModifier_Test" file="EmbeddedGraphModifier_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.LinkedHashMap" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.EmbeddedGraphModifier" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Direction2D" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.CheckEmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.PQPlanarizationFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.ShortestPathEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="junit.framework.Assert" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.HyperGraphLayouter_Test" file="HyperGraphLayouter_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.ClusterOrthogonalFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.HyperGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.HyperGraphLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.LayoutInfo" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.MultiTest" file="MultiTest.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.ArrayList" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalFlowLayouterStressTest" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFlowLabelProcessing_Test" file="OrthogonalFlowLabelProcessing_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalFlowLabelProcessing" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFlowLayouterConstraintsStressTest" file="OrthogonalFlowLayouterConstraintsStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalFlowLayouterConstraints" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFlowLayouterConstraints_Test" file="OrthogonalFlowLayouterConstraints_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.LinkedHashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalFlowLayouterConstraints" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFlowLayouterNoLabels_Test" file="OrthogonalFlowLayouterNoLabels_Test.java">
    <classNode dependClassName="graphLayoutTest.GraphLayoutChecker" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.LayoutInfo" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFlowLayouterStressTest" file="OrthogonalFlowLayouterStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.AbstractOrthogonalFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.OrthogonalFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.LayoutInfo" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="sampleGraphs.LayoutInfoGenerator" />
    <classNode dependClassName="sampleGraphs.SimpleConnectedGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalFromVisibility_Test" file="OrthogonalFromVisibility_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphPointLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.OrthogonalFromVisibility" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalLayoutChecker" file="OrthogonalLayoutChecker.java">
    <classNode dependClassName="graphLayoutTest.GraphLayoutChecker" />
    <classNode dependClassName="graphLayoutTest.GraphPointLayoutChecker" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphPointLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Point" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="junit.framework.Assert" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalPointFlowLayouterStressTest" file="OrthogonalPointFlowLayouterStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.ConnectivityComponents" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphPointLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.IPointLayouter" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalPointFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalPointFlowLayouter_Test" file="OrthogonalPointFlowLayouter_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphPointLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalPointFlowLayouter" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalLayoutChecker" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.OrthogonalRepresentationChecker" file="OrthogonalRepresentationChecker.java">
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.util.List" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.IWhereFilter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="junit.framework.Assert" />
  </dependency>
  <dependency className="orthogonalLayoutTest.QuasiOrthogonalRepresentationStressTest" file="QuasiOrthogonalRepresentationStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.BiconnectAugmentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiOrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiRepresentationModifier" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.PQPlanarizationFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.ShortestPathEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalRepresentationChecker" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.QuasiOrthogonalRepresentation_Test" file="QuasiOrthogonalRepresentation_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.HashSet" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="java.util.Set" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiOrthogonalRepresentation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.flowOrthogonalLayout.QuasiRepresentationModifier" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.CheckEmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.Dart" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.PQPlanarizationFinder" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.SetSequence" />
    <classNode dependClassName="orthogonalLayoutTest.OrthogonalRepresentationChecker" />
    <classNode dependClassName="sampleGraphs.SimpleDirectedGraphs" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.RectOrthogonalFlowLayouter_Test" file="RectOrthogonalFlowLayouter_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.internal.flowOrthogonalLayout.OrthogonalRectFlowLayouter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.RectOrthogonalLayouterStressTest" file="RectOrthogonalLayouterStressTest.java">
    <classNode dependClassName="java.io.PrintWriter" />
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Integer" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.lang.System" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.RectOrthogonalLayouter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="sampleGraphs.RandomGraphGenerator" />
    <classNode dependClassName="visualization.GraphIO" />
  </dependency>
  <dependency className="orthogonalLayoutTest.RectOrthogonalLayouter_Test" file="RectOrthogonalLayouter_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.HashMap" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Edge" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graphLayout.GraphLayout" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Dimension" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.RectOrthogonalLayouter" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.MapSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
  <dependency className="orthogonalLayoutTest.VisibilityRepresentation_Test" file="VisibilityRepresentation_Test.java">
    <classNode dependClassName="java.lang.Exception" />
    <classNode dependClassName="java.lang.Object" />
    <classNode dependClassName="java.lang.String" />
    <classNode dependClassName="java.util.Map" />
    <classNode dependClassName="java.util.Scanner" />
    <classNode dependClassName="jetbrains.mps.graphLayout.algorithms.GraphOrientation" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Graph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.graph.Node" />
    <classNode dependClassName="jetbrains.mps.graphLayout.intGeom2D.Rectangle" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarGraph.STPlanarGraph" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.BiconnectedInitialEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.ShortestPathEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.planarization.TreeEmbeddingFinder" />
    <classNode dependClassName="jetbrains.mps.graphLayout.stOrthogonalLayout.VisibilityRepresentation" />
    <classNode dependClassName="jetbrains.mps.internal.collections.runtime.ListSequence" />
    <classNode dependClassName="visualization.GraphIO" />
    <classNode extendsClassName="junit.framework.TestCase" />
  </dependency>
</dependenciesRoot>

