package jetbrains.mps.graphLayout.internal.flowOrthogonalLayout;

/*Generated by MPS */

import jetbrains.mps.graphLayout.algorithms.Dfs;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import jetbrains.mps.graphLayout.intGeom2D.Point;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.graphLayout.planarGraph.Dart;
import jetbrains.mps.graphLayout.intGeom2D.Direction2D;
import jetbrains.mps.graphLayout.planarGraph.EmbeddedGraph;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class CoordinatePlacer extends Dfs {
  private Map<Node, Point> myCoordinates;
  private Map<Edge, Integer> myLenghts;
  private Map<Dart, Direction2D> myDirections;
  private EmbeddedGraph myEmbeddedGraph;

  public CoordinatePlacer(EmbeddedGraph embeddedGraph, Map<Edge, Integer> lengths, Map<Dart, Direction2D> directions) {
    myCoordinates = MapSequence.fromMap(new HashMap<Node, Point>());
    myLenghts = lengths;
    myDirections = directions;
    myEmbeddedGraph = embeddedGraph;
  }

  public Map<Node, Point> getCoordinates() {
    doDfs(myEmbeddedGraph.getGraph(), Edge.Direction.BOTH);
    return myCoordinates;
  }

  @Override
  protected void preprocessRoot(Node root) {
    MapSequence.fromMap(myCoordinates).put(root, new Point(15, 15));
  }

  @Override
  protected void preprocess(Node node, Edge from) {
    if (from == null) {
      return;
    }
    final Node source = from.getOpposite(node);
    int x = MapSequence.fromMap(myCoordinates).get(source).x;
    int y = MapSequence.fromMap(myCoordinates).get(source).y;
    Dart dart = ListSequence.fromList(myEmbeddedGraph.getDarts(from)).findFirst(new IWhereFilter<Dart>() {
      public boolean accept(Dart dart) {
        return dart.getSource() == source;
      }
    });
    if (MapSequence.fromMap(myDirections).get(dart) == Direction2D.RIGHT) {
      x += MapSequence.fromMap(myLenghts).get(from);
    }
    if (MapSequence.fromMap(myDirections).get(dart) == Direction2D.LEFT) {
      x -= MapSequence.fromMap(myLenghts).get(from);
    }
    if (MapSequence.fromMap(myDirections).get(dart) == Direction2D.UP) {
      y += MapSequence.fromMap(myLenghts).get(from);
    }
    if (MapSequence.fromMap(myDirections).get(dart) == Direction2D.DOWN) {
      y -= MapSequence.fromMap(myLenghts).get(from);
    }
    MapSequence.fromMap(myCoordinates).put(node, new Point(x, y));
  }
}
