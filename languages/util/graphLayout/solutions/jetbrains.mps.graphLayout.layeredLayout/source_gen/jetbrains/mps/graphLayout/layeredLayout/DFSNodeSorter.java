package jetbrains.mps.graphLayout.layeredLayout;

/*Generated by MPS */

import jetbrains.mps.graphLayout.algorithms.Dfs;
import java.util.Map;
import jetbrains.mps.graphLayout.graph.Node;
import jetbrains.mps.graphLayout.graph.Graph;
import jetbrains.mps.graphLayout.graph.Edge;
import jetbrains.mps.internal.collections.runtime.MapSequence;

public class DFSNodeSorter extends Dfs implements INodeSorter {
  private Map<Node, Integer> myNodeLayers;
  private NodeLayeredOrder myLayeredOrder;

  public DFSNodeSorter() {
  }

  public NodeLayeredOrder sortNodes(Graph graph, Map<Node, Integer> nodeLayers) {
    myNodeLayers = nodeLayers;
    myLayeredOrder = new NodeLayeredOrder(graph);
    doDfs(graph);
    return myLayeredOrder;
  }

  @Override
  protected void preprocess(Node node, Edge from) {
    myLayeredOrder.addLast(node, MapSequence.fromMap(myNodeLayers).get(node));
  }
}
