package jetbrains.mps.baseLanguage.dates.runtime;

/*Generated by MPS */

import org.joda.time.DateTimeZone;
import jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedFunctionTypes;
import jetbrains.mps.baseLanguage.closures.runtime.Result;

public class DateTimeUtil {
  public DateTimeUtil() {
  }

  public static void withTimeZone(DateTimeZone tz, _UnrestrictedFunctionTypes._void_void_P0_E0 block) {
    DateTimeZone currenttz = DateTimeOperations.getCurrentTimeZone();
    try {
      DateTimeOperations.withTimeZone(tz);
      {
        Result<?, ?> __result__ = block.invokeUnrestricted();
        switch (__result__.getOutcome()) {
          case RETURN_VALUE:
            //  fall through 
          case RETURN_VOID:
            return;
          case BREAK:
            break;
          case TERMINATE_VOID:
            break;
          default:
            break;
        }
      }
    } finally {
      DateTimeOperations.withTimeZone(currenttz);
    }
  }
}
