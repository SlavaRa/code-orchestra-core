package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.datesInternal.structure.Locale;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InlineFormatDateTimeExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.dates.structure.InlineFormatDateTimeExpression";
  public static final String LOCALE = "locale";
  public static final String DATETIME = "datetime";
  public static final String FORMAT_TOKEN = "formatToken";

  public InlineFormatDateTimeExpression(SNode node) {
    super(node);
  }

  public Locale getLocale() {
    return (Locale) this.getReferent(Locale.class, InlineFormatDateTimeExpression.LOCALE);
  }

  public void setLocale(Locale node) {
    super.setReferent(InlineFormatDateTimeExpression.LOCALE, node);
  }

  public Expression getDatetime() {
    return (Expression) this.getChild(Expression.class, InlineFormatDateTimeExpression.DATETIME);
  }

  public void setDatetime(Expression node) {
    super.setChild(InlineFormatDateTimeExpression.DATETIME, node);
  }

  public int getFormatTokensCount() {
    return this.getChildCount(InlineFormatDateTimeExpression.FORMAT_TOKEN);
  }

  public Iterator<FormatToken> formatTokens() {
    return this.children(FormatToken.class, InlineFormatDateTimeExpression.FORMAT_TOKEN);
  }

  public List<FormatToken> getFormatTokens() {
    return this.getChildren(FormatToken.class, InlineFormatDateTimeExpression.FORMAT_TOKEN);
  }

  public void addFormatToken(FormatToken node) {
    this.addChild(InlineFormatDateTimeExpression.FORMAT_TOKEN, node);
  }

  public void insertFormatToken(FormatToken prev, FormatToken node) {
    this.insertChild(prev, InlineFormatDateTimeExpression.FORMAT_TOKEN, node);
  }

  public static InlineFormatDateTimeExpression newInstance(SModel sm, boolean init) {
    return (InlineFormatDateTimeExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.InlineFormatDateTimeExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InlineFormatDateTimeExpression newInstance(SModel sm) {
    return InlineFormatDateTimeExpression.newInstance(sm, false);
  }
}
