package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DateTimeCompareOperation extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.dates.structure.DateTimeCompareOperation";
  public static final String CLNK_DefaultDatetimeProperty = "defaultDatetimeProperty";
  public static final String COMPARE_TYPE = "compareType";
  public static final String DATETIME_PROPERTY = "datetimeProperty";
  public static final String OP1 = "op1";
  public static final String OP2 = "op2";

  public DateTimeCompareOperation(SNode node) {
    super(node);
  }

  public CompareType getCompareType() {
    String value = super.getProperty(DateTimeCompareOperation.COMPARE_TYPE);
    return CompareType.parseValue(value);
  }

  public void setCompareType(CompareType value) {
    super.setProperty(DateTimeCompareOperation.COMPARE_TYPE, value.getValueAsString());
  }

  public DateTimeProperty getDatetimeProperty() {
    return (DateTimeProperty) this.getReferent(DateTimeProperty.class, DateTimeCompareOperation.DATETIME_PROPERTY);
  }

  public void setDatetimeProperty(DateTimeProperty node) {
    super.setReferent(DateTimeCompareOperation.DATETIME_PROPERTY, node);
  }

  public Expression getOp1() {
    return (Expression) this.getChild(Expression.class, DateTimeCompareOperation.OP1);
  }

  public void setOp1(Expression node) {
    super.setChild(DateTimeCompareOperation.OP1, node);
  }

  public Expression getOp2() {
    return (Expression) this.getChild(Expression.class, DateTimeCompareOperation.OP2);
  }

  public void setOp2(Expression node) {
    super.setChild(DateTimeCompareOperation.OP2, node);
  }

  public static DateTimeCompareOperation newInstance(SModel sm, boolean init) {
    return (DateTimeCompareOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.DateTimeCompareOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DateTimeCompareOperation newInstance(SModel sm) {
    return DateTimeCompareOperation.newInstance(sm, false);
  }
}
