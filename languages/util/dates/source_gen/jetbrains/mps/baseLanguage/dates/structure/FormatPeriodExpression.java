package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.TypeDerivable;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat;
import jetbrains.mps.baseLanguage.datesInternal.structure.Locale;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FormatPeriodExpression extends Expression implements TypeDerivable {
  public static final String concept = "jetbrains.mps.baseLanguage.dates.structure.FormatPeriodExpression";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String FORMAT = "format";
  public static final String LOCALE = "locale";
  public static final String PERIOD = "period";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public FormatPeriodExpression(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(FormatPeriodExpression.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(FormatPeriodExpression.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(FormatPeriodExpression.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(FormatPeriodExpression.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(FormatPeriodExpression.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(FormatPeriodExpression.VIRTUAL_PACKAGE, value);
  }

  public IPeriodFormat getFormat() {
    return (IPeriodFormat) this.getReferent(IPeriodFormat.class, FormatPeriodExpression.FORMAT);
  }

  public void setFormat(IPeriodFormat node) {
    super.setReferent(FormatPeriodExpression.FORMAT, node);
  }

  public Locale getLocale() {
    return (Locale) this.getReferent(Locale.class, FormatPeriodExpression.LOCALE);
  }

  public void setLocale(Locale node) {
    super.setReferent(FormatPeriodExpression.LOCALE, node);
  }

  public Expression getPeriod() {
    return (Expression) this.getChild(Expression.class, FormatPeriodExpression.PERIOD);
  }

  public void setPeriod(Expression node) {
    super.setChild(FormatPeriodExpression.PERIOD, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(FormatPeriodExpression.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, FormatPeriodExpression.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, FormatPeriodExpression.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(FormatPeriodExpression.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, FormatPeriodExpression.SMODEL_ATTRIBUTE, node);
  }

  public static FormatPeriodExpression newInstance(SModel sm, boolean init) {
    return (FormatPeriodExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.FormatPeriodExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FormatPeriodExpression newInstance(SModel sm) {
    return FormatPeriodExpression.newInstance(sm, false);
  }
}
