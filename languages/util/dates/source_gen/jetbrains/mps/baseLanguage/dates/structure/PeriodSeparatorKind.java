package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum PeriodSeparatorKind {
  DEFAULT("both", "default"),
  IFBEFORE("left", "ifBefore"),
  IFAFTER("right", "ifAfter");

  private String myName;
  private String myValue;

  PeriodSeparatorKind(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<PeriodSeparatorKind> getConstants() {
    List<PeriodSeparatorKind> list = ListSequence.fromList(new LinkedList<PeriodSeparatorKind>());
    ListSequence.fromList(list).addElement(PeriodSeparatorKind.DEFAULT);
    ListSequence.fromList(list).addElement(PeriodSeparatorKind.IFBEFORE);
    ListSequence.fromList(list).addElement(PeriodSeparatorKind.IFAFTER);
    return list;
  }

  public static PeriodSeparatorKind getDefault() {
    return PeriodSeparatorKind.DEFAULT;
  }

  public static PeriodSeparatorKind parseValue(String value) {
    if (value == null) {
      return PeriodSeparatorKind.getDefault();
    }
    if (value.equals(PeriodSeparatorKind.DEFAULT.getValueAsString())) {
      return PeriodSeparatorKind.DEFAULT;
    }
    if (value.equals(PeriodSeparatorKind.IFBEFORE.getValueAsString())) {
      return PeriodSeparatorKind.IFBEFORE;
    }
    if (value.equals(PeriodSeparatorKind.IFAFTER.getValueAsString())) {
      return PeriodSeparatorKind.IFAFTER;
    }
    return PeriodSeparatorKind.getDefault();
  }
}
