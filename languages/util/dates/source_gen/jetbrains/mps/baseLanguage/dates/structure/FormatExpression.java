package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.TypeDerivable;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.datesInternal.structure.IDateFormat;
import jetbrains.mps.baseLanguage.datesInternal.structure.Locale;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FormatExpression extends Expression implements TypeDerivable {
  public static final String concept = "jetbrains.mps.baseLanguage.dates.structure.FormatExpression";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DATE_FORMAT = "dateFormat";
  public static final String LOCALE = "locale";
  public static final String DATE_EXPRESSION = "dateExpression";
  public static final String ZONE = "zone";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public FormatExpression(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(FormatExpression.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(FormatExpression.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(FormatExpression.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(FormatExpression.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(FormatExpression.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(FormatExpression.VIRTUAL_PACKAGE, value);
  }

  public IDateFormat getDateFormat() {
    return (IDateFormat) this.getReferent(IDateFormat.class, FormatExpression.DATE_FORMAT);
  }

  public void setDateFormat(IDateFormat node) {
    super.setReferent(FormatExpression.DATE_FORMAT, node);
  }

  public Locale getLocale() {
    return (Locale) this.getReferent(Locale.class, FormatExpression.LOCALE);
  }

  public void setLocale(Locale node) {
    super.setReferent(FormatExpression.LOCALE, node);
  }

  public Expression getDateExpression() {
    return (Expression) this.getChild(Expression.class, FormatExpression.DATE_EXPRESSION);
  }

  public void setDateExpression(Expression node) {
    super.setChild(FormatExpression.DATE_EXPRESSION, node);
  }

  public Expression getZone() {
    return (Expression) this.getChild(Expression.class, FormatExpression.ZONE);
  }

  public void setZone(Expression node) {
    super.setChild(FormatExpression.ZONE, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(FormatExpression.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, FormatExpression.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, FormatExpression.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(FormatExpression.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, FormatExpression.SMODEL_ATTRIBUTE, node);
  }

  public static FormatExpression newInstance(SModel sm, boolean init) {
    return (FormatExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.FormatExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FormatExpression newInstance(SModel sm) {
    return FormatExpression.newInstance(sm, false);
  }
}
