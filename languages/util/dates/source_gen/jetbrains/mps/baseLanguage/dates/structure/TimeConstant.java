package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.TypeDerivable;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.datesInternal.structure.Month;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TimeConstant extends Expression implements TypeDerivable {
  public static final String concept = "jetbrains.mps.baseLanguage.dates.structure.TimeConstant";
  public static final String SECOND = "second";
  public static final String MINUTE = "minute";
  public static final String HOUR = "hour";
  public static final String DAY = "day";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String YEAR = "year";
  public static final String MONTH = "month";
  public static final String TIMEZONE = "timezone";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public TimeConstant(SNode node) {
    super(node);
  }

  public String getSecond() {
    return this.getProperty(TimeConstant.SECOND);
  }

  public void setSecond(String value) {
    this.setProperty(TimeConstant.SECOND, value);
  }

  public String getMinute() {
    return this.getProperty(TimeConstant.MINUTE);
  }

  public void setMinute(String value) {
    this.setProperty(TimeConstant.MINUTE, value);
  }

  public String getHour() {
    return this.getProperty(TimeConstant.HOUR);
  }

  public void setHour(String value) {
    this.setProperty(TimeConstant.HOUR, value);
  }

  public String getDay() {
    return this.getProperty(TimeConstant.DAY);
  }

  public void setDay(String value) {
    this.setProperty(TimeConstant.DAY, value);
  }

  public String getShortDescription() {
    return this.getProperty(TimeConstant.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TimeConstant.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TimeConstant.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TimeConstant.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TimeConstant.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TimeConstant.VIRTUAL_PACKAGE, value);
  }

  public int getYear() {
    return this.getIntegerProperty(TimeConstant.YEAR);
  }

  public void setYear(int value) {
    this.setIntegerProperty(TimeConstant.YEAR, value);
  }

  public Month getMonth() {
    return (Month) this.getReferent(Month.class, TimeConstant.MONTH);
  }

  public void setMonth(Month node) {
    super.setReferent(TimeConstant.MONTH, node);
  }

  public Expression getTimezone() {
    return (Expression) this.getChild(Expression.class, TimeConstant.TIMEZONE);
  }

  public void setTimezone(Expression node) {
    super.setChild(TimeConstant.TIMEZONE, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(TimeConstant.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, TimeConstant.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, TimeConstant.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(TimeConstant.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, TimeConstant.SMODEL_ATTRIBUTE, node);
  }

  public static TimeConstant newInstance(SModel sm, boolean init) {
    return (TimeConstant) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.TimeConstant", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TimeConstant newInstance(SModel sm) {
    return TimeConstant.newInstance(sm, false);
  }
}
