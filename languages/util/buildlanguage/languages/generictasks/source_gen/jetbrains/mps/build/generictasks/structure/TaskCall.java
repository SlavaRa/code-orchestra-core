package jetbrains.mps.build.generictasks.structure;

/*Generated by MPS */

import jetbrains.mps.buildlanguage.structure.AbstractCall;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TaskCall extends AbstractCall implements INamedConcept {
  public static final String concept = "jetbrains.mps.build.generictasks.structure.TaskCall";
  public static final String ID = "id";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DECLARATION = "declaration";
  public static final String ATRIBUTES = "atributes";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public TaskCall(SNode node) {
    super(node);
  }

  public String getId() {
    return this.getProperty(TaskCall.ID);
  }

  public void setId(String value) {
    this.setProperty(TaskCall.ID, value);
  }

  public String getName() {
    return this.getProperty(TaskCall.NAME);
  }

  public void setName(String value) {
    this.setProperty(TaskCall.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(TaskCall.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TaskCall.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TaskCall.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TaskCall.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TaskCall.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TaskCall.VIRTUAL_PACKAGE, value);
  }

  public ITaskDeclaration getDeclaration() {
    return (ITaskDeclaration) this.getReferent(ITaskDeclaration.class, TaskCall.DECLARATION);
  }

  public void setDeclaration(ITaskDeclaration node) {
    super.setReferent(TaskCall.DECLARATION, node);
  }

  public int getAtributesesCount() {
    return this.getChildCount(TaskCall.ATRIBUTES);
  }

  public Iterator<Attribute> atributeses() {
    return this.children(Attribute.class, TaskCall.ATRIBUTES);
  }

  public List<Attribute> getAtributeses() {
    return this.getChildren(Attribute.class, TaskCall.ATRIBUTES);
  }

  public void addAtributes(Attribute node) {
    this.addChild(TaskCall.ATRIBUTES, node);
  }

  public void insertAtributes(Attribute prev, Attribute node) {
    this.insertChild(prev, TaskCall.ATRIBUTES, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(TaskCall.SMODEL_ATTRIBUTE);
  }

  public Iterator<jetbrains.mps.lang.core.structure.Attribute> smodelAttributes() {
    return this.children(jetbrains.mps.lang.core.structure.Attribute.class, TaskCall.SMODEL_ATTRIBUTE);
  }

  public List<jetbrains.mps.lang.core.structure.Attribute> getSmodelAttributes() {
    return this.getChildren(jetbrains.mps.lang.core.structure.Attribute.class, TaskCall.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(jetbrains.mps.lang.core.structure.Attribute node) {
    this.addChild(TaskCall.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(jetbrains.mps.lang.core.structure.Attribute prev, jetbrains.mps.lang.core.structure.Attribute node) {
    this.insertChild(prev, TaskCall.SMODEL_ATTRIBUTE, node);
  }

  public static TaskCall newInstance(SModel sm, boolean init) {
    return (TaskCall) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.generictasks.structure.TaskCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TaskCall newInstance(SModel sm) {
    return TaskCall.newInstance(sm, false);
  }
}
