package jetbrains.mps.build.generictasks.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.buildlanguage.behavior.PropertyValueExpression_Behavior;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_353793545802704406(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "declaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_353793545802704468(final IOperationContext operationContext, final PropertyMacroContext _context) {
    if (SPropertyOperations.getString(_context.getNode(), "id") == null) {
      return _context.createUniqueName(SPropertyOperations.getString(_context.getNode(), "name"), null);
    }
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static boolean ifMacro_Condition_353793545802704489(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "id") != null;
  }

  public static SNode sourceNodeQuery_353793545802704507(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "internalText", true);
  }

  public static Iterable sourceNodesQuery_353793545802704416(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> xmlattributes = new ArrayList<SNode>();
    for (SNode attr : SLinkOperations.getTargets(_context.getNode(), "atributes", true)) {
      SNode newAttr = SConceptOperations.createNewNode("jetbrains.mps.xml.deprecated.structure.Attribute", null);
      SPropertyOperations.set(newAttr, "name", SPropertyOperations.getString(SLinkOperations.getTarget(attr, "attributeDeclaration", false), "name"));
      SPropertyOperations.set(newAttr, "value", PropertyValueExpression_Behavior.call_toString_1213877472569(SLinkOperations.getTarget(attr, "value", true)));
      ListSequence.fromList(xmlattributes).addElement(newAttr);
    }
    return xmlattributes;
  }

  public static Iterable sourceNodesQuery_353793545802704499(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "nested", true);
  }
}
