package jetbrains.mps.build.generictasks.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class NestedDeclaration extends TaskReference {
  public static final String concept = "jetbrains.mps.build.generictasks.structure.NestedDeclaration";
  public static final String ROLE = "role";

  public NestedDeclaration(SNode node) {
    super(node);
  }

  public int getRolesCount() {
    return this.getChildCount(NestedDeclaration.ROLE);
  }

  public Iterator<TaskReference> roles() {
    return this.children(TaskReference.class, NestedDeclaration.ROLE);
  }

  public List<TaskReference> getRoles() {
    return this.getChildren(TaskReference.class, NestedDeclaration.ROLE);
  }

  public void addRole(TaskReference node) {
    this.addChild(NestedDeclaration.ROLE, node);
  }

  public void insertRole(TaskReference prev, TaskReference node) {
    this.insertChild(prev, NestedDeclaration.ROLE, node);
  }

  public static NestedDeclaration newInstance(SModel sm, boolean init) {
    return (NestedDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.generictasks.structure.NestedDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static NestedDeclaration newInstance(SModel sm) {
    return NestedDeclaration.newInstance(sm, false);
  }
}
