package jetbrains.mps.build.generictasks.structure;

/*Generated by MPS */

import jetbrains.mps.buildlanguage.structure.IDeclaration;
import jetbrains.mps.baseLanguage.classifiers.structure.IClassifier;
import java.util.Iterator;
import java.util.List;

public interface ITaskDeclaration extends IDeclaration, IClassifier {
  public static final String concept = "jetbrains.mps.build.generictasks.structure.ITaskDeclaration";
  public static final String CLASSNAME = "classname";
  public static final String CAN_HAVE_INTERNAL_TEXT = "canHaveInternalText";
  public static final String ABSTRACT = "abstract";
  public static final String DEPRACATED = "depracated";
  public static final String PARENT_REF = "parentRef";
  public static final String ATTRIBUTES_DECL = "attributesDecl";
  public static final String INTERFACES = "interfaces";

  public String getClassname();
  public void setClassname(String value);
  public boolean getCanHaveInternalText();
  public void setCanHaveInternalText(boolean value);
  public boolean getAbstract();
  public void setAbstract(boolean value);
  public boolean getDepracated();
  public void setDepracated(boolean value);
  public TaskReference getParentRef();
  public void setParentRef(TaskReference node);
  public int getAttributesDeclsCount();
  public Iterator<AttributeDeclaration> attributesDecls();
  public List<AttributeDeclaration> getAttributesDecls();
  public void addAttributesDecl(AttributeDeclaration node);
  public void insertAttributesDecl(AttributeDeclaration prev, AttributeDeclaration node);
  public int getInterfacesesCount();
  public Iterator<TaskReference> interfaceses();
  public List<TaskReference> getInterfaceses();
  public void addInterfaces(TaskReference node);
  public void insertInterfaces(TaskReference prev, TaskReference node);
}
