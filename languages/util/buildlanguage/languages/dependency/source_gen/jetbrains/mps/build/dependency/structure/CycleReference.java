package jetbrains.mps.build.dependency.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CycleReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.build.dependency.structure.CycleReference";
  public static final String CYCLE = "cycle";

  public CycleReference(SNode node) {
    super(node);
  }

  public Cycle getCycle() {
    return (Cycle) this.getReferent(Cycle.class, CycleReference.CYCLE);
  }

  public void setCycle(Cycle node) {
    super.setReferent(CycleReference.CYCLE, node);
  }

  public static CycleReference newInstance(SModel sm, boolean init) {
    return (CycleReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.dependency.structure.CycleReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CycleReference newInstance(SModel sm) {
    return CycleReference.newInstance(sm, false);
  }
}
