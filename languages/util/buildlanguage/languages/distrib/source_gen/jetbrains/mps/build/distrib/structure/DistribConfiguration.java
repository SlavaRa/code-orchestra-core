package jetbrains.mps.build.distrib.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.build.packaging.structure.IVariableHolder;
import jetbrains.mps.build.packaging.structure.IMacroHolder;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.build.packaging.structure.Configuration;
import jetbrains.mps.build.packaging.structure.Folder;
import jetbrains.mps.build.packaging.structure.IStringExpression;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.build.packaging.structure.Macro;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DistribConfiguration extends BaseConcept implements INamedConcept, IVariableHolder, IMacroHolder {
  public static final String concept = "jetbrains.mps.build.distrib.structure.DistribConfiguration";
  public static final String STARTUP_CLASS = "startupClass";
  public static final String DEFAULT_V_M_OPTIONS = "defaultVMOptions";
  public static final String ADDITIONAL_V_M_OPTIONS = "additionalVMOptions";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String USE_V_M_OPTIONS_FILE = "useVMOptionsFile";
  public static final String BUILD_SCRIPT_CONFIGURATION = "buildScriptConfiguration";
  public static final String PROJECT_FOLDER = "projectFolder";
  public static final String SHORT_NAME = "shortName";
  public static final String LONG_NAME = "longName";
  public static final String RELEASE_VERSION = "releaseVersion";
  public static final String BUILD_VERSION = "buildVersion";
  public static final String COMPANY = "company";
  public static final String WEB_SITE = "webSite";
  public static final String CLASS_PATH = "classPath";
  public static final String STARTUP_DIRECTORY = "startupDirectory";
  public static final String VM_OPTIONS_DIR = "vmOptionsDir";
  public static final String SYSTEM_SPECIFIC_CONFIG = "systemSpecificConfig";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";
  public static final String MACRO = "macro";

  public DistribConfiguration(SNode node) {
    super(node);
  }

  public String getStartupClass() {
    return this.getProperty(DistribConfiguration.STARTUP_CLASS);
  }

  public void setStartupClass(String value) {
    this.setProperty(DistribConfiguration.STARTUP_CLASS, value);
  }

  public String getDefaultVMOptions() {
    return this.getProperty(DistribConfiguration.DEFAULT_V_M_OPTIONS);
  }

  public void setDefaultVMOptions(String value) {
    this.setProperty(DistribConfiguration.DEFAULT_V_M_OPTIONS, value);
  }

  public String getAdditionalVMOptions() {
    return this.getProperty(DistribConfiguration.ADDITIONAL_V_M_OPTIONS);
  }

  public void setAdditionalVMOptions(String value) {
    this.setProperty(DistribConfiguration.ADDITIONAL_V_M_OPTIONS, value);
  }

  public String getName() {
    return this.getProperty(DistribConfiguration.NAME);
  }

  public void setName(String value) {
    this.setProperty(DistribConfiguration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(DistribConfiguration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(DistribConfiguration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(DistribConfiguration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(DistribConfiguration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(DistribConfiguration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(DistribConfiguration.VIRTUAL_PACKAGE, value);
  }

  public boolean getUseVMOptionsFile() {
    return this.getBooleanProperty(DistribConfiguration.USE_V_M_OPTIONS_FILE);
  }

  public void setUseVMOptionsFile(boolean value) {
    this.setBooleanProperty(DistribConfiguration.USE_V_M_OPTIONS_FILE, value);
  }

  public Configuration getBuildScriptConfiguration() {
    return (Configuration) this.getReferent(Configuration.class, DistribConfiguration.BUILD_SCRIPT_CONFIGURATION);
  }

  public void setBuildScriptConfiguration(Configuration node) {
    super.setReferent(DistribConfiguration.BUILD_SCRIPT_CONFIGURATION, node);
  }

  public Folder getProjectFolder() {
    return (Folder) this.getReferent(Folder.class, DistribConfiguration.PROJECT_FOLDER);
  }

  public void setProjectFolder(Folder node) {
    super.setReferent(DistribConfiguration.PROJECT_FOLDER, node);
  }

  public IStringExpression getShortName() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.SHORT_NAME);
  }

  public void setShortName(IStringExpression node) {
    super.setChild(DistribConfiguration.SHORT_NAME, node);
  }

  public IStringExpression getLongName() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.LONG_NAME);
  }

  public void setLongName(IStringExpression node) {
    super.setChild(DistribConfiguration.LONG_NAME, node);
  }

  public IStringExpression getReleaseVersion() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.RELEASE_VERSION);
  }

  public void setReleaseVersion(IStringExpression node) {
    super.setChild(DistribConfiguration.RELEASE_VERSION, node);
  }

  public IStringExpression getBuildVersion() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.BUILD_VERSION);
  }

  public void setBuildVersion(IStringExpression node) {
    super.setChild(DistribConfiguration.BUILD_VERSION, node);
  }

  public IStringExpression getCompany() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.COMPANY);
  }

  public void setCompany(IStringExpression node) {
    super.setChild(DistribConfiguration.COMPANY, node);
  }

  public IStringExpression getWebSite() {
    return (IStringExpression) this.getChild(IStringExpression.class, DistribConfiguration.WEB_SITE);
  }

  public void setWebSite(IStringExpression node) {
    super.setChild(DistribConfiguration.WEB_SITE, node);
  }

  public ClassPath getClassPath() {
    return (ClassPath) this.getChild(ClassPath.class, DistribConfiguration.CLASS_PATH);
  }

  public void setClassPath(ClassPath node) {
    super.setChild(DistribConfiguration.CLASS_PATH, node);
  }

  public AbstractPath getStartupDirectory() {
    return (AbstractPath) this.getChild(AbstractPath.class, DistribConfiguration.STARTUP_DIRECTORY);
  }

  public void setStartupDirectory(AbstractPath node) {
    super.setChild(DistribConfiguration.STARTUP_DIRECTORY, node);
  }

  public AbstractPath getVmOptionsDir() {
    return (AbstractPath) this.getChild(AbstractPath.class, DistribConfiguration.VM_OPTIONS_DIR);
  }

  public void setVmOptionsDir(AbstractPath node) {
    super.setChild(DistribConfiguration.VM_OPTIONS_DIR, node);
  }

  public int getSystemSpecificConfigsCount() {
    return this.getChildCount(DistribConfiguration.SYSTEM_SPECIFIC_CONFIG);
  }

  public Iterator<SystemSpecificConfig> systemSpecificConfigs() {
    return this.children(SystemSpecificConfig.class, DistribConfiguration.SYSTEM_SPECIFIC_CONFIG);
  }

  public List<SystemSpecificConfig> getSystemSpecificConfigs() {
    return this.getChildren(SystemSpecificConfig.class, DistribConfiguration.SYSTEM_SPECIFIC_CONFIG);
  }

  public void addSystemSpecificConfig(SystemSpecificConfig node) {
    this.addChild(DistribConfiguration.SYSTEM_SPECIFIC_CONFIG, node);
  }

  public void insertSystemSpecificConfig(SystemSpecificConfig prev, SystemSpecificConfig node) {
    this.insertChild(prev, DistribConfiguration.SYSTEM_SPECIFIC_CONFIG, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(DistribConfiguration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, DistribConfiguration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, DistribConfiguration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(DistribConfiguration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, DistribConfiguration.SMODEL_ATTRIBUTE, node);
  }

  public int getMacrosCount() {
    return this.getChildCount(DistribConfiguration.MACRO);
  }

  public Iterator<Macro> macros() {
    return this.children(Macro.class, DistribConfiguration.MACRO);
  }

  public List<Macro> getMacros() {
    return this.getChildren(Macro.class, DistribConfiguration.MACRO);
  }

  public void addMacro(Macro node) {
    this.addChild(DistribConfiguration.MACRO, node);
  }

  public void insertMacro(Macro prev, Macro node) {
    this.insertChild(prev, DistribConfiguration.MACRO, node);
  }

  public static DistribConfiguration newInstance(SModel sm, boolean init) {
    return (DistribConfiguration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.distrib.structure.DistribConfiguration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DistribConfiguration newInstance(SModel sm) {
    return DistribConfiguration.newInstance(sm, false);
  }
}
