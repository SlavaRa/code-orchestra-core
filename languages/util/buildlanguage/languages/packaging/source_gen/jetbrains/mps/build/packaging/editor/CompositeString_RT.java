package jetbrains.mps.build.packaging.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.EditorCellAction;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CompositeString_RT {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.RIGHT_TRANSFORM, new CompositeString_RT.CompositeString_RT_RIGHT_TRANSFORM(node));
  }

  public static class CompositeString_RT_RIGHT_TRANSFORM extends EditorCellAction {
    /*package*/ SNode myNode;

    public CompositeString_RT_RIGHT_TRANSFORM(SNode node) {
      this.myNode = node;
    }

    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }

    public void execute_internal(EditorContext editorContext, SNode node) {
      SNode newNode = SNodeFactoryOperations.createNewNode("jetbrains.mps.build.packaging.structure.CompositeString", null);
      SNodeOperations.replaceWithAnother(node, newNode);
      SLinkOperations.setTarget(newNode, "left", node, true);
    }
  }
}
