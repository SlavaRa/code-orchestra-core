package jetbrains.mps.build.packaging.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.apache.commons.lang.StringUtils;
import java.io.File;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Zip_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.setTarget(thisNode, "delete", SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Delete", null), true);
  }

  public static String call_getTemporalDir_1239622540603(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, "name") + ".tmp";
  }

  public static String virtual_getChildrenTargetDir_1237389224202(SNode thisNode) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent")) {
      String parentTargetDir = IAbstractCompositeComponent_Behavior.call_getChildrenTargetDir_1237389224202(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"));
      if (StringUtils.isEmpty(parentTargetDir)) {
        return Zip_Behavior.call_getTemporalDir_1239622540603(thisNode);
      }
      return parentTargetDir + File.separator + Zip_Behavior.call_getTemporalDir_1239622540603(thisNode);
    }
    return Zip_Behavior.call_getTemporalDir_1239622540603(thisNode);
  }

  public static List<SNode> virtual_getPostProcessingTasks_1213877333861(SNode thisNode) {
    return ListSequence.fromListAndArray(new ArrayList<SNode>(), SLinkOperations.getTarget(thisNode, "delete", true));
  }

  public static String virtual_getExcludes_1213877279373(SNode thisNode) {
    return ((SPropertyOperations.getString(thisNode, "excludes") != null) ?
      (SPropertyOperations.getString(thisNode, "excludes")) :
      ""
    );
  }

  public static String virtual_getIncludes_1213877279430(SNode thisNode) {
    return ((SPropertyOperations.getString(thisNode, "includes") != null) ?
      (SPropertyOperations.getString(thisNode, "includes")) :
      ""
    );
  }
}
