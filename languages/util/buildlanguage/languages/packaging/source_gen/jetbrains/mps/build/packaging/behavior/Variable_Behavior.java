package jetbrains.mps.build.packaging.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.Language;
import jetbrains.mps.kernel.model.SModelUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import java.util.List;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Variable_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Language getPackagingLanguage_5558646027962551669() {
    return SModelUtil.getDeclaringLanguage(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.packaging.structure.Variable"));
  }

  public static List<SNode> getDefaultVariables_7323449223785133410() {
    Iterable<SModelDescriptor> accessories = Variable_Behavior.getPackagingLanguage_5558646027962551669().getAccessoryModels();
    Iterable<SNode> variables = Sequence.fromIterable(accessories).translate(new ITranslator2<SModelDescriptor, SNode>() {
      public Iterable<SNode> translate(final SModelDescriptor smodel) {
        return new Iterable<SNode>() {
          public Iterator<SNode> iterator() {
            return new YieldingIterator<SNode>() {
              private int __CP__ = 0;
              private SNode _2_node;
              private Iterator<SNode> _2_node_it;
              private SNode _5__yield_4cy34q_a0a0a0a0b0c;
              private Iterator<SNode> _5__yield_4cy34q_a0a0a0a0b0c_it;

              protected boolean moveToNext() {
__loop__:
                do {
__switch__:
                  switch (this.__CP__) {
                    case -1:
                      assert false : "Internal error";
                      return false;
                    case 2:
                      this._2_node_it = smodel.getSModel().roots().iterator();
                    case 3:
                      if (!(this._2_node_it.hasNext())) {
                        this.__CP__ = 1;
                        break;
                      }
                      this._2_node = this._2_node_it.next();
                      this.__CP__ = 4;
                      break;
                    case 5:
                      this._5__yield_4cy34q_a0a0a0a0b0c_it = Sequence.fromIterable(SNodeOperations.getDescendants(_2_node, "jetbrains.mps.build.packaging.structure.Variable", true, new String[]{})).iterator();
                    case 6:
                      if (!(this._5__yield_4cy34q_a0a0a0a0b0c_it.hasNext())) {
                        this.__CP__ = 3;
                        break;
                      }
                      this._5__yield_4cy34q_a0a0a0a0b0c = this._5__yield_4cy34q_a0a0a0a0b0c_it.next();
                      this.__CP__ = 7;
                      break;
                    case 8:
                      this.__CP__ = 6;
                      this.yield(_5__yield_4cy34q_a0a0a0a0b0c);
                      return true;
                    case 0:
                      this.__CP__ = 2;
                      break;
                    case 4:
                      this.__CP__ = 5;
                      break;
                    case 7:
                      this.__CP__ = 8;
                      break;
                    default:
                      break __loop__;
                  }
                } while (true);
                return false;
              }
            };
          }
        };
      }
    });
    return Sequence.fromIterable(variables).toListSequence();
  }
}
