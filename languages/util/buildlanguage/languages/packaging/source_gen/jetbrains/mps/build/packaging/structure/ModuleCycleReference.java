package jetbrains.mps.build.packaging.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ModuleCycleReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.build.packaging.structure.ModuleCycleReference";
  public static final String CYCLE = "cycle";

  public ModuleCycleReference(SNode node) {
    super(node);
  }

  public ModuleCycle getCycle() {
    return (ModuleCycle) this.getReferent(ModuleCycle.class, ModuleCycleReference.CYCLE);
  }

  public void setCycle(ModuleCycle node) {
    super.setReferent(ModuleCycleReference.CYCLE, node);
  }

  public static ModuleCycleReference newInstance(SModel sm, boolean init) {
    return (ModuleCycleReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.ModuleCycleReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ModuleCycleReference newInstance(SModel sm) {
    return ModuleCycleReference.newInstance(sm, false);
  }
}
