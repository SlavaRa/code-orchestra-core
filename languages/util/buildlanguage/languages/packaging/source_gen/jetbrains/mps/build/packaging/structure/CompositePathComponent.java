package jetbrains.mps.build.packaging.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CompositePathComponent extends BaseConcept {
  public static final String concept = "jetbrains.mps.build.packaging.structure.CompositePathComponent";
  public static final String PATH_COMPONENT = "pathComponent";

  public CompositePathComponent(SNode node) {
    super(node);
  }

  public int getPathComponentsCount() {
    return this.getChildCount(CompositePathComponent.PATH_COMPONENT);
  }

  public Iterator<PathComponent> pathComponents() {
    return this.children(PathComponent.class, CompositePathComponent.PATH_COMPONENT);
  }

  public List<PathComponent> getPathComponents() {
    return this.getChildren(PathComponent.class, CompositePathComponent.PATH_COMPONENT);
  }

  public void addPathComponent(PathComponent node) {
    this.addChild(CompositePathComponent.PATH_COMPONENT, node);
  }

  public void insertPathComponent(PathComponent prev, PathComponent node) {
    this.insertChild(prev, CompositePathComponent.PATH_COMPONENT, node);
  }

  public static CompositePathComponent newInstance(SModel sm, boolean init) {
    return (CompositePathComponent) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.build.packaging.structure.CompositePathComponent", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CompositePathComponent newInstance(SModel sm) {
    return CompositePathComponent.newInstance(sm, false);
  }
}
