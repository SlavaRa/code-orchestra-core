package jetbrains.mps.build.packaging.plugin;

/*Generated by MPS */

import java.util.List;
import com.intellij.execution.junit.RuntimeConfigurationProducer;
import com.intellij.execution.configurations.ConfigurationType;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;
import jetbrains.mps.plugins.pluginparts.runconfigs.BaseConfigCreator;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.plugins.pluginparts.runconfigs.MPSPsiElement;
import jetbrains.mps.baseLanguage.closures.runtime.Wrappers;
import jetbrains.mps.smodel.ModelAccess;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class PackagingBuildScript_Producer {
  private static String CONFIGURATION_FACTORY_CLASS_NAME = "jetbrains.mps.build.packaging.plugin.PackagingBuildScript_Configuration_Factory";

  public PackagingBuildScript_Producer() {
  }

  public static List<RuntimeConfigurationProducer> getProducers(ConfigurationType configurationType) {
    List<RuntimeConfigurationProducer> creators = ListSequence.fromList(new ArrayList<RuntimeConfigurationProducer>());
    ListSequence.fromList(creators).addElement(new PackagingBuildScript_Producer.ProducerPart_NodeConfiguration_55pzr0_a(configurationType, CONFIGURATION_FACTORY_CLASS_NAME));
    ListSequence.fromList(creators).addElement(new PackagingBuildScript_Producer.ProducerPart_NodeLayout_55pzr0_b(configurationType, CONFIGURATION_FACTORY_CLASS_NAME));
    return creators;
  }

  public static class ProducerPart_NodeConfiguration_55pzr0_a extends BaseConfigCreator<SNode> {
    public ProducerPart_NodeConfiguration_55pzr0_a(ConfigurationType configurationType, String factoryName) {
      super(configurationType, factoryName);
    }

    protected boolean isApplicable(Object source) {
      return source instanceof SNode && SNodeOperations.isInstanceOf(((SNode) source), "jetbrains.mps.build.packaging.structure.Configuration");
    }

    protected PackagingBuildScript_Configuration doCreateConfiguration(final SNode source) {
      setSourceElement(new MPSPsiElement(source));
      final Wrappers._T<SNode> layout = new Wrappers._T<SNode>();
      final Wrappers._boolean isApplicable = new Wrappers._boolean();
      final Wrappers._T<String> configurationId = new Wrappers._T<String>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          layout.value = SNodeOperations.getAncestor(source, "jetbrains.mps.build.packaging.structure.Layout", false, true);
          isApplicable.value = (layout.value != null) && ListSequence.fromList(SNodeOperations.getDescendants(layout.value, "jetbrains.mps.build.packaging.structure.INotBuildableComponent", false, new String[]{})).isEmpty();
          configurationId.value = source.getId();
        }
      });
      if (!(isApplicable.value)) {
        return null;
      }

      PackagingBuildScript_Configuration configuration = new PackagingBuildScript_Configuration(getContext().getProject(), (PackagingBuildScript_Configuration_Factory) getConfigurationFactory(), SPropertyOperations.getString(layout.value, "name") + "." + SPropertyOperations.getString(source, "name"));
      configuration.getNode().setNode(layout.value);
      configuration.setConfigurationId(configurationId.value);
      return configuration;
    }

    @Override
    public PackagingBuildScript_Producer.ProducerPart_NodeConfiguration_55pzr0_a clone() {
      return (PackagingBuildScript_Producer.ProducerPart_NodeConfiguration_55pzr0_a) super.clone();
    }
  }

  public static class ProducerPart_NodeLayout_55pzr0_b extends BaseConfigCreator<SNode> {
    public ProducerPart_NodeLayout_55pzr0_b(ConfigurationType configurationType, String factoryName) {
      super(configurationType, factoryName);
    }

    protected boolean isApplicable(Object source) {
      return source instanceof SNode && SNodeOperations.isInstanceOf(((SNode) source), "jetbrains.mps.build.packaging.structure.Layout");
    }

    protected PackagingBuildScript_Configuration doCreateConfiguration(final SNode source) {
      setSourceElement(new MPSPsiElement(source));
      final Wrappers._boolean isApplicable = new Wrappers._boolean();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          isApplicable.value = !(ListSequence.fromList(SNodeOperations.getDescendants(source, "jetbrains.mps.build.packaging.structure.INotBuildableComponent", false, new String[]{})).isNotEmpty());
        }
      });
      if (!(isApplicable.value)) {
        return null;
      }

      final Wrappers._T<String> configurationId = new Wrappers._T<String>();
      ModelAccess.instance().runReadAction(new Runnable() {
        public void run() {
          configurationId.value = ListSequence.fromList(SLinkOperations.getTargets(source, "configuration", true)).first().getId();
        }
      });

      PackagingBuildScript_Configuration configuration = new PackagingBuildScript_Configuration(getContext().getProject(), (PackagingBuildScript_Configuration_Factory) getConfigurationFactory(), SPropertyOperations.getString(source, "name") + "." + SPropertyOperations.getString(source, "name"));
      configuration.getNode().setNode(source);
      configuration.setConfigurationId(configurationId.value);
      return configuration;
    }

    @Override
    public PackagingBuildScript_Producer.ProducerPart_NodeLayout_55pzr0_b clone() {
      return (PackagingBuildScript_Producer.ProducerPart_NodeLayout_55pzr0_b) super.clone();
    }
  }
}
