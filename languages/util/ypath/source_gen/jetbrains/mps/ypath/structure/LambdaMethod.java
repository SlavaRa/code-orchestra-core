package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Closure;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LambdaMethod extends Closure {
  public static final String concept = "jetbrains.mps.ypath.structure.LambdaMethod";
  public static final String PARAMETER = "parameter";

  public LambdaMethod(SNode node) {
    super(node);
  }

  public LambdaMethodParameter getParameter() {
    return (LambdaMethodParameter) this.getChild(LambdaMethodParameter.class, LambdaMethod.PARAMETER);
  }

  public void setParameter(LambdaMethodParameter node) {
    super.setChild(LambdaMethod.PARAMETER, node);
  }

  public static LambdaMethod newInstance(SModel sm, boolean init) {
    return (LambdaMethod) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ypath.structure.LambdaMethod", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LambdaMethod newInstance(SModel sm) {
    return LambdaMethod.newInstance(sm, false);
  }
}
