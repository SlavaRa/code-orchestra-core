package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IterateOperation extends TreePathOperation {
  public static final String concept = "jetbrains.mps.ypath.structure.IterateOperation";
  public static final String USE_DEFAULT = "useDefault";
  public static final String AXIS = "axis";
  public static final String USED_FEATURE = "usedFeature";
  public static final String PARAM_OBJECT = "paramObject";

  public IterateOperation(SNode node) {
    super(node);
  }

  public boolean getUseDefault() {
    return this.getBooleanProperty(IterateOperation.USE_DEFAULT);
  }

  public void setUseDefault(boolean value) {
    this.setBooleanProperty(IterateOperation.USE_DEFAULT, value);
  }

  public TraversalAxis getAxis() {
    String value = super.getProperty(IterateOperation.AXIS);
    return TraversalAxis.parseValue(value);
  }

  public void setAxis(TraversalAxis value) {
    super.setProperty(IterateOperation.AXIS, value.getValueAsString());
  }

  public IFeature getUsedFeature() {
    return (IFeature) this.getReferent(IFeature.class, IterateOperation.USED_FEATURE);
  }

  public void setUsedFeature(IFeature node) {
    super.setReferent(IterateOperation.USED_FEATURE, node);
  }

  public ParameterWrapper getParamObject() {
    return (ParameterWrapper) this.getChild(ParameterWrapper.class, IterateOperation.PARAM_OBJECT);
  }

  public void setParamObject(ParameterWrapper node) {
    super.setChild(IterateOperation.PARAM_OBJECT, node);
  }

  public static IterateOperation newInstance(SModel sm, boolean init) {
    return (IterateOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ypath.structure.IterateOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IterateOperation newInstance(SModel sm) {
    return IterateOperation.newInstance(sm, false);
  }
}
