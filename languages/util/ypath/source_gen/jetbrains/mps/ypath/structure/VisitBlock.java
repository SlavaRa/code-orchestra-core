package jetbrains.mps.ypath.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VisitBlock extends LambdaMethod {
  public static final String concept = "jetbrains.mps.ypath.structure.VisitBlock";
  public static final String EXPRESSION = "expression";
  public static final String VISIT_PARAMETER_DECLARATION_LIST = "visitParameterDeclarationList";

  public VisitBlock(SNode node) {
    super(node);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, VisitBlock.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(VisitBlock.EXPRESSION, node);
  }

  public VisitParameterDeclarationList getVisitParameterDeclarationList() {
    return (VisitParameterDeclarationList) this.getChild(VisitParameterDeclarationList.class, VisitBlock.VISIT_PARAMETER_DECLARATION_LIST);
  }

  public void setVisitParameterDeclarationList(VisitParameterDeclarationList node) {
    super.setChild(VisitBlock.VISIT_PARAMETER_DECLARATION_LIST, node);
  }

  public static VisitBlock newInstance(SModel sm, boolean init) {
    return (VisitBlock) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ypath.structure.VisitBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VisitBlock newInstance(SModel sm) {
    return VisitBlock.newInstance(sm, false);
  }
}
