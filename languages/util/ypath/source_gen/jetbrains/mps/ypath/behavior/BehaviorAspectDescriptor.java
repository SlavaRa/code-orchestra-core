package jetbrains.mps.ypath.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"jetbrains.mps.ypath.structure.ChildrenBlock", "jetbrains.mps.ypath.structure.ExpressionFunctionParam", "jetbrains.mps.ypath.structure.FeatureGetFun", "jetbrains.mps.ypath.structure.FeatureSequenceFun", "jetbrains.mps.ypath.structure.FeatureSizeFun", "jetbrains.mps.ypath.structure.FromOperation", "jetbrains.mps.ypath.structure.GFCardinalParamFun", "jetbrains.mps.ypath.structure.GFGetterFun", "jetbrains.mps.ypath.structure.GFGetterParamFun", "jetbrains.mps.ypath.structure.GeneratorFunctionParam", "jetbrains.mps.ypath.structure.GenericFeature", "jetbrains.mps.ypath.structure.GenericParamFeature", "jetbrains.mps.ypath.structure.IndexFunctionParam", "jetbrains.mps.ypath.structure.IterateOperation", "jetbrains.mps.ypath.structure.KindBlock", "jetbrains.mps.ypath.structure.LambdaMethod", "jetbrains.mps.ypath.structure.LambdaMethodParameter", "jetbrains.mps.ypath.structure.ListFeature", "jetbrains.mps.ypath.structure.MatchDefaultPropertyOperation", "jetbrains.mps.ypath.structure.MatchKindOperation", "jetbrains.mps.ypath.structure.MatchPropertyOperation", "jetbrains.mps.ypath.structure.NodeFunctionParam", "jetbrains.mps.ypath.structure.NodeKindDefaultCase", "jetbrains.mps.ypath.structure.NodeKindSpecificCase", "jetbrains.mps.ypath.structure.NodeTypeFunctionParam", "jetbrains.mps.ypath.structure.ParamFeatureGetFun", "jetbrains.mps.ypath.structure.ParamFeatureSequenceFun", "jetbrains.mps.ypath.structure.ParamFeatureSizeFun", "jetbrains.mps.ypath.structure.ParamFunctionParam", "jetbrains.mps.ypath.structure.ParamListFeature", "jetbrains.mps.ypath.structure.ParamSequenceFeature", "jetbrains.mps.ypath.structure.ParameterQueryFun", "jetbrains.mps.ypath.structure.ParameterWrapper", "jetbrains.mps.ypath.structure.ParentBlock", "jetbrains.mps.ypath.structure.PropertyGetter", "jetbrains.mps.ypath.structure.SequenceFeature", "jetbrains.mps.ypath.structure.SwitchNodeKindStatement", "jetbrains.mps.ypath.structure.TargetTypeFun", "jetbrains.mps.ypath.structure.ToStringFun", "jetbrains.mps.ypath.structure.TreeNodeKind", "jetbrains.mps.ypath.structure.TreeNodeKindOccurrence", "jetbrains.mps.ypath.structure.TreeNodeKindProperty", "jetbrains.mps.ypath.structure.TreeNodeKindReference", "jetbrains.mps.ypath.structure.TreePathAdapterExpression", "jetbrains.mps.ypath.structure.TreePathAspect", "jetbrains.mps.ypath.structure.TreePathCreator", "jetbrains.mps.ypath.structure.TreePathOperationExpression", "jetbrains.mps.ypath.structure.TreePathType", "jetbrains.mps.ypath.structure.ValueFunctionParam", "jetbrains.mps.ypath.structure.VisitBlock", "jetbrains.mps.ypath.structure.VisitChildrenExpression", "jetbrains.mps.ypath.structure.VisitNodesStatement", "jetbrains.mps.ypath.structure.VisitParameterDeclaration", "jetbrains.mps.ypath.structure.VisitParameterDeclarationList", "jetbrains.mps.ypath.structure.VisitParameterReference", "jetbrains.mps.ypath.structure.WhereBlock", "jetbrains.mps.ypath.structure.WhereOperation"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 47:
        return new TreePathType_BehaviorDescriptor();
      case 45:
        return new TreePathCreator_BehaviorDescriptor();
      case 15:
        return new LambdaMethod_BehaviorDescriptor();
      case 33:
        return new ParentBlock_BehaviorDescriptor();
      case 0:
        return new ChildrenBlock_BehaviorDescriptor();
      case 16:
        return new LambdaMethodParameter_BehaviorDescriptor();
      case 46:
        return new TreePathOperationExpression_BehaviorDescriptor();
      case 5:
        return new FromOperation_BehaviorDescriptor();
      case 13:
        return new IterateOperation_BehaviorDescriptor();
      case 56:
        return new WhereOperation_BehaviorDescriptor();
      case 55:
        return new WhereBlock_BehaviorDescriptor();
      case 44:
        return new TreePathAspect_BehaviorDescriptor();
      case 43:
        return new TreePathAdapterExpression_BehaviorDescriptor();
      case 39:
        return new TreeNodeKind_BehaviorDescriptor();
      case 19:
        return new MatchKindOperation_BehaviorDescriptor();
      case 14:
        return new KindBlock_BehaviorDescriptor();
      case 41:
        return new TreeNodeKindProperty_BehaviorDescriptor();
      case 34:
        return new PropertyGetter_BehaviorDescriptor();
      case 40:
        return new TreeNodeKindOccurrence_BehaviorDescriptor();
      case 20:
        return new MatchPropertyOperation_BehaviorDescriptor();
      case 18:
        return new MatchDefaultPropertyOperation_BehaviorDescriptor();
      case 42:
        return new TreeNodeKindReference_BehaviorDescriptor();
      case 49:
        return new VisitBlock_BehaviorDescriptor();
      case 23:
        return new NodeKindSpecificCase_BehaviorDescriptor();
      case 22:
        return new NodeKindDefaultCase_BehaviorDescriptor();
      case 50:
        return new VisitChildrenExpression_BehaviorDescriptor();
      case 52:
        return new VisitParameterDeclaration_BehaviorDescriptor();
      case 54:
        return new VisitParameterReference_BehaviorDescriptor();
      case 36:
        return new SwitchNodeKindStatement_BehaviorDescriptor();
      case 51:
        return new VisitNodesStatement_BehaviorDescriptor();
      case 53:
        return new VisitParameterDeclarationList_BehaviorDescriptor();
      case 17:
        return new ListFeature_BehaviorDescriptor();
      case 2:
        return new FeatureGetFun_BehaviorDescriptor();
      case 4:
        return new FeatureSizeFun_BehaviorDescriptor();
      case 21:
        return new NodeFunctionParam_BehaviorDescriptor();
      case 12:
        return new IndexFunctionParam_BehaviorDescriptor();
      case 48:
        return new ValueFunctionParam_BehaviorDescriptor();
      case 3:
        return new FeatureSequenceFun_BehaviorDescriptor();
      case 35:
        return new SequenceFeature_BehaviorDescriptor();
      case 28:
        return new ParamFunctionParam_BehaviorDescriptor();
      case 31:
        return new ParameterQueryFun_BehaviorDescriptor();
      case 24:
        return new NodeTypeFunctionParam_BehaviorDescriptor();
      case 37:
        return new TargetTypeFun_BehaviorDescriptor();
      case 29:
        return new ParamListFeature_BehaviorDescriptor();
      case 25:
        return new ParamFeatureGetFun_BehaviorDescriptor();
      case 26:
        return new ParamFeatureSequenceFun_BehaviorDescriptor();
      case 27:
        return new ParamFeatureSizeFun_BehaviorDescriptor();
      case 30:
        return new ParamSequenceFeature_BehaviorDescriptor();
      case 38:
        return new ToStringFun_BehaviorDescriptor();
      case 32:
        return new ParameterWrapper_BehaviorDescriptor();
      case 8:
        return new GFGetterParamFun_BehaviorDescriptor();
      case 1:
        return new ExpressionFunctionParam_BehaviorDescriptor();
      case 6:
        return new GFCardinalParamFun_BehaviorDescriptor();
      case 9:
        return new GeneratorFunctionParam_BehaviorDescriptor();
      case 7:
        return new GFGetterFun_BehaviorDescriptor();
      case 10:
        return new GenericFeature_BehaviorDescriptor();
      case 11:
        return new GenericParamFeature_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
