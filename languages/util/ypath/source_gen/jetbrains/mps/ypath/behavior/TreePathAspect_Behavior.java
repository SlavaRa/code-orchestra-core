package jetbrains.mps.ypath.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.closures.runtime.YieldingIterator;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TreePathAspect_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getDefaultProperty_1213877241846(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "nodeKinds", true)).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(final SNode it) {
        return new Iterable<SNode>() {
          public Iterator<SNode> iterator() {
            return new YieldingIterator<SNode>() {
              private int __CP__ = 0;
              private SNode _2_prop;
              private Iterator<SNode> _2_prop_it;

              protected boolean moveToNext() {
__loop__:
                do {
__switch__:
                  switch (this.__CP__) {
                    case -1:
                      assert false : "Internal error";
                      return false;
                    case 2:
                      this._2_prop_it = SLinkOperations.getTargets(SNodeOperations.cast(it, "jetbrains.mps.ypath.structure.TreeNodeKind"), "properties", true).iterator();
                    case 3:
                      if (!(this._2_prop_it.hasNext())) {
                        this.__CP__ = 1;
                        break;
                      }
                      this._2_prop = this._2_prop_it.next();
                      this.__CP__ = 4;
                      break;
                    case 5:
                      if (SPropertyOperations.getBoolean(SNodeOperations.cast(_2_prop, "jetbrains.mps.ypath.structure.TreeNodeKindProperty"), "default")) {
                        this.__CP__ = 6;
                        break;
                      }
                      this.__CP__ = 3;
                      break;
                    case 7:
                      this.__CP__ = 3;
                      this.yield(_2_prop);
                      return true;
                    case 0:
                      this.__CP__ = 2;
                      break;
                    case 4:
                      this.__CP__ = 5;
                      break;
                    case 6:
                      this.__CP__ = 7;
                      break;
                    default:
                      break __loop__;
                  }
                } while (true);
                return false;
              }
            };
          }
        };
      }
    }).first();
  }
}
