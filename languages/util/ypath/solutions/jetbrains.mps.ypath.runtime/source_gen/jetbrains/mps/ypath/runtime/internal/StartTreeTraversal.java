package jetbrains.mps.ypath.runtime.internal;

/*Generated by MPS */

import jetbrains.mps.ypath.runtime.ITreeTraversal;
import jetbrains.mps.ypath.runtime.ITreePath;
import java.util.Iterator;
import java.util.Collections;

public class StartTreeTraversal<T> extends AbstractTreeTraversal<T> implements ITreeTraversal<T> {
  private ITreePath<T> treePath;
  private T startingNode;
  private Iterable<T> startingIterable;

  public StartTreeTraversal(ITreePath<T> treePath, T startingNode) {
    this.treePath = treePath;
    this.startingNode = startingNode;
  }

  public StartTreeTraversal(ITreePath<T> treePath, Iterable<T> startingIterable) {
    this.treePath = treePath;
    this.startingIterable = startingIterable;
  }

  public ITreePath<T> getTreePath() {
    return treePath;
  }

  public Iterator<T> iterator() {
    if (startingIterable != null) {
      return startingIterable.iterator();
    }
    return Collections.singletonList(startingNode).iterator();
  }
}
