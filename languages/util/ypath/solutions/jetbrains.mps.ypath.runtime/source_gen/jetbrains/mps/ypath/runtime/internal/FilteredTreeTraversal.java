package jetbrains.mps.ypath.runtime.internal;

/*Generated by MPS */

import jetbrains.mps.ypath.runtime.ITreeTraversal;
import jetbrains.mps.ypath.runtime.IFilter;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class FilteredTreeTraversal<T> extends AbstractChainTreeTraversal<T> implements ITreeTraversal<T> {
  private final IFilter<T> filter;

  public FilteredTreeTraversal(ITreeTraversal<T> sourceTraversal, IFilter<T> filter) {
    super(sourceTraversal);
    this.filter = filter;
  }

  public Iterator<T> iterator() {
    return new FilteredTreeTraversal.FilteringIterator(getSourceTraversal().iterator());
  }

  private class FilteringIterator implements Iterator<T> {
    private Iterator<T> sourceIterator;
    private boolean hasNextNode;
    private T nextNode;

    private FilteringIterator(Iterator<T> iterator) {
      this.sourceIterator = iterator;
      moveToNext();
    }

    private void moveToNext() {
      this.nextNode = null;
      this.hasNextNode = false;
      while (sourceIterator.hasNext()) {
        T node = sourceIterator.next();
        if (filter.accept(node)) {
          this.nextNode = node;
          this.hasNextNode = true;
          break;
        }
      }
    }

    public boolean hasNext() {
      return hasNextNode;
    }

    public T next() {
      if (!(hasNextNode)) {
        throw new NoSuchElementException();
      }
      T tmp = nextNode;
      moveToNext();
      return tmp;
    }

    public void remove() {
      throw new UnsupportedOperationException();
    }
  }
}
