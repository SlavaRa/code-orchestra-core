package jetbrains.mps.baseLanguage.builders.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleBuilderExtensionDeclaration extends BaseSimpleBuilderDeclaration {
  public static final String concept = "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration";
  public static final String EXTENDED = "extended";
  public static final String CHILD = "child";
  public static final String PROPERTY = "property";

  public SimpleBuilderExtensionDeclaration(SNode node) {
    super(node);
  }

  public SimpleBuilderDeclaration getExtended() {
    return (SimpleBuilderDeclaration) this.getReferent(SimpleBuilderDeclaration.class, SimpleBuilderExtensionDeclaration.EXTENDED);
  }

  public void setExtended(SimpleBuilderDeclaration node) {
    super.setReferent(SimpleBuilderExtensionDeclaration.EXTENDED, node);
  }

  public int getChildsCount() {
    return this.getChildCount(SimpleBuilderExtensionDeclaration.CHILD);
  }

  public Iterator<SimpleBuilderChild> childs() {
    return this.children(SimpleBuilderChild.class, SimpleBuilderExtensionDeclaration.CHILD);
  }

  public List<SimpleBuilderChild> getChilds() {
    return this.getChildren(SimpleBuilderChild.class, SimpleBuilderExtensionDeclaration.CHILD);
  }

  public void addChild(SimpleBuilderChild node) {
    this.addChild(SimpleBuilderExtensionDeclaration.CHILD, node);
  }

  public void insertChild(SimpleBuilderChild prev, SimpleBuilderChild node) {
    this.insertChild(prev, SimpleBuilderExtensionDeclaration.CHILD, node);
  }

  public int getPropertiesCount() {
    return this.getChildCount(SimpleBuilderExtensionDeclaration.PROPERTY);
  }

  public Iterator<SimpleBuilderProperty> properties() {
    return this.children(SimpleBuilderProperty.class, SimpleBuilderExtensionDeclaration.PROPERTY);
  }

  public List<SimpleBuilderProperty> getProperties() {
    return this.getChildren(SimpleBuilderProperty.class, SimpleBuilderExtensionDeclaration.PROPERTY);
  }

  public void addProperty(SimpleBuilderProperty node) {
    this.addChild(SimpleBuilderExtensionDeclaration.PROPERTY, node);
  }

  public void insertProperty(SimpleBuilderProperty prev, SimpleBuilderProperty node) {
    this.insertChild(prev, SimpleBuilderExtensionDeclaration.PROPERTY, node);
  }

  public static SimpleBuilderExtensionDeclaration newInstance(SModel sm, boolean init) {
    return (SimpleBuilderExtensionDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleBuilderExtensionDeclaration newInstance(SModel sm) {
    return SimpleBuilderExtensionDeclaration.newInstance(sm, false);
  }
}
