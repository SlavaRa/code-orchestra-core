package jetbrains.mps.baseLanguage.builders.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"jetbrains.mps.baseLanguage.builders.structure.AsBuilderStatement", "jetbrains.mps.baseLanguage.builders.structure.AsTypeBuilder", "jetbrains.mps.baseLanguage.builders.structure.BeanBuilder", "jetbrains.mps.baseLanguage.builders.structure.BeanPropertyBuilder", "jetbrains.mps.baseLanguage.builders.structure.BuilderCreator", "jetbrains.mps.baseLanguage.builders.structure.BuilderStatement", "jetbrains.mps.baseLanguage.builders.structure.ResultExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderChild", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderChildExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameter", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameterReference", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParentExpression", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderProperty", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderPropertyBuilder", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderPropertyParent", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderPropertyValue", "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 4:
        return new BuilderCreator_BehaviorDescriptor();
      case 5:
        return new BuilderStatement_BehaviorDescriptor();
      case 6:
        return new ResultExpression_BehaviorDescriptor();
      case 19:
        return new SimpleBuilders_BehaviorDescriptor();
      case 8:
        return new SimpleBuilderChild_BehaviorDescriptor();
      case 14:
        return new SimpleBuilderParentExpression_BehaviorDescriptor();
      case 9:
        return new SimpleBuilderChildExpression_BehaviorDescriptor();
      case 10:
        return new SimpleBuilderDeclaration_BehaviorDescriptor();
      case 7:
        return new SimpleBuilder_BehaviorDescriptor();
      case 12:
        return new SimpleBuilderParameter_BehaviorDescriptor();
      case 13:
        return new SimpleBuilderParameterReference_BehaviorDescriptor();
      case 0:
        return new AsBuilderStatement_BehaviorDescriptor();
      case 3:
        return new BeanPropertyBuilder_BehaviorDescriptor();
      case 2:
        return new BeanBuilder_BehaviorDescriptor();
      case 1:
        return new AsTypeBuilder_BehaviorDescriptor();
      case 15:
        return new SimpleBuilderProperty_BehaviorDescriptor();
      case 17:
        return new SimpleBuilderPropertyParent_BehaviorDescriptor();
      case 18:
        return new SimpleBuilderPropertyValue_BehaviorDescriptor();
      case 16:
        return new SimpleBuilderPropertyBuilder_BehaviorDescriptor();
      case 11:
        return new SimpleBuilderExtensionDeclaration_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
