package jetbrains.mps.baseLanguage.builders.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleBuilderParameterReference extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameterReference";
  public static final String PARAMETER = "parameter";

  public SimpleBuilderParameterReference(SNode node) {
    super(node);
  }

  public SimpleBuilderParameter getParameter() {
    return (SimpleBuilderParameter) this.getReferent(SimpleBuilderParameter.class, SimpleBuilderParameterReference.PARAMETER);
  }

  public void setParameter(SimpleBuilderParameter node) {
    super.setReferent(SimpleBuilderParameterReference.PARAMETER, node);
  }

  public static SimpleBuilderParameterReference newInstance(SModel sm, boolean init) {
    return (SimpleBuilderParameterReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameterReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleBuilderParameterReference newInstance(SModel sm) {
    return SimpleBuilderParameterReference.newInstance(sm, false);
  }
}
