package jetbrains.mps.baseLanguage.builders.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleBuilderChild extends BaseConcept {
  public static final String concept = "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderChild";
  public static final String CHILD = "child";
  public static final String ATTACH_STATEMENT = "attachStatement";

  public SimpleBuilderChild(SNode node) {
    super(node);
  }

  public SimpleBuilderDeclaration getChild() {
    return (SimpleBuilderDeclaration) this.getReferent(SimpleBuilderDeclaration.class, SimpleBuilderChild.CHILD);
  }

  public void setChild(SimpleBuilderDeclaration node) {
    super.setReferent(SimpleBuilderChild.CHILD, node);
  }

  public Statement getAttachStatement() {
    return (Statement) this.getChild(Statement.class, SimpleBuilderChild.ATTACH_STATEMENT);
  }

  public void setAttachStatement(Statement node) {
    super.setChild(SimpleBuilderChild.ATTACH_STATEMENT, node);
  }

  public static SimpleBuilderChild newInstance(SModel sm, boolean init) {
    return (SimpleBuilderChild) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderChild", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleBuilderChild newInstance(SModel sm) {
    return SimpleBuilderChild.newInstance(sm, false);
  }
}
