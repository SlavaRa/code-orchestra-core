package jetbrains.mps.baseLanguage.builders.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.IScope;
import java.util.ArrayList;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class SimpleBuilders_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_isDescendant_5199967550912479710(SNode thisNode, SNode b) {
    if (thisNode == b) {
      return true;
    }
    if ((SLinkOperations.getTarget(thisNode, "extendsBuilder", false) == null)) {
      return false;
    }
    return SimpleBuilders_Behavior.call_isDescendant_5199967550912479710(SLinkOperations.getTarget(thisNode, "extendsBuilder", false), b);
  }

  public static List<SNode> call_getDescendands_5199967550912479741(SNode thisNode, SModel context, IScope scope) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode sb : SModelOperations.getRootsIncludingImported(context, scope, "jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders")) {
      if (SimpleBuilders_Behavior.call_isDescendant_5199967550912479710(sb, thisNode)) {
        ListSequence.fromList(result).addElement(sb);
      }
    }
    return result;
  }

  public static List<SNode> call_getAncestors_6211769134875410554(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    SNode current = thisNode;
    while (current != null) {
      ListSequence.fromList(result).addElement(current);
      current = SLinkOperations.getTarget(current, "extendsBuilder", false);
    }
    return result;
  }
}
