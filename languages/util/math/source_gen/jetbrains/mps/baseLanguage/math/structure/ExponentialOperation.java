package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExponentialOperation extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.ExponentialOperation";
  public static final String CPR_OperationSymbol = "operationSymbol";
  public static final String CLNK_AllowedSubstituends = "allowedSubstituends";
  public static final String EXPR = "expr";

  public ExponentialOperation(SNode node) {
    super(node);
  }

  public Expression getExpr() {
    return (Expression) this.getChild(Expression.class, ExponentialOperation.EXPR);
  }

  public void setExpr(Expression node) {
    super.setChild(ExponentialOperation.EXPR, node);
  }

  public static ExponentialOperation newInstance(SModel sm, boolean init) {
    return (ExponentialOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.ExponentialOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExponentialOperation newInstance(SModel sm) {
    return ExponentialOperation.newInstance(sm, false);
  }
}
