package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatrixNorm extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MatrixNorm";
  public static final String DEG = "deg";
  public static final String MAT = "mat";

  public MatrixNorm(SNode node) {
    super(node);
  }

  public MatrixNormKind getDeg() {
    String value = super.getProperty(MatrixNorm.DEG);
    return MatrixNormKind.parseValue(value);
  }

  public void setDeg(MatrixNormKind value) {
    super.setProperty(MatrixNorm.DEG, value.getValueAsString());
  }

  public Expression getMat() {
    return (Expression) this.getChild(Expression.class, MatrixNorm.MAT);
  }

  public void setMat(Expression node) {
    super.setChild(MatrixNorm.MAT, node);
  }

  public static MatrixNorm newInstance(SModel sm, boolean init) {
    return (MatrixNorm) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MatrixNorm", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatrixNorm newInstance(SModel sm) {
    return MatrixNorm.newInstance(sm, false);
  }
}
