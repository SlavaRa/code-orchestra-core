package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ComplexLiteral extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.ComplexLiteral";
  public static final String REAL = "real";
  public static final String IMAG = "imag";

  public ComplexLiteral(SNode node) {
    super(node);
  }

  public Expression getReal() {
    return (Expression) this.getChild(Expression.class, ComplexLiteral.REAL);
  }

  public void setReal(Expression node) {
    super.setChild(ComplexLiteral.REAL, node);
  }

  public Expression getImag() {
    return (Expression) this.getChild(Expression.class, ComplexLiteral.IMAG);
  }

  public void setImag(Expression node) {
    super.setChild(ComplexLiteral.IMAG, node);
  }

  public static ComplexLiteral newInstance(SModel sm, boolean init) {
    return (ComplexLiteral) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.ComplexLiteral", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ComplexLiteral newInstance(SModel sm) {
    return ComplexLiteral.newInstance(sm, false);
  }
}
