package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.BinaryOperation;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DecimalBinaryOperation extends BinaryOperation {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.DecimalBinaryOperation";
  public static final String CONTEXT = "context";

  public DecimalBinaryOperation(SNode node) {
    super(node);
  }

  public MathContext getContext() {
    return (MathContext) this.getChild(MathContext.class, DecimalBinaryOperation.CONTEXT);
  }

  public void setContext(MathContext node) {
    super.setChild(DecimalBinaryOperation.CONTEXT, node);
  }

  public static DecimalBinaryOperation newInstance(SModel sm, boolean init) {
    return (DecimalBinaryOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.DecimalBinaryOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DecimalBinaryOperation newInstance(SModel sm) {
    return DecimalBinaryOperation.newInstance(sm, false);
  }
}
