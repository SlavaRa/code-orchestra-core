package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatrixInverseOperation extends MatrixExponentialOperation {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MatrixInverseOperation";
  public static final String CONTEXT = "context";

  public MatrixInverseOperation(SNode node) {
    super(node);
  }

  public MathContext getContext() {
    return (MathContext) this.getChild(MathContext.class, MatrixInverseOperation.CONTEXT);
  }

  public void setContext(MathContext node) {
    super.setChild(MatrixInverseOperation.CONTEXT, node);
  }

  public static MatrixInverseOperation newInstance(SModel sm, boolean init) {
    return (MatrixInverseOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MatrixInverseOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatrixInverseOperation newInstance(SModel sm) {
    return MatrixInverseOperation.newInstance(sm, false);
  }
}
