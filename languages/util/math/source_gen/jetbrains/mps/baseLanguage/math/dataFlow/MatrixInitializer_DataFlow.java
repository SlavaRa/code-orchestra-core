package jetbrains.mps.baseLanguage.math.dataFlow;

/*Generated by MPS */

import jetbrains.mps.lang.dataFlow.DataFlowBuilder;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.lang.dataFlow.DataFlowBuilderContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class MatrixInitializer_DataFlow extends DataFlowBuilder {
  public MatrixInitializer_DataFlow() {
  }

  public void build(final IOperationContext operationContext, final DataFlowBuilderContext _context) {
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "expression", true));
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "rowsCount", true));
    _context.getBuilder().build((SNode) SLinkOperations.getTarget(_context.getNode(), "colsCount", true));
    _context.getBuilder().emitWrite(SLinkOperations.getTarget(_context.getNode(), "colIndex", true));
    _context.getBuilder().emitWrite(SLinkOperations.getTarget(_context.getNode(), "rowIndex", true));
  }
}
