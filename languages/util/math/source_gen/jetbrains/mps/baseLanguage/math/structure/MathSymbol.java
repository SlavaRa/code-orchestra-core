package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MathSymbol extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MathSymbol";
  public static final String CPR_OpName = "opName";
  public static final String VAR = "var";
  public static final String EXPRESSION = "expression";
  public static final String PRECONDITION = "precondition";
  public static final String UPPER_BOUND = "upperBound";

  public MathSymbol(SNode node) {
    super(node);
  }

  public AbstractIndex getVar() {
    return (AbstractIndex) this.getChild(AbstractIndex.class, MathSymbol.VAR);
  }

  public void setVar(AbstractIndex node) {
    super.setChild(MathSymbol.VAR, node);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, MathSymbol.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(MathSymbol.EXPRESSION, node);
  }

  public Expression getPrecondition() {
    return (Expression) this.getChild(Expression.class, MathSymbol.PRECONDITION);
  }

  public void setPrecondition(Expression node) {
    super.setChild(MathSymbol.PRECONDITION, node);
  }

  public Expression getUpperBound() {
    return (Expression) this.getChild(Expression.class, MathSymbol.UPPER_BOUND);
  }

  public void setUpperBound(Expression node) {
    super.setChild(MathSymbol.UPPER_BOUND, node);
  }

  public static MathSymbol newInstance(SModel sm, boolean init) {
    return (MathSymbol) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MathSymbol", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MathSymbol newInstance(SModel sm) {
    return MathSymbol.newInstance(sm, false);
  }
}
