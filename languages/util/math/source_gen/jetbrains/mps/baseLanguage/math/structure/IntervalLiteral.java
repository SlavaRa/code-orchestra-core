package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IntervalLiteral extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.IntervalLiteral";
  public static final String START_INCLUDED = "startIncluded";
  public static final String END_INCLUDED = "endIncluded";
  public static final String START = "start";
  public static final String END = "end";

  public IntervalLiteral(SNode node) {
    super(node);
  }

  public boolean getStartIncluded() {
    return this.getBooleanProperty(IntervalLiteral.START_INCLUDED);
  }

  public void setStartIncluded(boolean value) {
    this.setBooleanProperty(IntervalLiteral.START_INCLUDED, value);
  }

  public boolean getEndIncluded() {
    return this.getBooleanProperty(IntervalLiteral.END_INCLUDED);
  }

  public void setEndIncluded(boolean value) {
    this.setBooleanProperty(IntervalLiteral.END_INCLUDED, value);
  }

  public Expression getStart() {
    return (Expression) this.getChild(Expression.class, IntervalLiteral.START);
  }

  public void setStart(Expression node) {
    super.setChild(IntervalLiteral.START, node);
  }

  public Expression getEnd() {
    return (Expression) this.getChild(Expression.class, IntervalLiteral.END);
  }

  public void setEnd(Expression node) {
    super.setChild(IntervalLiteral.END, node);
  }

  public static IntervalLiteral newInstance(SModel sm, boolean init) {
    return (IntervalLiteral) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.IntervalLiteral", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IntervalLiteral newInstance(SModel sm) {
    return IntervalLiteral.newInstance(sm, false);
  }
}
