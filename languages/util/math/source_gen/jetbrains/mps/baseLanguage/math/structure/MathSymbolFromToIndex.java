package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MathSymbolFromToIndex extends AbstractIndex {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MathSymbolFromToIndex";
  public static final String FROM = "from";

  public MathSymbolFromToIndex(SNode node) {
    super(node);
  }

  public Expression getFrom() {
    return (Expression) this.getChild(Expression.class, MathSymbolFromToIndex.FROM);
  }

  public void setFrom(Expression node) {
    super.setChild(MathSymbolFromToIndex.FROM, node);
  }

  public static MathSymbolFromToIndex newInstance(SModel sm, boolean init) {
    return (MathSymbolFromToIndex) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MathSymbolFromToIndex", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MathSymbolFromToIndex newInstance(SModel sm) {
    return MathSymbolFromToIndex.newInstance(sm, false);
  }
}
