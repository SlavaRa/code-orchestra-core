package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MathSymbolIndex extends AbstractIndex {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MathSymbolIndex";
  public static final String ITERABLE = "iterable";

  public MathSymbolIndex(SNode node) {
    super(node);
  }

  public Expression getIterable() {
    return (Expression) this.getChild(Expression.class, MathSymbolIndex.ITERABLE);
  }

  public void setIterable(Expression node) {
    super.setChild(MathSymbolIndex.ITERABLE, node);
  }

  public static MathSymbolIndex newInstance(SModel sm, boolean init) {
    return (MathSymbolIndex) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MathSymbolIndex", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MathSymbolIndex newInstance(SModel sm) {
    return MathSymbolIndex.newInstance(sm, false);
  }
}
