package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MathSymbolIndexReference extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.MathSymbolIndexReference";
  public static final String INDEX_REF = "indexRef";

  public MathSymbolIndexReference(SNode node) {
    super(node);
  }

  public AbstractIndex getIndexRef() {
    return (AbstractIndex) this.getReferent(AbstractIndex.class, MathSymbolIndexReference.INDEX_REF);
  }

  public void setIndexRef(AbstractIndex node) {
    super.setReferent(MathSymbolIndexReference.INDEX_REF, node);
  }

  public static MathSymbolIndexReference newInstance(SModel sm, boolean init) {
    return (MathSymbolIndexReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.MathSymbolIndexReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MathSymbolIndexReference newInstance(SModel sm) {
    return MathSymbolIndexReference.newInstance(sm, false);
  }
}
