package jetbrains.mps.baseLanguage.math.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PowExpression extends Expression {
  public static final String concept = "jetbrains.mps.baseLanguage.math.structure.PowExpression";
  public static final String BASE = "base";
  public static final String EXPONENT = "exponent";

  public PowExpression(SNode node) {
    super(node);
  }

  public Expression getBase() {
    return (Expression) this.getChild(Expression.class, PowExpression.BASE);
  }

  public void setBase(Expression node) {
    super.setChild(PowExpression.BASE, node);
  }

  public Expression getExponent() {
    return (Expression) this.getChild(Expression.class, PowExpression.EXPONENT);
  }

  public void setExponent(Expression node) {
    super.setChild(PowExpression.EXPONENT, node);
  }

  public static PowExpression newInstance(SModel sm, boolean init) {
    return (PowExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.PowExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PowExpression newInstance(SModel sm) {
    return PowExpression.newInstance(sm, false);
  }
}
