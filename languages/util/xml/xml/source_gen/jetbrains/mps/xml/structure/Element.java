package jetbrains.mps.xml.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.xmlSchema.structure.ElementDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Element extends BaseElement {
  public static final String concept = "jetbrains.mps.xml.structure.Element";
  public static final String IS_EMPTY = "isEmpty";
  public static final String ELEMENT_DECLARATION = "elementDeclaration";

  public Element(SNode node) {
    super(node);
  }

  public boolean getIsEmpty() {
    return this.getBooleanProperty(Element.IS_EMPTY);
  }

  public void setIsEmpty(boolean value) {
    this.setBooleanProperty(Element.IS_EMPTY, value);
  }

  public ElementDeclaration getElementDeclaration() {
    return (ElementDeclaration) this.getReferent(ElementDeclaration.class, Element.ELEMENT_DECLARATION);
  }

  public void setElementDeclaration(ElementDeclaration node) {
    super.setReferent(Element.ELEMENT_DECLARATION, node);
  }

  public static Element newInstance(SModel sm, boolean init) {
    return (Element) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.xml.structure.Element", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Element newInstance(SModel sm) {
    return Element.newInstance(sm, false);
  }
}
