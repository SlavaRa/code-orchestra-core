package jetbrains.mps.xml.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.style.AttributeCalculator;
import java.awt.Color;
import jetbrains.mps.nodeEditor.MPSFonts;
import jetbrains.mps.nodeEditor.style.Padding;
import jetbrains.mps.nodeEditor.style.Measure;
import jetbrains.mps.nodeEditor.MPSColors;
import jetbrains.mps.baseLanguage.editor.BaseLanguageStyle_StyleSheet;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;

public class XmlStyle_StyleSheet {
  public static Style getXmlElement(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator<Color>() {
      public Color calculate(EditorCell cell) {
        return XmlStyle_StyleSheet._StyleParameter_QueryFunction_yh53wd_a0a((cell == null ?
          null :
          cell.getSNode()
        ), (cell == null ?
          null :
          cell.getEditorContext()
        ));
      }
    });
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    return style;
  }

  public static Style getXmlAttribute(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    style.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator<Color>() {
      public Color calculate(EditorCell cell) {
        return XmlStyle_StyleSheet._StyleParameter_QueryFunction_yh53wd_a2b((cell == null ?
          null :
          cell.getSNode()
        ), (cell == null ?
          null :
          cell.getEditorContext()
        ));
      }
    });
    return style;
  }

  public static Style getXmlEntity(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator<Color>() {
      public Color calculate(EditorCell cell) {
        return XmlStyle_StyleSheet._StyleParameter_QueryFunction_yh53wd_a0c((cell == null ?
          null :
          cell.getSNode()
        ), (cell == null ?
          null :
          cell.getEditorContext()
        ));
      }
    });
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    return style;
  }

  public static Style getXmlText(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.BOLD);
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.DARK_GREEN);
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    return style;
  }

  public static Style getXmlComplexText_Start(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    style.set(StyleAttributes.LAST_POSITION_ALLOWED, false);
    style.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator<Color>() {
      public Color calculate(EditorCell cell) {
        return XmlStyle_StyleSheet._StyleParameter_QueryFunction_yh53wd_a2e((cell == null ?
          null :
          cell.getSNode()
        ), (cell == null ?
          null :
          cell.getEditorContext()
        ));
      }
    });
    return style;
  }

  public static Style getXmlComplexText_End(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.TEXT_COLOR, new AttributeCalculator<Color>() {
      public Color calculate(EditorCell cell) {
        return XmlStyle_StyleSheet._StyleParameter_QueryFunction_yh53wd_a0f((cell == null ?
          null :
          cell.getSNode()
        ), (cell == null ?
          null :
          cell.getEditorContext()
        ));
      }
    });
    return style;
  }

  public static Style getXmlEmptyCell(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getEmptyCell(null));
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.0, Measure.SPACES));
    return style;
  }

  public static Style getXmlOperator(final EditorCell cell) {
    Style style = new Style(cell);
    style.set(StyleAttributes.FONT_STYLE, MPSFonts.PLAIN);
    style.set(StyleAttributes.PADDING_LEFT, new Padding(0.3, Measure.SPACES));
    style.set(StyleAttributes.PADDING_RIGHT, new Padding(0.3, Measure.SPACES));
    style.set(StyleAttributes.SELECTABLE, false);
    return style;
  }

  public static Style getXmlOpenQuote(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getLeftParen(null));
    return style;
  }

  public static Style getXmlCloseQuote(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getRightParen(null));
    return style;
  }

  public static Style getXmlOpenParen(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getLeftParen(null));
    style.set(StyleAttributes.PUNCTUATION_RIGHT, true);
    return style;
  }

  public static Style getXmlCloseParen(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getRightParen(null));
    style.set(StyleAttributes.PUNCTUATION_LEFT, true);
    return style;
  }

  public static Style getXmlCLOpenParen(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(XmlStyle_StyleSheet.getXmlOpenParen(null));
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
    return style;
  }

  public static Style getXmlCLCloseParen(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(XmlStyle_StyleSheet.getXmlCloseParen(null));
    style.set(StyleAttributes.TEXT_COLOR, MPSColors.lightGray);
    return style;
  }

  public static Style getXmlOpenBrace(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getLeftBrace(null));
    return style;
  }

  public static Style getXmlCloseBrace(final EditorCell cell) {
    Style style = new Style(cell);
    style.putAll(BaseLanguageStyle_StyleSheet.getRightBrace(null));
    return style;
  }

  private static Color _StyleParameter_QueryFunction_yh53wd_a0a(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  private static Color _StyleParameter_QueryFunction_yh53wd_a2b(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  private static Color _StyleParameter_QueryFunction_yh53wd_a0c(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  private static Color _StyleParameter_QueryFunction_yh53wd_a2e(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }

  private static Color _StyleParameter_QueryFunction_yh53wd_a0f(SNode node, EditorContext editorContext) {
    return new Color(134, 114, 93);
  }
}
