package jetbrains.mps.xml.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class MakeElementEmpty_Intention extends BaseIntention implements Intention {
  public MakeElementEmpty_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.xml.structure.Element";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Make Element Empty";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    SNode contentList = SLinkOperations.getTarget(node, "contentList", true);
    List<SNode> contents = SLinkOperations.getTargets(contentList, "content", true);
    int count = ListSequence.fromList(contents).count();
    return !(SPropertyOperations.getBoolean(node, "isEmpty")) && (count == 0 || count == 1 && SNodeOperations.isInstanceOf(ListSequence.fromList(contents).first(), "jetbrains.mps.xml.structure.Text") && SPropertyOperations.hasValue(SNodeOperations.cast(ListSequence.fromList(contents).first(), "jetbrains.mps.xml.structure.Text"), "text", null));
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SPropertyOperations.set(node, "isEmpty", "" + (true));
  }

  public String getLocationString() {
    return "jetbrains.mps.xml.intentions";
  }
}
