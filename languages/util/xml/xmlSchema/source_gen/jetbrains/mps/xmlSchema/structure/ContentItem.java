package jetbrains.mps.xmlSchema.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ContentItem extends BaseConcept {
  public static final String concept = "jetbrains.mps.xmlSchema.structure.ContentItem";
  public static final String COMPLEX_TYPE_REFERENCE = "complexTypeReference";

  public ContentItem(SNode node) {
    super(node);
  }

  public ComplexTypeReference getComplexTypeReference() {
    return (ComplexTypeReference) this.getChild(ComplexTypeReference.class, ContentItem.COMPLEX_TYPE_REFERENCE);
  }

  public void setComplexTypeReference(ComplexTypeReference node) {
    super.setChild(ContentItem.COMPLEX_TYPE_REFERENCE, node);
  }

  public static ContentItem newInstance(SModel sm, boolean init) {
    return (ContentItem) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.xmlSchema.structure.ContentItem", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ContentItem newInstance(SModel sm) {
    return ContentItem.newInstance(sm, false);
  }
}
