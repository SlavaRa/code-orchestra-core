package jetbrains.mps.xmlSchema.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SchemaComment extends BaseConcept {
  public static final String concept = "jetbrains.mps.xmlSchema.structure.SchemaComment";
  public static final String TEXT = "text";

  public SchemaComment(SNode node) {
    super(node);
  }

  public int getTextsCount() {
    return this.getChildCount(SchemaComment.TEXT);
  }

  public Iterator<TextLine> texts() {
    return this.children(TextLine.class, SchemaComment.TEXT);
  }

  public List<TextLine> getTexts() {
    return this.getChildren(TextLine.class, SchemaComment.TEXT);
  }

  public void addText(TextLine node) {
    this.addChild(SchemaComment.TEXT, node);
  }

  public void insertText(TextLine prev, TextLine node) {
    this.insertChild(prev, SchemaComment.TEXT, node);
  }

  public static SchemaComment newInstance(SModel sm, boolean init) {
    return (SchemaComment) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.xmlSchema.structure.SchemaComment", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SchemaComment newInstance(SModel sm) {
    return SchemaComment.newInstance(sm, false);
  }
}
