package jetbrains.mps.xmlQuery.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.xmlSchema.structure.Schema;
import jetbrains.mps.xmlSchema.structure.ComplexType;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class XMLElementType extends Type {
  public static final String concept = "jetbrains.mps.xmlQuery.structure.XMLElementType";
  public static final String SCHEMA = "schema";
  public static final String COMPLEX_TYPE = "complexType";

  public XMLElementType(SNode node) {
    super(node);
  }

  public Schema getSchema() {
    return (Schema) this.getReferent(Schema.class, XMLElementType.SCHEMA);
  }

  public void setSchema(Schema node) {
    super.setReferent(XMLElementType.SCHEMA, node);
  }

  public ComplexType getComplexType() {
    return (ComplexType) this.getReferent(ComplexType.class, XMLElementType.COMPLEX_TYPE);
  }

  public void setComplexType(ComplexType node) {
    super.setReferent(XMLElementType.COMPLEX_TYPE, node);
  }

  public static XMLElementType newInstance(SModel sm, boolean init) {
    return (XMLElementType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.xmlQuery.structure.XMLElementType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static XMLElementType newInstance(SModel sm) {
    return XMLElementType.newInstance(sm, false);
  }
}
