package jetbrains.mps.bash.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.constraints.CanBeAParentContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.bash.behavior.ExternalCommandCall_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ExternalCommandCall_Constraints extends BaseConstraintsDescriptor {
  private static SNodePointer canBeParentBreakingPoint = new SNodePointer("r:32c4fb44-9e66-4976-aa43-e37da5fe27dd(jetbrains.mps.bash.constraints)", "3147078024753427277");

  public ExternalCommandCall_Constraints() {
    super("jetbrains.mps.bash.structure.ExternalCommandCall");
  }

  @Override
  public boolean hasOwnCanBeParentMethod() {
    return true;
  }

  @Override
  public boolean canBeParent(IOperationContext operationContext, SNode node, SNode node1, SNode node2, @Nullable CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAParent(operationContext, new CanBeAParentContext(node, node1, node2));

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeParentBreakingPoint);
    }

    return result;
  }

  public static boolean static_canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {
    if (SConceptOperations.isExactly(_context.getChildConcept(), "jetbrains.mps.bash.structure.OptionSetReference")) {
      return !(ExternalCommandCall_Behavior.call_isAllOptionsUsed_7803330421063829865(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.bash.structure.ExternalCommandCall")));
    }
    if (SConceptOperations.isExactly(_context.getChildConcept(), "jetbrains.mps.bash.structure.ArgumentListReference")) {
      return ExternalCommandCall_Behavior.call_isArgsListDefined_3147078024755335958(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.bash.structure.ExternalCommandCall"));
    }
    return true;
  }
}
