package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ElifCommand extends BaseConcept {
  public static final String concept = "jetbrains.mps.bash.structure.ElifCommand";
  public static final String TEST_COMMAND = "testCommand";
  public static final String COMMANDS = "commands";

  public ElifCommand(SNode node) {
    super(node);
  }

  public AbstractCommand getTestCommand() {
    return (AbstractCommand) this.getChild(AbstractCommand.class, ElifCommand.TEST_COMMAND);
  }

  public void setTestCommand(AbstractCommand node) {
    super.setChild(ElifCommand.TEST_COMMAND, node);
  }

  public InputLines getCommands() {
    return (InputLines) this.getChild(InputLines.class, ElifCommand.COMMANDS);
  }

  public void setCommands(InputLines node) {
    super.setChild(ElifCommand.COMMANDS, node);
  }

  public static ElifCommand newInstance(SModel sm, boolean init) {
    return (ElifCommand) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.ElifCommand", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ElifCommand newInstance(SModel sm) {
    return ElifCommand.newInstance(sm, false);
  }
}
