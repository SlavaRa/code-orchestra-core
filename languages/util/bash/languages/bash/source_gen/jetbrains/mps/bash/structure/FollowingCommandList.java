package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FollowingCommandList extends AbstractFollowingCommandList {
  public static final String concept = "jetbrains.mps.bash.structure.FollowingCommandList";
  public static final String CPR_Operator = "operator";
  public static final String BASE_COMMAND = "baseCommand";

  public FollowingCommandList(SNode node) {
    super(node);
  }

  public HeadCommandList getBaseCommand() {
    return (HeadCommandList) this.getChild(HeadCommandList.class, FollowingCommandList.BASE_COMMAND);
  }

  public void setBaseCommand(HeadCommandList node) {
    super.setChild(FollowingCommandList.BASE_COMMAND, node);
  }

  public static FollowingCommandList newInstance(SModel sm, boolean init) {
    return (FollowingCommandList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.FollowingCommandList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FollowingCommandList newInstance(SModel sm) {
    return FollowingCommandList.newInstance(sm, false);
  }
}
