package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FollowingPipeline extends BaseConcept {
  public static final String concept = "jetbrains.mps.bash.structure.FollowingPipeline";
  public static final String CPR_Pypetype = "pypetype";
  public static final String BASE_PIPELINE = "basePipeline";

  public FollowingPipeline(SNode node) {
    super(node);
  }

  public HeadPipeline getBasePipeline() {
    return (HeadPipeline) this.getChild(HeadPipeline.class, FollowingPipeline.BASE_PIPELINE);
  }

  public void setBasePipeline(HeadPipeline node) {
    super.setChild(FollowingPipeline.BASE_PIPELINE, node);
  }

  public static FollowingPipeline newInstance(SModel sm, boolean init) {
    return (FollowingPipeline) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.FollowingPipeline", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FollowingPipeline newInstance(SModel sm) {
    return FollowingPipeline.newInstance(sm, false);
  }
}
