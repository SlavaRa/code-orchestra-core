package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class WhileLoopCommand extends AbstractLoopCommand {
  public static final String concept = "jetbrains.mps.bash.structure.WhileLoopCommand";
  public static final String TEST_COMMAND = "testCommand";

  public WhileLoopCommand(SNode node) {
    super(node);
  }

  public AbstractCommand getTestCommand() {
    return (AbstractCommand) this.getChild(AbstractCommand.class, WhileLoopCommand.TEST_COMMAND);
  }

  public void setTestCommand(AbstractCommand node) {
    super.setChild(WhileLoopCommand.TEST_COMMAND, node);
  }

  public static WhileLoopCommand newInstance(SModel sm, boolean init) {
    return (WhileLoopCommand) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.WhileLoopCommand", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WhileLoopCommand newInstance(SModel sm) {
    return WhileLoopCommand.newInstance(sm, false);
  }
}
