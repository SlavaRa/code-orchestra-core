package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StringConditionalExpression extends ConditionalExpression {
  public static final String concept = "jetbrains.mps.bash.structure.StringConditionalExpression";
  public static final String STRING = "string";

  public StringConditionalExpression(SNode node) {
    super(node);
  }

  public GeneralizedWord getString() {
    return (GeneralizedWord) this.getChild(GeneralizedWord.class, StringConditionalExpression.STRING);
  }

  public void setString(GeneralizedWord node) {
    super.setChild(StringConditionalExpression.STRING, node);
  }

  public static StringConditionalExpression newInstance(SModel sm, boolean init) {
    return (StringConditionalExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.StringConditionalExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StringConditionalExpression newInstance(SModel sm) {
    return StringConditionalExpression.newInstance(sm, false);
  }
}
