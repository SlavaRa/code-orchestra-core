package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FreeCommand extends AbstractCommand {
  public static final String concept = "jetbrains.mps.bash.structure.FreeCommand";
  public static final String TRANSLATED_WORD = "translatedWord";

  public FreeCommand(SNode node) {
    super(node);
  }

  public int getTranslatedWordsCount() {
    return this.getChildCount(FreeCommand.TRANSLATED_WORD);
  }

  public Iterator<GeneralizedWord> translatedWords() {
    return this.children(GeneralizedWord.class, FreeCommand.TRANSLATED_WORD);
  }

  public List<GeneralizedWord> getTranslatedWords() {
    return this.getChildren(GeneralizedWord.class, FreeCommand.TRANSLATED_WORD);
  }

  public void addTranslatedWord(GeneralizedWord node) {
    this.addChild(FreeCommand.TRANSLATED_WORD, node);
  }

  public void insertTranslatedWord(GeneralizedWord prev, GeneralizedWord node) {
    this.insertChild(prev, FreeCommand.TRANSLATED_WORD, node);
  }

  public static FreeCommand newInstance(SModel sm, boolean init) {
    return (FreeCommand) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.FreeCommand", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FreeCommand newInstance(SModel sm) {
    return FreeCommand.newInstance(sm, false);
  }
}
