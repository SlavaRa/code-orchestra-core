package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class HeadCommandList extends BaseConcept {
  public static final String concept = "jetbrains.mps.bash.structure.HeadCommandList";
  public static final String BASE = "base";
  public static final String FOLLOWING = "following";

  public HeadCommandList(SNode node) {
    super(node);
  }

  public HeadPipeline getBase() {
    return (HeadPipeline) this.getChild(HeadPipeline.class, HeadCommandList.BASE);
  }

  public void setBase(HeadPipeline node) {
    super.setChild(HeadCommandList.BASE, node);
  }

  public FollowingCommandList getFollowing() {
    return (FollowingCommandList) this.getChild(FollowingCommandList.class, HeadCommandList.FOLLOWING);
  }

  public void setFollowing(FollowingCommandList node) {
    super.setChild(HeadCommandList.FOLLOWING, node);
  }

  public static HeadCommandList newInstance(SModel sm, boolean init) {
    return (HeadCommandList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.HeadCommandList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static HeadCommandList newInstance(SModel sm) {
    return HeadCommandList.newInstance(sm, false);
  }
}
