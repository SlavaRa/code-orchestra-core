package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class HeadPipeline extends BaseConcept {
  public static final String concept = "jetbrains.mps.bash.structure.HeadPipeline";
  public static final String COMMAND = "command";
  public static final String FOLLOWING = "following";

  public HeadPipeline(SNode node) {
    super(node);
  }

  public Command getCommand() {
    return (Command) this.getChild(Command.class, HeadPipeline.COMMAND);
  }

  public void setCommand(Command node) {
    super.setChild(HeadPipeline.COMMAND, node);
  }

  public FollowingPipeline getFollowing() {
    return (FollowingPipeline) this.getChild(FollowingPipeline.class, HeadPipeline.FOLLOWING);
  }

  public void setFollowing(FollowingPipeline node) {
    super.setChild(HeadPipeline.FOLLOWING, node);
  }

  public static HeadPipeline newInstance(SModel sm, boolean init) {
    return (HeadPipeline) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.HeadPipeline", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static HeadPipeline newInstance(SModel sm) {
    return HeadPipeline.newInstance(sm, false);
  }
}
