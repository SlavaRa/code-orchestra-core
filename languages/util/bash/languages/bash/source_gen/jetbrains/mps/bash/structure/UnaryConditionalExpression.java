package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class UnaryConditionalExpression extends ConditionalExpression {
  public static final String concept = "jetbrains.mps.bash.structure.UnaryConditionalExpression";
  public static final String CPR_Op = "op";
  public static final String WORD = "word";

  public UnaryConditionalExpression(SNode node) {
    super(node);
  }

  public GeneralizedWord getWord() {
    return (GeneralizedWord) this.getChild(GeneralizedWord.class, UnaryConditionalExpression.WORD);
  }

  public void setWord(GeneralizedWord node) {
    super.setChild(UnaryConditionalExpression.WORD, node);
  }

  public static UnaryConditionalExpression newInstance(SModel sm, boolean init) {
    return (UnaryConditionalExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.UnaryConditionalExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static UnaryConditionalExpression newInstance(SModel sm) {
    return UnaryConditionalExpression.newInstance(sm, false);
  }
}
