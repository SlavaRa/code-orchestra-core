package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GeneralizedWord extends BaseConcept {
  public static final String concept = "jetbrains.mps.bash.structure.GeneralizedWord";
  public static final String UNITS = "units";

  public GeneralizedWord(SNode node) {
    super(node);
  }

  public int getUnitsesCount() {
    return this.getChildCount(GeneralizedWord.UNITS);
  }

  public Iterator<IGeneralizedWordUnit> unitses() {
    return this.children(IGeneralizedWordUnit.class, GeneralizedWord.UNITS);
  }

  public List<IGeneralizedWordUnit> getUnitses() {
    return this.getChildren(IGeneralizedWordUnit.class, GeneralizedWord.UNITS);
  }

  public void addUnits(IGeneralizedWordUnit node) {
    this.addChild(GeneralizedWord.UNITS, node);
  }

  public void insertUnits(IGeneralizedWordUnit prev, IGeneralizedWordUnit node) {
    this.insertChild(prev, GeneralizedWord.UNITS, node);
  }

  public static GeneralizedWord newInstance(SModel sm, boolean init) {
    return (GeneralizedWord) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.GeneralizedWord", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GeneralizedWord newInstance(SModel sm) {
    return GeneralizedWord.newInstance(sm, false);
  }
}
