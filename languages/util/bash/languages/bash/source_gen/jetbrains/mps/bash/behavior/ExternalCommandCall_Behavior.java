package jetbrains.mps.bash.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class ExternalCommandCall_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> call_getUsedOptions_7803330421062325317(SNode thisNode) {
    List<SNode> result = new ArrayList<SNode>();
    for (SNode ref : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "refToOptions", true))) {
      if (SNodeOperations.isInstanceOf(ref, "jetbrains.mps.bash.structure.OptionSetReference")) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(OptionSetReference_Behavior.call_getUsedSymbols_7803330421062325062(SNodeOperations.cast(ref, "jetbrains.mps.bash.structure.OptionSetReference"))));
      }
    }
    return result;
  }

  public static List<SNode> call_getAvailableOptions_7803330421062325454(SNode thisNode) {
    List<SNode> result = ExternalCommandDeclaration_Behavior.call_getOptions_3263637656468511424(SLinkOperations.getTarget(thisNode, "declaration", false));
    ListSequence.fromList(result).removeSequence(ListSequence.fromList(ExternalCommandCall_Behavior.call_getUsedOptions_7803330421062325317(thisNode)));
    return result;
  }

  public static boolean call_isAllOptionsUsed_7803330421063829865(SNode thisNode) {
    return ListSequence.fromList(ExternalCommandCall_Behavior.call_getAvailableOptions_7803330421062325454(thisNode)).isEmpty();
  }

  public static boolean call_isArgsListDefined_3147078024755335958(SNode thisNode) {
    for (SNode opt : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode, "declaration", false), "optionDeclaration", true))) {
      if (SNodeOperations.isInstanceOf(opt, "jetbrains.mps.bash.structure.ArgumentList")) {
        return true;
      }
    }
    return false;
  }

  public static List<SNode> call_getUnusedArguments_3263637656466355284(SNode thisNode) {
    List<SNode> args = ExternalCommandDeclaration_Behavior.call_getArguments_3263637656467504997(SLinkOperations.getTarget(thisNode, "declaration", false));
    for (SNode ref : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "refToOptions", true))) {
      if (SNodeOperations.isInstanceOf(ref, "jetbrains.mps.bash.structure.ArgumentReference")) {
        ListSequence.fromList(args).removeElement(SLinkOperations.getTarget(SNodeOperations.cast(ref, "jetbrains.mps.bash.structure.ArgumentReference"), "arg", false));
      }
    }
    return args;
  }

  public static List<SNode> call_getUnusedOptionsWithParam_3263637656468078237(SNode thisNode) {
    List<SNode> args = ExternalCommandDeclaration_Behavior.call_getOptionsWithParam_3263637656468078156(SLinkOperations.getTarget(thisNode, "declaration", false));
    for (SNode ref : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "refToOptions", true))) {
      if (SNodeOperations.isInstanceOf(ref, "jetbrains.mps.bash.structure.OptionWithParamReference")) {
        ListSequence.fromList(args).removeElement(SLinkOperations.getTarget(SNodeOperations.cast(ref, "jetbrains.mps.bash.structure.OptionWithParamReference"), "optionWithParam", false));
      }
    }
    return ExternalCommandDeclaration_Behavior.call_getOptionsWithParam_3263637656468078156(SLinkOperations.getTarget(thisNode, "declaration", false));
  }
}
