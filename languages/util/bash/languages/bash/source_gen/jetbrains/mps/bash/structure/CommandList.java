package jetbrains.mps.bash.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CommandList extends InputLine {
  public static final String concept = "jetbrains.mps.bash.structure.CommandList";
  public static final String HEAD = "head";
  public static final String TERMINATOR = "terminator";
  public static final String COMMENT = "comment";

  public CommandList(SNode node) {
    super(node);
  }

  public HeadCommandList getHead() {
    return (HeadCommandList) this.getChild(HeadCommandList.class, CommandList.HEAD);
  }

  public void setHead(HeadCommandList node) {
    super.setChild(CommandList.HEAD, node);
  }

  public CommandTerminator getTerminator() {
    return (CommandTerminator) this.getChild(CommandTerminator.class, CommandList.TERMINATOR);
  }

  public void setTerminator(CommandTerminator node) {
    super.setChild(CommandList.TERMINATOR, node);
  }

  public CommentedText getComment() {
    return (CommentedText) this.getChild(CommentedText.class, CommandList.COMMENT);
  }

  public void setComment(CommentedText node) {
    super.setChild(CommandList.COMMENT, node);
  }

  public static CommandList newInstance(SModel sm, boolean init) {
    return (CommandList) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.bash.structure.CommandList", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CommandList newInstance(SModel sm) {
    return CommandList.newInstance(sm, false);
  }
}
