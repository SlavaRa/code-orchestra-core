package jetbrains.mps.baseLanguage.extensionMethods.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TypeExtension extends BaseExtensionMethodContainer {
  public static final String concept = "jetbrains.mps.baseLanguage.extensionMethods.structure.TypeExtension";
  public static final String TYPE = "type";

  public TypeExtension(SNode node) {
    super(node);
  }

  public Type getType() {
    return (Type) this.getChild(Type.class, TypeExtension.TYPE);
  }

  public void setType(Type node) {
    super.setChild(TypeExtension.TYPE, node);
  }

  public static TypeExtension newInstance(SModel sm, boolean init) {
    return (TypeExtension) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.extensionMethods.structure.TypeExtension", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TypeExtension newInstance(SModel sm) {
    return TypeExtension.newInstance(sm, false);
  }
}
