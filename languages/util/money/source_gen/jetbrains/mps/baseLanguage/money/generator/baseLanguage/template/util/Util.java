package jetbrains.mps.baseLanguage.money.generator.baseLanguage.template.util;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Util {
  public static boolean isPlusMinusExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, new Util.QuotationClass_sd8x_a1a0a2a0_0().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, new Util.QuotationClass_sd8x_a1a0a2a0().createNode())) {
      return true;
    }
    return false;
  }

  public static boolean isMulDivExpressionMoneyExpression(SNode expr) {
    SNode rtype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "rightExpression", true));
    SNode ltype = TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(expr, "leftExpression", true));
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(ltype, new Util.QuotationClass_sd8x_a1a0a2a1_0().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(rtype, new Util.QuotationClass_sd8x_a1a0a2a1().createNode())) {
      return true;
    }
    return false;
  }

  public static class QuotationClass_sd8x_a1a0a2a0 {
    public QuotationClass_sd8x_a1a0a2a0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_sd8x_a1a0a2a0_0 {
    public QuotationClass_sd8x_a1a0a2a0_0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_sd8x_a1a0a2a1 {
    public QuotationClass_sd8x_a1a0a2a1() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }

  public static class QuotationClass_sd8x_a1a0a2a1_0 {
    public QuotationClass_sd8x_a1a0a2a1_0() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.money.structure.MoneyType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
