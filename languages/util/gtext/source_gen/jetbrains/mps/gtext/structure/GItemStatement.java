package jetbrains.mps.gtext.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GItemStatement extends Statement {
  public static final String concept = "jetbrains.mps.gtext.structure.GItemStatement";
  public static final String ITEM = "item";

  public GItemStatement(SNode node) {
    super(node);
  }

  public int getItemsCount() {
    return this.getChildCount(GItemStatement.ITEM);
  }

  public Iterator<GItem> items() {
    return this.children(GItem.class, GItemStatement.ITEM);
  }

  public List<GItem> getItems() {
    return this.getChildren(GItem.class, GItemStatement.ITEM);
  }

  public void addItem(GItem node) {
    this.addChild(GItemStatement.ITEM, node);
  }

  public void insertItem(GItem prev, GItem node) {
    this.insertChild(prev, GItemStatement.ITEM, node);
  }

  public static GItemStatement newInstance(SModel sm, boolean init) {
    return (GItemStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.gtext.structure.GItemStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GItemStatement newInstance(SModel sm) {
    return GItemStatement.newInstance(sm, false);
  }
}
