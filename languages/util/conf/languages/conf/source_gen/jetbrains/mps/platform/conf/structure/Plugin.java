package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.lang.core.structure.IResolveInfo;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Plugin extends IdeaPluginRoot implements IConfigurationFragment, INamedConcept, IResolveInfo {
  public static final String concept = "jetbrains.mps.platform.conf.structure.Plugin";
  public static final String ID = "id";
  public static final String VERSION = "version";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String NAME = "name";
  public static final String RESOLVE_INFO = "resolveInfo";
  public static final String VENDOR = "vendor";
  public static final String IDEA_VERSION = "ideaVersion";
  public static final String HELPSET = "helpset";
  public static final String DEPENDS = "depends";
  public static final String DETAILS = "details";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public Plugin(SNode node) {
    super(node);
  }

  public String getId() {
    return this.getProperty(Plugin.ID);
  }

  public void setId(String value) {
    this.setProperty(Plugin.ID, value);
  }

  public String getVersion() {
    return this.getProperty(Plugin.VERSION);
  }

  public void setVersion(String value) {
    this.setProperty(Plugin.VERSION, value);
  }

  public String getShortDescription() {
    return this.getProperty(Plugin.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Plugin.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Plugin.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Plugin.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Plugin.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Plugin.VIRTUAL_PACKAGE, value);
  }

  public String getName() {
    return this.getProperty(Plugin.NAME);
  }

  public void setName(String value) {
    this.setProperty(Plugin.NAME, value);
  }

  public String getResolveInfo() {
    return this.getProperty(Plugin.RESOLVE_INFO);
  }

  public void setResolveInfo(String value) {
    this.setProperty(Plugin.RESOLVE_INFO, value);
  }

  public PluginVendor getVendor() {
    return (PluginVendor) this.getChild(PluginVendor.class, Plugin.VENDOR);
  }

  public void setVendor(PluginVendor node) {
    super.setChild(Plugin.VENDOR, node);
  }

  public IdeaVersion getIdeaVersion() {
    return (IdeaVersion) this.getChild(IdeaVersion.class, Plugin.IDEA_VERSION);
  }

  public void setIdeaVersion(IdeaVersion node) {
    super.setChild(Plugin.IDEA_VERSION, node);
  }

  public PluginHelpset getHelpset() {
    return (PluginHelpset) this.getChild(PluginHelpset.class, Plugin.HELPSET);
  }

  public void setHelpset(PluginHelpset node) {
    super.setChild(Plugin.HELPSET, node);
  }

  public int getDependsesCount() {
    return this.getChildCount(Plugin.DEPENDS);
  }

  public Iterator<PluginDependency> dependses() {
    return this.children(PluginDependency.class, Plugin.DEPENDS);
  }

  public List<PluginDependency> getDependses() {
    return this.getChildren(PluginDependency.class, Plugin.DEPENDS);
  }

  public void addDepends(PluginDependency node) {
    this.addChild(Plugin.DEPENDS, node);
  }

  public void insertDepends(PluginDependency prev, PluginDependency node) {
    this.insertChild(prev, Plugin.DEPENDS, node);
  }

  public int getDetailsesCount() {
    return this.getChildCount(Plugin.DETAILS);
  }

  public Iterator<PluginDetails> detailses() {
    return this.children(PluginDetails.class, Plugin.DETAILS);
  }

  public List<PluginDetails> getDetailses() {
    return this.getChildren(PluginDetails.class, Plugin.DETAILS);
  }

  public void addDetails(PluginDetails node) {
    this.addChild(Plugin.DETAILS, node);
  }

  public void insertDetails(PluginDetails prev, PluginDetails node) {
    this.insertChild(prev, Plugin.DETAILS, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(Plugin.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, Plugin.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, Plugin.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(Plugin.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, Plugin.SMODEL_ATTRIBUTE, node);
  }

  public static Plugin newInstance(SModel sm, boolean init) {
    return (Plugin) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.Plugin", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Plugin newInstance(SModel sm) {
    return Plugin.newInstance(sm, false);
  }
}
