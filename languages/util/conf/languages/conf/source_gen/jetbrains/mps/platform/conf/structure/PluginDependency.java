package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PluginDependency extends BaseConcept {
  public static final String concept = "jetbrains.mps.platform.conf.structure.PluginDependency";
  public static final String CONFIG = "config";
  public static final String OPTIONAL = "optional";
  public static final String PLUGIN = "plugin";

  public PluginDependency(SNode node) {
    super(node);
  }

  public String getConfig() {
    return this.getProperty(PluginDependency.CONFIG);
  }

  public void setConfig(String value) {
    this.setProperty(PluginDependency.CONFIG, value);
  }

  public boolean getOptional() {
    return this.getBooleanProperty(PluginDependency.OPTIONAL);
  }

  public void setOptional(boolean value) {
    this.setBooleanProperty(PluginDependency.OPTIONAL, value);
  }

  public Plugin getPlugin() {
    return (Plugin) this.getReferent(Plugin.class, PluginDependency.PLUGIN);
  }

  public void setPlugin(Plugin node) {
    super.setReferent(PluginDependency.PLUGIN, node);
  }

  public static PluginDependency newInstance(SModel sm, boolean init) {
    return (PluginDependency) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.PluginDependency", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PluginDependency newInstance(SModel sm) {
    return PluginDependency.newInstance(sm, false);
  }
}
