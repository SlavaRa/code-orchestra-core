package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BeanExtension extends Extension {
  public static final String concept = "jetbrains.mps.platform.conf.structure.BeanExtension";
  public static final String ATTRIBUTE = "attribute";

  public BeanExtension(SNode node) {
    super(node);
  }

  public BeanExtensionPoint getBeanExtensionPoint() {
    return this.ensureAdapter(BeanExtensionPoint.class, "extensionPoint", this.getExtensionPoint());
  }

  public void setBeanExtensionPoint(BeanExtensionPoint node) {
    this.setExtensionPoint(node);
  }

  public int getAttributesCount() {
    return this.getChildCount(BeanExtension.ATTRIBUTE);
  }

  public Iterator<BeanExtensionAttribute> attributes() {
    return this.children(BeanExtensionAttribute.class, BeanExtension.ATTRIBUTE);
  }

  public List<BeanExtensionAttribute> getAttributes() {
    return this.getChildren(BeanExtensionAttribute.class, BeanExtension.ATTRIBUTE);
  }

  public void addAttribute(BeanExtensionAttribute node) {
    this.addChild(BeanExtension.ATTRIBUTE, node);
  }

  public void insertAttribute(BeanExtensionAttribute prev, BeanExtensionAttribute node) {
    this.insertChild(prev, BeanExtension.ATTRIBUTE, node);
  }

  public static BeanExtension newInstance(SModel sm, boolean init) {
    return (BeanExtension) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.BeanExtension", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BeanExtension newInstance(SModel sm) {
    return BeanExtension.newInstance(sm, false);
  }
}
