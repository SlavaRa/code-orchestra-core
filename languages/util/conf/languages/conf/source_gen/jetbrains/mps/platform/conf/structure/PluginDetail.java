package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum PluginDetail {
  description("description", "description"),
  changeNotes("change-notes", "changeNotes"),
  resourceBundle("resource-bundle", "resourceBundle"),
  category("category", "category");

  private String myName;
  private String myValue;

  PluginDetail(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<PluginDetail> getConstants() {
    List<PluginDetail> list = ListSequence.fromList(new LinkedList<PluginDetail>());
    ListSequence.fromList(list).addElement(PluginDetail.description);
    ListSequence.fromList(list).addElement(PluginDetail.changeNotes);
    ListSequence.fromList(list).addElement(PluginDetail.resourceBundle);
    ListSequence.fromList(list).addElement(PluginDetail.category);
    return list;
  }

  public static PluginDetail getDefault() {
    return PluginDetail.description;
  }

  public static PluginDetail parseValue(String value) {
    if (value == null) {
      return PluginDetail.getDefault();
    }
    if (value.equals(PluginDetail.description.getValueAsString())) {
      return PluginDetail.description;
    }
    if (value.equals(PluginDetail.changeNotes.getValueAsString())) {
      return PluginDetail.changeNotes;
    }
    if (value.equals(PluginDetail.resourceBundle.getValueAsString())) {
      return PluginDetail.resourceBundle;
    }
    if (value.equals(PluginDetail.category.getValueAsString())) {
      return PluginDetail.category;
    }
    return PluginDetail.getDefault();
  }
}
