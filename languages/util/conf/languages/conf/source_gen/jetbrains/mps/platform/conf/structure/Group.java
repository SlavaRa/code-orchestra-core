package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ClassConcept;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Group extends AbstractAction {
  public static final String concept = "jetbrains.mps.platform.conf.structure.Group";
  public static final String GROUP_CLASS = "groupClass";
  public static final String ACTION_ITEM = "actionItem";

  public Group(SNode node) {
    super(node);
  }

  public ClassConcept getGroupClass() {
    return (ClassConcept) this.getReferent(ClassConcept.class, Group.GROUP_CLASS);
  }

  public void setGroupClass(ClassConcept node) {
    super.setReferent(Group.GROUP_CLASS, node);
  }

  public int getActionItemsCount() {
    return this.getChildCount(Group.ACTION_ITEM);
  }

  public Iterator<IActionItem> actionItems() {
    return this.children(IActionItem.class, Group.ACTION_ITEM);
  }

  public List<IActionItem> getActionItems() {
    return this.getChildren(IActionItem.class, Group.ACTION_ITEM);
  }

  public void addActionItem(IActionItem node) {
    this.addChild(Group.ACTION_ITEM, node);
  }

  public void insertActionItem(IActionItem prev, IActionItem node) {
    this.insertChild(prev, Group.ACTION_ITEM, node);
  }

  public static Group newInstance(SModel sm, boolean init) {
    return (Group) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.Group", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Group newInstance(SModel sm) {
    return Group.newInstance(sm, false);
  }
}
