package jetbrains.mps.platform.conf.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IdeaVersion extends BaseConcept {
  public static final String concept = "jetbrains.mps.platform.conf.structure.IdeaVersion";
  public static final String SINCE_BUILD = "sinceBuild";
  public static final String UNTIL_BUILD = "untilBuild";

  public IdeaVersion(SNode node) {
    super(node);
  }

  public String getSinceBuild() {
    return this.getProperty(IdeaVersion.SINCE_BUILD);
  }

  public void setSinceBuild(String value) {
    this.setProperty(IdeaVersion.SINCE_BUILD, value);
  }

  public String getUntilBuild() {
    return this.getProperty(IdeaVersion.UNTIL_BUILD);
  }

  public void setUntilBuild(String value) {
    this.setProperty(IdeaVersion.UNTIL_BUILD, value);
  }

  public static IdeaVersion newInstance(SModel sm, boolean init) {
    return (IdeaVersion) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.platform.conf.structure.IdeaVersion", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IdeaVersion newInstance(SModel sm) {
    return IdeaVersion.newInstance(sm, false);
  }
}
