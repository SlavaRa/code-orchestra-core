package jetbrains.mps.execution.settings.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EditorExpression extends Expression {
  public static final String concept = "jetbrains.mps.execution.settings.structure.EditorExpression";
  public static final String PERSISTENT_PROPERTY_DECLARATION = "persistentPropertyDeclaration";

  public EditorExpression(SNode node) {
    super(node);
  }

  public PersistentPropertyDeclaration getPersistentPropertyDeclaration() {
    return (PersistentPropertyDeclaration) this.getReferent(PersistentPropertyDeclaration.class, EditorExpression.PERSISTENT_PROPERTY_DECLARATION);
  }

  public void setPersistentPropertyDeclaration(PersistentPropertyDeclaration node) {
    super.setReferent(EditorExpression.PERSISTENT_PROPERTY_DECLARATION, node);
  }

  public static EditorExpression newInstance(SModel sm, boolean init) {
    return (EditorExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.settings.structure.EditorExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EditorExpression newInstance(SModel sm) {
    return EditorExpression.newInstance(sm, false);
  }
}
