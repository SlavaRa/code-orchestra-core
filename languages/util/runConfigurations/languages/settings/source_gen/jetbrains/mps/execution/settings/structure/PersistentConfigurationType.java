package jetbrains.mps.execution.settings.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PersistentConfigurationType extends BaseClassifierType {
  public static final String concept = "jetbrains.mps.execution.settings.structure.PersistentConfigurationType";
  public static final String PERSISTENT_CONFIGURATION = "persistentConfiguration";

  public PersistentConfigurationType(SNode node) {
    super(node);
  }

  public PersistentConfiguration getPersistentConfiguration() {
    return (PersistentConfiguration) this.getReferent(PersistentConfiguration.class, PersistentConfigurationType.PERSISTENT_CONFIGURATION);
  }

  public void setPersistentConfiguration(PersistentConfiguration node) {
    super.setReferent(PersistentConfigurationType.PERSISTENT_CONFIGURATION, node);
  }

  public static PersistentConfigurationType newInstance(SModel sm, boolean init) {
    return (PersistentConfigurationType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.settings.structure.PersistentConfigurationType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PersistentConfigurationType newInstance(SModel sm) {
    return PersistentConfigurationType.newInstance(sm, false);
  }
}
