package jetbrains.mps.execution.settings.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Set;
import jetbrains.mps.baseLanguage.behavior.Statement_Behavior;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.smodel.SModelReference;
import jetbrains.mps.smodel.SNodeId;

public class ReportConfigurationErrorStatement_Behavior {
  public static void init(SNode thisNode) {
  }

  public static void virtual_collectUncaughtMethodThrowables_5412515780383134223(SNode thisNode, Set<SNode> throwables, boolean ignoreMayBeThrowables) {
    Statement_Behavior.callSuper_collectUncaughtMethodThrowables_5412515780383134223(thisNode, "jetbrains.mps.execution.settings.structure.ReportConfigurationErrorStatement", throwables, ignoreMayBeThrowables);
    SetSequence.fromSet(throwables).addElement(SLinkOperations.getTarget(new ReportConfigurationErrorStatement_Behavior.QuotationClass_3gtax0_a0a0a1a1().createNode(), "classifier", false));
  }

  public static class QuotationClass_3gtax0_a0a0a1a1 {
    public QuotationClass_3gtax0_a0a0a1a1() {
    }

    public SNode createNode() {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_2 = quotedNode_1;
        quotedNode1_2.addReference(SReference.create("classifier", quotedNode1_2, SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#com.intellij.execution.configurations(MPS.Classpath/com.intellij.execution.configurations@java_stub)"), SNodeId.fromString("~RuntimeConfigurationException")));
        result = quotedNode1_2;
      }
      return result;
    }
  }
}
