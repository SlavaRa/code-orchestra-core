package jetbrains.mps.execution.configurations.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.annotations.NonNls;
import jetbrains.mps.execution.common.behavior.IGeneratedToClass_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class AbstractRunConfigurationExecutor_Behavior {
  public static void init(SNode thisNode) {
    SPropertyOperations.set(thisNode, "canRun", "" + true);
    SPropertyOperations.set(thisNode, "configurationName", "myRunConfiguration");
  }

  public static String call_getCanExecuteMethodName_7806358006983616236(SNode thisNode) {
    return "canExecute";
  }

  @NonNls
  public static String virtual_getSuffix_946964771156905483(SNode thisNode) {
    return IGeneratedToClass_Behavior.call_getSuffix_946964771156905483(SLinkOperations.getTarget(thisNode, "configuration", false)) + "_RunProfileState";
  }

  public static String virtual_getGeneratedClassName_946964771156905488(SNode thisNode) {
    return IGeneratedToClass_Behavior.call_getGeneratedClassName_946964771156905516(thisNode, SPropertyOperations.getString(SLinkOperations.getTarget(thisNode, "configuration", false), "name"));
  }
}
