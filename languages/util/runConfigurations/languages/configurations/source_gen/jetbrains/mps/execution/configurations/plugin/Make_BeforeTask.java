package jetbrains.mps.execution.configurations.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.configurations.BaseMpsBeforeTaskProvider;
import com.intellij.openapi.util.Key;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import com.intellij.openapi.project.Project;
import jetbrains.mps.baseLanguage.util.plugin.run.RunUtil;

public class Make_BeforeTask extends BaseMpsBeforeTaskProvider<Make_BeforeTask.Make_BeforeTask_RunTask> {
  private static final Key<Make_BeforeTask.Make_BeforeTask_RunTask> KEY = Key.create("jetbrains.mps.execution.configurations.plugin.Make_BeforeTask");

  public Make_BeforeTask() {
    super("Make");
  }

  protected Make_BeforeTask.Make_BeforeTask_RunTask createTaskImpl() {
    return new Make_BeforeTask.Make_BeforeTask_RunTask();
  }

  public Key<Make_BeforeTask.Make_BeforeTask_RunTask> getId() {
    return KEY;
  }

  public static class Make_BeforeTask_RunTask extends BaseMpsBeforeTaskProvider.BaseMpsBeforeRunTask {
    private List<SNode> myNodes;

    public Make_BeforeTask_RunTask() {
    }

    public boolean configure(List<SNode> nodes) {
      myNodes = nodes;
      return true;
    }

    public boolean execute(Project project) {
      return RunUtil.makeBeforeRun(project, myNodes);
    }
  }
}
