package jetbrains.mps.execution.configurations.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.AbstractCreator;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ConsoleCreator extends AbstractCreator {
  public static final String concept = "jetbrains.mps.execution.configurations.structure.ConsoleCreator";
  public static final String PROJECT = "project";
  public static final String VIEWER = "viewer";

  public ConsoleCreator(SNode node) {
    super(node);
  }

  public Expression getProject() {
    return (Expression) this.getChild(Expression.class, ConsoleCreator.PROJECT);
  }

  public void setProject(Expression node) {
    super.setChild(ConsoleCreator.PROJECT, node);
  }

  public Expression getViewer() {
    return (Expression) this.getChild(Expression.class, ConsoleCreator.VIEWER);
  }

  public void setViewer(Expression node) {
    super.setChild(ConsoleCreator.VIEWER, node);
  }

  public static ConsoleCreator newInstance(SModel sm, boolean init) {
    return (ConsoleCreator) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.configurations.structure.ConsoleCreator", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ConsoleCreator newInstance(SModel sm) {
    return ConsoleCreator.newInstance(sm, false);
  }
}
