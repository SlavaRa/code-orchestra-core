package jetbrains.mps.execution.commands.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierType;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CommandType extends DefaultClassifierType {
  public static final String concept = "jetbrains.mps.execution.commands.structure.CommandType";

  public CommandType(SNode node) {
    super(node);
  }

  public CommandDeclaration getCommand() {
    return this.ensureAdapter(CommandDeclaration.class, "classifier", this.getClassifier());
  }

  public void setCommand(CommandDeclaration node) {
    this.setClassifier(node);
  }

  public static CommandType newInstance(SModel sm, boolean init) {
    return (CommandType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.commands.structure.CommandType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CommandType newInstance(SModel sm) {
    return CommandType.newInstance(sm, false);
  }
}
