package jetbrains.mps.execution.commands.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ProcessBuilderPart extends AbstractProcessBuilderPart {
  public static final String concept = "jetbrains.mps.execution.commands.structure.ProcessBuilderPart";
  public static final String EXPRESSION = "expression";

  public ProcessBuilderPart(SNode node) {
    super(node);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, ProcessBuilderPart.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(ProcessBuilderPart.EXPRESSION, node);
  }

  public static ProcessBuilderPart newInstance(SModel sm, boolean init) {
    return (ProcessBuilderPart) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.commands.structure.ProcessBuilderPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ProcessBuilderPart newInstance(SModel sm) {
    return ProcessBuilderPart.newInstance(sm, false);
  }
}
