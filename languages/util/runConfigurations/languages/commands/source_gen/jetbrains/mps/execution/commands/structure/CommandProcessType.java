package jetbrains.mps.execution.commands.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CommandProcessType extends ProcessType {
  public static final String concept = "jetbrains.mps.execution.commands.structure.CommandProcessType";
  public static final String COMMAND_DECLARATION = "commandDeclaration";

  public CommandProcessType(SNode node) {
    super(node);
  }

  public CommandDeclaration getCommandDeclaration() {
    return (CommandDeclaration) this.getReferent(CommandDeclaration.class, CommandProcessType.COMMAND_DECLARATION);
  }

  public void setCommandDeclaration(CommandDeclaration node) {
    super.setReferent(CommandProcessType.COMMAND_DECLARATION, node);
  }

  public static CommandProcessType newInstance(SModel sm, boolean init) {
    return (CommandProcessType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.commands.structure.CommandProcessType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CommandProcessType newInstance(SModel sm) {
    return CommandProcessType.newInstance(sm, false);
  }
}
