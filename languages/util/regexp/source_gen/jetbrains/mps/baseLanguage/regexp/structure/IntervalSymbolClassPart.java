package jetbrains.mps.baseLanguage.regexp.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IntervalSymbolClassPart extends SymbolClassPart {
  public static final String concept = "jetbrains.mps.baseLanguage.regexp.structure.IntervalSymbolClassPart";
  public static final String START = "start";
  public static final String END = "end";

  public IntervalSymbolClassPart(SNode node) {
    super(node);
  }

  public String getStart() {
    return this.getProperty(IntervalSymbolClassPart.START);
  }

  public void setStart(String value) {
    this.setProperty(IntervalSymbolClassPart.START, value);
  }

  public String getEnd() {
    return this.getProperty(IntervalSymbolClassPart.END);
  }

  public void setEnd(String value) {
    this.setProperty(IntervalSymbolClassPart.END, value);
  }

  public static IntervalSymbolClassPart newInstance(SModel sm, boolean init) {
    return (IntervalSymbolClassPart) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.regexp.structure.IntervalSymbolClassPart", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IntervalSymbolClassPart newInstance(SModel sm) {
    return IntervalSymbolClassPart.newInstance(sm, false);
  }
}
