package jetbrains.mps.baseLanguage.regexp.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatchVariableReferenceRegexp extends Regexp {
  public static final String concept = "jetbrains.mps.baseLanguage.regexp.structure.MatchVariableReferenceRegexp";
  public static final String MATCH = "match";

  public MatchVariableReferenceRegexp(SNode node) {
    super(node);
  }

  public MatchParensRegexp getMatch() {
    return (MatchParensRegexp) this.getReferent(MatchParensRegexp.class, MatchVariableReferenceRegexp.MATCH);
  }

  public void setMatch(MatchParensRegexp node) {
    super.setReferent(MatchVariableReferenceRegexp.MATCH, node);
  }

  public static MatchVariableReferenceRegexp newInstance(SModel sm, boolean init) {
    return (MatchVariableReferenceRegexp) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.regexp.structure.MatchVariableReferenceRegexp", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatchVariableReferenceRegexp newInstance(SModel sm) {
    return MatchVariableReferenceRegexp.newInstance(sm, false);
  }
}
