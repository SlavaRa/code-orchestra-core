package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BeanPropertyView extends View {
  public static final String concept = "jetbrains.mps.ui.structure.BeanPropertyView";
  public static final String PROPERTY_NAME = "propertyName";
  public static final String CAN_READ = "canRead";
  public static final String CAN_WRITE = "canWrite";
  public static final String GETTER = "getter";
  public static final String BEAN = "bean";

  public BeanPropertyView(SNode node) {
    super(node);
  }

  public String getPropertyName() {
    return this.getProperty(BeanPropertyView.PROPERTY_NAME);
  }

  public void setPropertyName(String value) {
    this.setProperty(BeanPropertyView.PROPERTY_NAME, value);
  }

  public boolean getCanRead() {
    return this.getBooleanProperty(BeanPropertyView.CAN_READ);
  }

  public void setCanRead(boolean value) {
    this.setBooleanProperty(BeanPropertyView.CAN_READ, value);
  }

  public boolean getCanWrite() {
    return this.getBooleanProperty(BeanPropertyView.CAN_WRITE);
  }

  public void setCanWrite(boolean value) {
    this.setBooleanProperty(BeanPropertyView.CAN_WRITE, value);
  }

  public InstanceMethodDeclaration getGetter() {
    return (InstanceMethodDeclaration) this.getReferent(InstanceMethodDeclaration.class, BeanPropertyView.GETTER);
  }

  public void setGetter(InstanceMethodDeclaration node) {
    super.setReferent(BeanPropertyView.GETTER, node);
  }

  public Expression getBean() {
    return (Expression) this.getChild(Expression.class, BeanPropertyView.BEAN);
  }

  public void setBean(Expression node) {
    super.setChild(BeanPropertyView.BEAN, node);
  }

  public static BeanPropertyView newInstance(SModel sm, boolean init) {
    return (BeanPropertyView) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.BeanPropertyView", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BeanPropertyView newInstance(SModel sm) {
    return BeanPropertyView.newInstance(sm, false);
  }
}
