package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.modeling.structure.ChildAspectDefinition;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ChildAspect extends BaseConcept {
  public static final String concept = "jetbrains.mps.ui.structure.ChildAspect";
  public static final String DEFINITION = "definition";
  public static final String VALUE = "value";

  public ChildAspect(SNode node) {
    super(node);
  }

  public ChildAspectDefinition getDefinition() {
    return (ChildAspectDefinition) this.getReferent(ChildAspectDefinition.class, ChildAspect.DEFINITION);
  }

  public void setDefinition(ChildAspectDefinition node) {
    super.setReferent(ChildAspect.DEFINITION, node);
  }

  public Expression getValue() {
    return (Expression) this.getChild(Expression.class, ChildAspect.VALUE);
  }

  public void setValue(Expression node) {
    super.setChild(ChildAspect.VALUE, node);
  }

  public static ChildAspect newInstance(SModel sm, boolean init) {
    return (ChildAspect) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.ChildAspect", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ChildAspect newInstance(SModel sm) {
    return ChildAspect.newInstance(sm, false);
  }
}
