package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.modeling.structure.Event;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ControllerBinding extends BaseConcept {
  public static final String concept = "jetbrains.mps.ui.structure.ControllerBinding";
  public static final String EVENT = "event";
  public static final String CONTROLLER = "controller";

  public ControllerBinding(SNode node) {
    super(node);
  }

  public Event getEvent() {
    return (Event) this.getReferent(Event.class, ControllerBinding.EVENT);
  }

  public void setEvent(Event node) {
    super.setReferent(ControllerBinding.EVENT, node);
  }

  public Controller getController() {
    return (Controller) this.getChild(Controller.class, ControllerBinding.CONTROLLER);
  }

  public void setController(Controller node) {
    super.setChild(ControllerBinding.CONTROLLER, node);
  }

  public static ControllerBinding newInstance(SModel sm, boolean init) {
    return (ControllerBinding) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.ControllerBinding", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ControllerBinding newInstance(SModel sm) {
    return ControllerBinding.newInstance(sm, false);
  }
}
