package jetbrains.mps.ui.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class View_wrap_with_ValidatingView_Intention extends BaseIntention implements Intention {
  public View_wrap_with_ValidatingView_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.ui.structure.View";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Replace with validating view";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return !(SNodeOperations.isInstanceOf(node, "jetbrains.mps.ui.structure.ValidatingView"));
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode vv = SNodeFactoryOperations.createNewNode("jetbrains.mps.ui.structure.ValidatingView", null);
    SLinkOperations.setTarget(vv, "view", SNodeOperations.detachNode(node), true);
    SNode vdr = SLinkOperations.setTarget(vv, "validator", SNodeFactoryOperations.createNewNode("jetbrains.mps.ui.structure.Validator", null), true);
    SNode vb = SLinkOperations.setTarget(vdr, "validateBlock", SNodeFactoryOperations.createNewNode("jetbrains.mps.ui.structure.ValidateBlock", null), true);
    SLinkOperations.addChild(vb, "parameter", SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterDeclaration", null));

  }

  public String getLocationString() {
    return "jetbrains.mps.ui.intentions";
  }
}
