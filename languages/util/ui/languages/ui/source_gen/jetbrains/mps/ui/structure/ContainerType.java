package jetbrains.mps.ui.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.modeling.structure.Container;
import jetbrains.mps.ui.modeling.structure.UIObject;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ContainerType extends Type {
  public static final String concept = "jetbrains.mps.ui.structure.ContainerType";
  public static final String CONTAINER = "container";
  public static final String UI_OBJECT = "uiObject";

  public ContainerType(SNode node) {
    super(node);
  }

  public Container getContainer() {
    return (Container) this.getReferent(Container.class, ContainerType.CONTAINER);
  }

  public void setContainer(Container node) {
    super.setReferent(ContainerType.CONTAINER, node);
  }

  public UIObject getUiObject() {
    return (UIObject) this.getReferent(UIObject.class, ContainerType.UI_OBJECT);
  }

  public void setUiObject(UIObject node) {
    super.setReferent(ContainerType.UI_OBJECT, node);
  }

  public static ContainerType newInstance(SModel sm, boolean init) {
    return (ContainerType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.structure.ContainerType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ContainerType newInstance(SModel sm) {
    return ContainerType.newInstance(sm, false);
  }
}
