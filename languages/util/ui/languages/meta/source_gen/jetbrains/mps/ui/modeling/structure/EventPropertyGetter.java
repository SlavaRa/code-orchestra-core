package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.ConceptFunction;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EventPropertyGetter extends ConceptFunction {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.EventPropertyGetter";
  public static final String PROPERTY = "property";

  public EventPropertyGetter(SNode node) {
    super(node);
  }

  public EventProperty getProperty() {
    return (EventProperty) this.getReferent(EventProperty.class, EventPropertyGetter.PROPERTY);
  }

  public void setProperty(EventProperty node) {
    super.setReferent(EventPropertyGetter.PROPERTY, node);
  }

  public static EventPropertyGetter newInstance(SModel sm, boolean init) {
    return (EventPropertyGetter) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.EventPropertyGetter", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EventPropertyGetter newInstance(SModel sm) {
    return EventPropertyGetter.newInstance(sm, false);
  }
}
