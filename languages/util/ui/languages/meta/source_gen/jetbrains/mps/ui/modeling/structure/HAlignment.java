package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum HAlignment {
  left("left", "LEFT"),
  center("center", "CENTER"),
  right("right", "RIGHT"),
  fill("fill", "FILL");

  private String myName;
  private String myValue;

  HAlignment(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<HAlignment> getConstants() {
    List<HAlignment> list = ListSequence.fromList(new LinkedList<HAlignment>());
    ListSequence.fromList(list).addElement(HAlignment.left);
    ListSequence.fromList(list).addElement(HAlignment.center);
    ListSequence.fromList(list).addElement(HAlignment.right);
    ListSequence.fromList(list).addElement(HAlignment.fill);
    return list;
  }

  public static HAlignment getDefault() {
    return HAlignment.left;
  }

  public static HAlignment parseValue(String value) {
    if (value == null) {
      return HAlignment.getDefault();
    }
    if (value.equals(HAlignment.left.getValueAsString())) {
      return HAlignment.left;
    }
    if (value.equals(HAlignment.center.getValueAsString())) {
      return HAlignment.center;
    }
    if (value.equals(HAlignment.right.getValueAsString())) {
      return HAlignment.right;
    }
    if (value.equals(HAlignment.fill.getValueAsString())) {
      return HAlignment.fill;
    }
    return HAlignment.getDefault();
  }
}
