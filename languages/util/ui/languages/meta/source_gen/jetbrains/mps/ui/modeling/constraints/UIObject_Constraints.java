package jetbrains.mps.ui.modeling.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.SNodePointer;
import java.util.Map;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.ui.modeling.behavior.UIObject_Behavior;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.Sequence;

public class UIObject_Constraints extends BaseConstraintsDescriptor {
  private static SNodePointer breakingNode_8gus11_a0a1a0a0a1a0b0a1a0 = new SNodePointer("r:3cad8b0f-ef3c-442c-8c6f-1ab422f65805(jetbrains.mps.ui.modeling.constraints)", "1719339442170193747");

  public UIObject_Constraints() {
    super("jetbrains.mps.ui.modeling.structure.UIObject");
  }

  @Override
  protected Map<String, ReferenceConstraintsDescriptor> getNotDefaultReferences() {
    Map<String, ReferenceConstraintsDescriptor> references = new HashMap();
    references.put("belongsTo", new BaseReferenceConstraintsDescriptor("belongsTo", this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }

      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            List<SNode> nodes = SModelOperations.getNodesIncludingImported(_context.getModel(), GlobalScope.getInstance(), "jetbrains.mps.ui.modeling.structure.UIObject");
            if ((_context.getReferenceNode() == null)) {
              return nodes;
            }
            SNode uio = SNodeOperations.cast(_context.getReferenceNode(), "jetbrains.mps.ui.modeling.structure.UIObject");
            // respect extending object's "belongsTo" ref 
            final SNode mbt = UIObject_Behavior.call_mustBelongTo_1719339442171055203(uio);
            if (mbt != null) {
              ListSequence.fromList(nodes).removeWhere(new IWhereFilter<SNode>() {
                public boolean accept(SNode n) {
                  return !(Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(n)).contains(mbt));
                }
              });
            }
            return nodes;
          }

          @Override
          public SNodePointer getSearchScopeValidatorNode() {
            return breakingNode_8gus11_a0a1a0a0a1a0b0a1a0;
          }
        };
      }
    });
    return references;
  }
}
