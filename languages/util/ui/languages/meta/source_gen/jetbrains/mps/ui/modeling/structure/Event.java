package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Event extends BaseConcept implements INamedConcept, HasTemplate {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.Event";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String HANDLEABLE = "handleable";
  public static final String EXTENDS = "extends";
  public static final String PROPERTY = "property";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public Event(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(Event.NAME);
  }

  public void setName(String value) {
    this.setProperty(Event.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(Event.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Event.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Event.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Event.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Event.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Event.VIRTUAL_PACKAGE, value);
  }

  public boolean getHandleable() {
    return this.getBooleanProperty(Event.HANDLEABLE);
  }

  public void setHandleable(boolean value) {
    this.setBooleanProperty(Event.HANDLEABLE, value);
  }

  public Event getExtends() {
    return (Event) this.getReferent(Event.class, Event.EXTENDS);
  }

  public void setExtends(Event node) {
    super.setReferent(Event.EXTENDS, node);
  }

  public int getPropertiesCount() {
    return this.getChildCount(Event.PROPERTY);
  }

  public Iterator<EventProperty> properties() {
    return this.children(EventProperty.class, Event.PROPERTY);
  }

  public List<EventProperty> getProperties() {
    return this.getChildren(EventProperty.class, Event.PROPERTY);
  }

  public void addProperty(EventProperty node) {
    this.addChild(Event.PROPERTY, node);
  }

  public void insertProperty(EventProperty prev, EventProperty node) {
    this.insertChild(prev, Event.PROPERTY, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(Event.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, Event.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, Event.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(Event.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, Event.SMODEL_ATTRIBUTE, node);
  }

  public static Event newInstance(SModel sm, boolean init) {
    return (Event) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.Event", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Event newInstance(SModel sm) {
    return Event.newInstance(sm, false);
  }
}
