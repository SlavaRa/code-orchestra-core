package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Type;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ContainerTemplate extends BaseConcept {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.ContainerTemplate";
  public static final String CONTAINER = "container";
  public static final String ITEM_TYPE = "itemType";
  public static final String ITEM_ADDER = "itemAdder";
  public static final String ITEM_INSERTER = "itemInserter";
  public static final String ITEM_ITERATOR = "itemIterator";
  public static final String ITEM_REMOVER = "itemRemover";
  public static final String ITEM_CLEARER = "itemClearer";

  public ContainerTemplate(SNode node) {
    super(node);
  }

  public Container getContainer() {
    return (Container) this.getReferent(Container.class, ContainerTemplate.CONTAINER);
  }

  public void setContainer(Container node) {
    super.setReferent(ContainerTemplate.CONTAINER, node);
  }

  public Type getItemType() {
    return (Type) this.getChild(Type.class, ContainerTemplate.ITEM_TYPE);
  }

  public void setItemType(Type node) {
    super.setChild(ContainerTemplate.ITEM_TYPE, node);
  }

  public ContainerItemAdder getItemAdder() {
    return (ContainerItemAdder) this.getChild(ContainerItemAdder.class, ContainerTemplate.ITEM_ADDER);
  }

  public void setItemAdder(ContainerItemAdder node) {
    super.setChild(ContainerTemplate.ITEM_ADDER, node);
  }

  public ContainerItemInserter getItemInserter() {
    return (ContainerItemInserter) this.getChild(ContainerItemInserter.class, ContainerTemplate.ITEM_INSERTER);
  }

  public void setItemInserter(ContainerItemInserter node) {
    super.setChild(ContainerTemplate.ITEM_INSERTER, node);
  }

  public ContainerItemIterator getItemIterator() {
    return (ContainerItemIterator) this.getChild(ContainerItemIterator.class, ContainerTemplate.ITEM_ITERATOR);
  }

  public void setItemIterator(ContainerItemIterator node) {
    super.setChild(ContainerTemplate.ITEM_ITERATOR, node);
  }

  public ContainerItemRemover getItemRemover() {
    return (ContainerItemRemover) this.getChild(ContainerItemRemover.class, ContainerTemplate.ITEM_REMOVER);
  }

  public void setItemRemover(ContainerItemRemover node) {
    super.setChild(ContainerTemplate.ITEM_REMOVER, node);
  }

  public ContainerItemClearer getItemClearer() {
    return (ContainerItemClearer) this.getChild(ContainerItemClearer.class, ContainerTemplate.ITEM_CLEARER);
  }

  public void setItemClearer(ContainerItemClearer node) {
    super.setChild(ContainerTemplate.ITEM_CLEARER, node);
  }

  public static ContainerTemplate newInstance(SModel sm, boolean init) {
    return (ContainerTemplate) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.ContainerTemplate", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ContainerTemplate newInstance(SModel sm) {
    return ContainerTemplate.newInstance(sm, false);
  }
}
