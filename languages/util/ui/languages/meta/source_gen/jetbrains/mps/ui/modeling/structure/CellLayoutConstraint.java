package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CellLayoutConstraint extends LayoutConstraint {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.CellLayoutConstraint";
  public static final String ROW_CONSTRAINT = "rowConstraint";
  public static final String COLUMN_CONSTRAINT = "columnConstraint";

  public CellLayoutConstraint(SNode node) {
    super(node);
  }

  public RowLayoutConstraint getRowConstraint() {
    return (RowLayoutConstraint) this.getChild(RowLayoutConstraint.class, CellLayoutConstraint.ROW_CONSTRAINT);
  }

  public void setRowConstraint(RowLayoutConstraint node) {
    super.setChild(CellLayoutConstraint.ROW_CONSTRAINT, node);
  }

  public ColumnLayoutConstraint getColumnConstraint() {
    return (ColumnLayoutConstraint) this.getChild(ColumnLayoutConstraint.class, CellLayoutConstraint.COLUMN_CONSTRAINT);
  }

  public void setColumnConstraint(ColumnLayoutConstraint node) {
    super.setChild(CellLayoutConstraint.COLUMN_CONSTRAINT, node);
  }

  public static CellLayoutConstraint newInstance(SModel sm, boolean init) {
    return (CellLayoutConstraint) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.CellLayoutConstraint", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CellLayoutConstraint newInstance(SModel sm) {
    return CellLayoutConstraint.newInstance(sm, false);
  }
}
