package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ExpressionWithUnit extends Expression {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.ExpressionWithUnit";
  public static final String UNIT = "unit";
  public static final String EXPRESSION = "expression";

  public ExpressionWithUnit(SNode node) {
    super(node);
  }

  public Unit getUnit() {
    String value = super.getProperty(ExpressionWithUnit.UNIT);
    return Unit.parseValue(value);
  }

  public void setUnit(Unit value) {
    super.setProperty(ExpressionWithUnit.UNIT, value.getValueAsString());
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, ExpressionWithUnit.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(ExpressionWithUnit.EXPRESSION, node);
  }

  public static ExpressionWithUnit newInstance(SModel sm, boolean init) {
    return (ExpressionWithUnit) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.ExpressionWithUnit", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ExpressionWithUnit newInstance(SModel sm) {
    return ExpressionWithUnit.newInstance(sm, false);
  }
}
