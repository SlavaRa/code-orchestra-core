package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Auxillary extends BaseConcept {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.Auxillary";
  public static final String AUX_TEMPLATE = "auxTemplate";

  public Auxillary(SNode node) {
    super(node);
  }

  public int getAuxTemplatesCount() {
    return this.getChildCount(Auxillary.AUX_TEMPLATE);
  }

  public Iterator<AuxObjectTemplate> auxTemplates() {
    return this.children(AuxObjectTemplate.class, Auxillary.AUX_TEMPLATE);
  }

  public List<AuxObjectTemplate> getAuxTemplates() {
    return this.getChildren(AuxObjectTemplate.class, Auxillary.AUX_TEMPLATE);
  }

  public void addAuxTemplate(AuxObjectTemplate node) {
    this.addChild(Auxillary.AUX_TEMPLATE, node);
  }

  public void insertAuxTemplate(AuxObjectTemplate prev, AuxObjectTemplate node) {
    this.insertChild(prev, Auxillary.AUX_TEMPLATE, node);
  }

  public static Auxillary newInstance(SModel sm, boolean init) {
    return (Auxillary) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.Auxillary", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Auxillary newInstance(SModel sm) {
    return Auxillary.newInstance(sm, false);
  }
}
