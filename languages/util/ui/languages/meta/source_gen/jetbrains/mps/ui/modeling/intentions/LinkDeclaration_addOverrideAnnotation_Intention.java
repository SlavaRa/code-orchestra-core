package jetbrains.mps.ui.modeling.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class LinkDeclaration_addOverrideAnnotation_Intention extends BaseIntention implements Intention {
  public LinkDeclaration_addOverrideAnnotation_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.structure.structure.LinkDeclaration";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.OverrideAnnotation"))) == null) ?
      "Add override annotation" :
      "Remove override annotation"
    );
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.OverrideAnnotation"))) == null)) {
      AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.OverrideAnnotation")), SNodeFactoryOperations.createNewNode("jetbrains.mps.ui.modeling.structure.OverrideAnnotation", null));
    } else {
      SNodeOperations.detachNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.OverrideAnnotation"))));
    }
  }

  public String getLocationString() {
    return "jetbrains.mps.ui.modeling.intentions";
  }
}
