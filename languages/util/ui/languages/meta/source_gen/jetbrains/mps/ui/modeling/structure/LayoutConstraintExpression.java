package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LayoutConstraintExpression extends Expression {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.LayoutConstraintExpression";
  public static final String CONSTRAINT = "constraint";

  public LayoutConstraintExpression(SNode node) {
    super(node);
  }

  public LayoutConstraint getConstraint() {
    return (LayoutConstraint) this.getChild(LayoutConstraint.class, LayoutConstraintExpression.CONSTRAINT);
  }

  public void setConstraint(LayoutConstraint node) {
    super.setChild(LayoutConstraintExpression.CONSTRAINT, node);
  }

  public static LayoutConstraintExpression newInstance(SModel sm, boolean init) {
    return (LayoutConstraintExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.LayoutConstraintExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LayoutConstraintExpression newInstance(SModel sm) {
    return LayoutConstraintExpression.newInstance(sm, false);
  }
}
