package jetbrains.mps.ui.modeling.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class HorizontalConstraint extends BaseConcept {
  public static final String concept = "jetbrains.mps.ui.modeling.structure.HorizontalConstraint";
  public static final String LEFT = "left";
  public static final String WIDTH = "width";
  public static final String RIGHT = "right";

  public HorizontalConstraint(SNode node) {
    super(node);
  }

  public Expression getLeft() {
    return (Expression) this.getChild(Expression.class, HorizontalConstraint.LEFT);
  }

  public void setLeft(Expression node) {
    super.setChild(HorizontalConstraint.LEFT, node);
  }

  public Expression getWidth() {
    return (Expression) this.getChild(Expression.class, HorizontalConstraint.WIDTH);
  }

  public void setWidth(Expression node) {
    super.setChild(HorizontalConstraint.WIDTH, node);
  }

  public Expression getRight() {
    return (Expression) this.getChild(Expression.class, HorizontalConstraint.RIGHT);
  }

  public void setRight(Expression node) {
    super.setChild(HorizontalConstraint.RIGHT, node);
  }

  public static HorizontalConstraint newInstance(SModel sm, boolean init) {
    return (HorizontalConstraint) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.modeling.structure.HorizontalConstraint", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static HorizontalConstraint newInstance(SModel sm) {
    return HorizontalConstraint.newInstance(sm, false);
  }
}
