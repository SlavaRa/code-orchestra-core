package jetbrains.mps.ui.modeling.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.SNode;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.constraints.CanBeAChildContext;
import java.util.Map;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.ui.modeling.behavior.HasTemplate_Behavior;

public class AuxObjectAccessOp_Constraints extends BaseConstraintsDescriptor {
  private static SNodePointer canBeChildBreakingPoint = new SNodePointer("r:3cad8b0f-ef3c-442c-8c6f-1ab422f65805(jetbrains.mps.ui.modeling.constraints)", "1412244996131807618");
  private static SNodePointer breakingNode_qf6rfz_a0a1a0a0a1a0b0a1a2 = new SNodePointer("r:3cad8b0f-ef3c-442c-8c6f-1ab422f65805(jetbrains.mps.ui.modeling.constraints)", "1412244996131808159");

  public AuxObjectAccessOp_Constraints() {
    super("jetbrains.mps.ui.modeling.structure.AuxObjectAccessOp");
  }

  @Override
  public boolean hasOwnCanBeChildMethod() {
    return true;
  }

  @Override
  public boolean canBeChild(final IOperationContext operationContext, SNode node, SNode node1, SNode node2, @Nullable final CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAChild(operationContext, new CanBeAChildContext(node, node1, node2));

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
    }

    return result;
  }

  @Override
  protected Map<String, ReferenceConstraintsDescriptor> getNotDefaultReferences() {
    Map<String, ReferenceConstraintsDescriptor> references = new HashMap();
    references.put("template", new BaseReferenceConstraintsDescriptor("template", this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }

      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            SNode uiof = SNodeOperations.getAncestor(_context.getEnclosingNode(), "jetbrains.mps.ui.modeling.structure.UIObjectFactory", false, false);
            SNode uiot = SNodeOperations.getAncestor(_context.getEnclosingNode(), "jetbrains.mps.ui.modeling.structure.UIObjectTemplate", false, false);
            SNode uio = ((uiof != null) ?
              SLinkOperations.getTarget(SLinkOperations.getTarget(uiof, "context", true), "uiObject", false) :
              SLinkOperations.getTarget(uiot, "uiObject", false)
            );
            return SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.as(HasTemplate_Behavior.call_findTemplate_3939571372331676060(uio, _context.getModel(), operationContext.getScope()), "jetbrains.mps.ui.modeling.structure.UIObjectTemplate"), "auxillary", true), "auxTemplate", true);
          }

          @Override
          public SNodePointer getSearchScopeValidatorNode() {
            return breakingNode_qf6rfz_a0a1a0a0a1a0b0a1a2;
          }
        };
      }
    });
    return references;
  }

  public static boolean static_canBeAChild(final IOperationContext operationContext, final CanBeAChildContext _context) {
    SNode opd = SLinkOperations.getTarget(SNodeOperations.as(_context.getParentNode(), "jetbrains.mps.baseLanguage.structure.DotExpression"), "operand", true);
    return SNodeOperations.isInstanceOf(opd, "jetbrains.mps.ui.modeling.structure.ContextUIObjectParam") || SNodeOperations.isInstanceOf(opd, "jetbrains.mps.ui.modeling.structure.ThisUIObjectParam");
  }
}
