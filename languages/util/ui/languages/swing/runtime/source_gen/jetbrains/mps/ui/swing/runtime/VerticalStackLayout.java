package jetbrains.mps.ui.swing.runtime;

/*Generated by MPS */

import java.awt.LayoutManager;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Container;
import java.awt.Insets;

public abstract class VerticalStackLayout implements LayoutManager {
  public VerticalStackLayout() {
  }

  public void addLayoutComponent(String string, Component component) {
  }

  public void removeLayoutComponent(Component component) {
  }

  public Dimension preferredLayoutSize(Container container) {
    synchronized (container.getTreeLock()) {
      Insets ins = container.getInsets();
      int w = 0;
      int h = 0;
      Component selected = null;
      for (Component cmp : container.getComponents()) {
        if (this.isSelected(cmp)) {
          selected = cmp;
        } else {
          Dimension ps = cmp.getPreferredSize();
          h += ps.height;
          w = Math.max(w, ps.width);
        }
      }
      if (selected != null) {
        Dimension box = container.getSize();
        int maxHeight = box.height - ins.top - ins.bottom;
        Dimension ps = selected.getPreferredSize();
        h = Math.max(maxHeight, ps.height);
        w = Math.max(w, ps.width);
      }
      Dimension dim = new Dimension();
      dim.setSize(ins.left + w + ins.right, ins.top + h + ins.bottom);
      return dim;
    }
  }

  public Dimension minimumLayoutSize(Container container) {
    return this.preferredLayoutSize(container);
  }

  public void layoutContainer(Container container) {
    synchronized (container.getTreeLock()) {
      Insets ins = container.getInsets();
      Dimension box = container.getSize();
      int width = box.width - ins.left - ins.top;
      int height = box.height - ins.top - ins.bottom;
      Component selected = null;
      for (Component cmp : container.getComponents()) {
        if (this.isSelected(cmp)) {
          selected = cmp;
        } else {
          Dimension ps = cmp.getPreferredSize();
          height -= ps.height;
        }
      }
      int x = ins.left;
      int y = ins.top;
      for (Component cmp : container.getComponents()) {
        if (selected == cmp) {
          cmp.setBounds(x, y, width, height);
          y += height;
        } else {
          Dimension ps = cmp.getPreferredSize();
          cmp.setBounds(x, y, width, ps.height);
          y += ps.height;
        }
      }
    }
  }

  public abstract boolean isSelected(Component c);
}
