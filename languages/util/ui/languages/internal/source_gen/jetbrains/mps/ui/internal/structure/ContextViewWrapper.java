package jetbrains.mps.ui.internal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.structure.View;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ContextViewWrapper extends ContextWrapper {
  public static final String concept = "jetbrains.mps.ui.internal.structure.ContextViewWrapper";
  public static final String VIEW = "view";

  public ContextViewWrapper(SNode node) {
    super(node);
  }

  public View getView() {
    return (View) this.getChild(View.class, ContextViewWrapper.VIEW);
  }

  public void setView(View node) {
    super.setChild(ContextViewWrapper.VIEW, node);
  }

  public static ContextViewWrapper newInstance(SModel sm, boolean init) {
    return (ContextViewWrapper) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.internal.structure.ContextViewWrapper", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ContextViewWrapper newInstance(SModel sm) {
    return ContextViewWrapper.newInstance(sm, false);
  }
}
