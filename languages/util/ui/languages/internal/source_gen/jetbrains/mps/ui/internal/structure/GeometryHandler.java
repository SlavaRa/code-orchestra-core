package jetbrains.mps.ui.internal.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.modeling.structure.Geometry;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GeometryHandler extends Statement {
  public static final String concept = "jetbrains.mps.ui.internal.structure.GeometryHandler";
  public static final String GEOMETRY = "geometry";

  public GeometryHandler(SNode node) {
    super(node);
  }

  public Geometry getGeometry() {
    return (Geometry) this.getReferent(Geometry.class, GeometryHandler.GEOMETRY);
  }

  public void setGeometry(Geometry node) {
    super.setReferent(GeometryHandler.GEOMETRY, node);
  }

  public static GeometryHandler newInstance(SModel sm, boolean init) {
    return (GeometryHandler) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.internal.structure.GeometryHandler", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GeometryHandler newInstance(SModel sm) {
    return GeometryHandler.newInstance(sm, false);
  }
}
