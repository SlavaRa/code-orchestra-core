package jetbrains.mps.ui.internal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.ui.modeling.structure.Container;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ContextCompartmentWrapper extends ContextWrapper {
  public static final String concept = "jetbrains.mps.ui.internal.structure.ContextCompartmentWrapper";
  public static final String CONTAINER = "container";

  public ContextCompartmentWrapper(SNode node) {
    super(node);
  }

  public Container getContainer() {
    return (Container) this.getReferent(Container.class, ContextCompartmentWrapper.CONTAINER);
  }

  public void setContainer(Container node) {
    super.setReferent(ContextCompartmentWrapper.CONTAINER, node);
  }

  public static ContextCompartmentWrapper newInstance(SModel sm, boolean init) {
    return (ContextCompartmentWrapper) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.ui.internal.structure.ContextCompartmentWrapper", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ContextCompartmentWrapper newInstance(SModel sm) {
    return ContextCompartmentWrapper.newInstance(sm, false);
  }
}
