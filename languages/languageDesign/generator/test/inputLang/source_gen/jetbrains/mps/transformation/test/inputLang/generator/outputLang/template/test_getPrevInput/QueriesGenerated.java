package jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_getPrevInput;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.MapSrcMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.generator.template.MapSrcMacroPostProcContext;
import jetbrains.mps.generator.runtime.TemplateModel;
import jetbrains.mps.generator.runtime.TemplateModule;

public class QueriesGenerated {
  public static boolean baseMappingRule_Condition_1202255161954(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "useInTest", "getPrevInputTest", "none");
  }

  public static boolean baseMappingRule_Condition_1202338801829(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "useInTest", "getPrevInputTest", "none");
  }

  public static Object propertyMacro_GetPropertyValue_1202327274819(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode node = _context.getPreviousInputNodeByMappingLabel("ROOT INPUT");
    return "ROOT INPUT: " + SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1202327887568(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode inputNode = _context.getPreviousInputNodeByMappingLabel("LEVEL 1");
    return "LEVEL 1: " + SPropertyOperations.getString(inputNode, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1202327970031(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode inputNode = _context.getPreviousInputNodeByMappingLabel("LEVEL 2");
    return "LEVEL 2: " + SPropertyOperations.getString(inputNode, "name");
  }

  public static Object propertyMacro_GetPropertyValue_1202326517571(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "created from " + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1202338467126(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "created from " + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static boolean ifMacro_Condition_1202332796047(final IOperationContext operationContext, final IfMacroContext _context) {
    return true;
  }

  public static Iterable sourceNodesQuery_1233603475878(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    _context.showInformationMessage(_context.getNode(), "MAP LEVEL1 " + SPropertyOperations.getString(_context.getNode(), "name"));
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static Iterable sourceNodesQuery_1202256587517(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static Iterable sourceNodesQuery_1202256594380(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static Iterable sourceNodesQuery_1202338467105(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static Iterable sourceNodesQuery_1202338467112(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static Iterable sourceNodesQuery_1202338467119(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "inputChild", true);
  }

  public static SNode mapSrcMacro_mapper_1202338546473(final IOperationContext operationContext, final MapSrcMacroContext _context) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.transformation.test.outputLang.structure.OutputNode", null);
    SNode node = _context.getPreviousInputNodeByMappingLabel("ROOT INPUT");
    String text = "ROOT INPUT: " + SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
    SPropertyOperations.set(result, "text", text);
    return result;
  }

  public static SNode mapSrcMacro_mapper_1202338683284(final IOperationContext operationContext, final MapSrcMacroContext _context) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.transformation.test.outputLang.structure.OutputNode", null);
    SNode node = _context.getPreviousInputNodeByMappingLabel("LEVEL 1");
    String text = "LEVEL 1: " + SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
    SPropertyOperations.set(result, "text", text);
    return result;
  }

  public static SNode mapSrcMacro_mapper_1202338740199(final IOperationContext operationContext, final MapSrcMacroContext _context) {
    SNode result = SConceptOperations.createNewNode("jetbrains.mps.transformation.test.outputLang.structure.OutputNode", null);
    SNode node = _context.getPreviousInputNodeByMappingLabel("LEVEL 2");
    String text = "LEVEL 2: " + SPropertyOperations.getString(SNodeOperations.cast(node, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
    SPropertyOperations.set(result, "text", text);
    return result;
  }

  public static void mapSrcMacro_post_mapper_1233603527948(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    _context.showInformationMessage(_context.getNode(), "POST-PROC LEVEL1 " + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static void mapSrcMacro_post_mapper_1225236165359(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    _context.showInformationMessage(_context.getNode(), "TEST post-proc (I in)");
    _context.showInformationMessage(_context.getOutputNode(), "TEST post-proc (I out)");
  }

  public static void mapSrcMacro_post_mapper_1225236090395(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    _context.showInformationMessage(_context.getNode(), "TEST post proc (II in)");
    _context.showInformationMessage(_context.getOutputNode(), "TEST post proc (II out)");
  }

  public static void mapSrcMacro_post_mapper_1225236639046(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    _context.showInformationMessage(_context.getOutputNode(), "TEST post-proc (III)");
  }

  public static TemplateModel getDescriptor(TemplateModule module) {
    return new TemplateModelImpl(module);
  }
}
