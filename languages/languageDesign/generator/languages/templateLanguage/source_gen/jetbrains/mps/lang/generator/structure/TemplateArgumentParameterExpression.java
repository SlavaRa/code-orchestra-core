package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplateArgumentParameterExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression";
  public static final String PARAMETER = "parameter";

  public TemplateArgumentParameterExpression(SNode node) {
    super(node);
  }

  public TemplateParameterDeclaration getParameter() {
    return (TemplateParameterDeclaration) this.getReferent(TemplateParameterDeclaration.class, TemplateArgumentParameterExpression.PARAMETER);
  }

  public void setParameter(TemplateParameterDeclaration node) {
    super.setReferent(TemplateArgumentParameterExpression.PARAMETER, node);
  }

  public static TemplateArgumentParameterExpression newInstance(SModel sm, boolean init) {
    return (TemplateArgumentParameterExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplateArgumentParameterExpression newInstance(SModel sm) {
    return TemplateArgumentParameterExpression.newInstance(sm, false);
  }
}
