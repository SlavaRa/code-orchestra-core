package jetbrains.mps.lang.generator.generator.baseLanguage.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.CreateRootRuleContext;
import jetbrains.mps.lang.generator.generator.baseLanguage.template.util.GenUtil;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.AttributeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.IAttributeDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.generator.template.TemplateFunctionMethodName;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.generator.impl.GeneratorUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SReference;
import jetbrains.mps.baseLanguage.tuples.runtime.MultiTuple;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.SModelId;
import jetbrains.mps.smodel.SNodeId;
import jetbrains.mps.lang.pattern.behavior.PatternVarsUtil;
import jetbrains.mps.generator.template.ReferenceMacroContext;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.generator.template.IfMacroContext;
import org.apache.commons.lang.StringUtils;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.baseLanguage.behavior.ConceptFunction_Behavior;
import jetbrains.mps.baseLanguage.closures.constraints.ClassifierTypeUtil;
import jetbrains.mps.generator.template.TemplateQueryContext;
import jetbrains.mps.internal.collections.runtime.ITranslator2;
import jetbrains.mps.internal.collections.runtime.ISelector;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import jetbrains.mps.generator.impl.GeneratorUtilEx;
import jetbrains.mps.generator.template.MapSrcMacroPostProcContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.baseLanguage.behavior.IOperation_Behavior;
import jetbrains.mps.typesystem.inference.TypeChecker;
import jetbrains.mps.lang.generator.generationContext.behavior.GenerationContextOp_PatternRef_Behavior;
import jetbrains.mps.lang.generator.behavior.IGeneratorParameter_Behavior;

public class QueriesGenerated {
  public static boolean createRootRule_Condition_3076445114127780910(final IOperationContext operationContext, final CreateRootRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean baseMappingRule_Condition_6304885153124981873(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean baseMappingRule_Condition_747214206848656615(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel()) && AttributeOperations.getAttribute(_context.getNode(), new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null;
  }

  public static boolean baseMappingRule_Condition_1147906725605262632(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean baseMappingRule_Condition_3423901696829298384(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean baseMappingRule_Condition_9196441569928515105(final IOperationContext operationContext, final BaseMappingRuleContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static Object propertyMacro_GetPropertyValue_1167762379110(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.createRootRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167765482559(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167764877550(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.propertyMacro_GetPropertyValue(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167770891051(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.referenceMacro_GetReferent(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167946761277(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.ifMacro_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1167952935373(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1168025033018(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1170727064429(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1184374857703(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.templateFragment_ContextNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1184617630764(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.weaving_MappingRule_ContextNodeQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1195504684817(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mappingScript_CodeBlock(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1219959436950(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.dropRootRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1225233707647(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_3666777440507052042(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.templateArgumentQuery(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1434091819680828190(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.patternRule_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_6304885153124990689(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_6304885153124990610(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_5898140574782661229(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823668(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823760(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823778(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_1669041086427295498(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413825597(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "applyPart" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823535(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "my" + NameUtil.capitalize(SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823604(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_5070605274413823491(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.asIdentifier("Template" + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237359(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237422(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "loopList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237438(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237472(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237520(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237539(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676237604(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207080(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getConceptFqName();
  }

  public static Object propertyMacro_GetPropertyValue_8285036680620207089(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tnode" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183477(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(_context.getNode()));
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183492(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("propertyName");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183502(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.escapeString(_context.getNode().getProperty("propertyValue"));
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183606(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String role = AttributeOperations.getPropertyName(_context.getNode());
    return role;
  }

  public static Object propertyMacro_GetPropertyValue_2053864656213145643(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String role = AttributeOperations.getPropertyName(_context.getNode());
    SNode original = SNodeOperations.getParent(_context.getNode());
    return original.getProperty(role);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183723(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183735(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetModel");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398183746(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("targetNodeId");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398184008(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("role");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398184031(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("templateNodeId");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398184040(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Integer.valueOf(_context.getNode().getProperty("parentIndex"));
  }

  public static Object propertyMacro_GetPropertyValue_4565390460241594511(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getProperty("resolveInfo");
  }

  public static Object propertyMacro_GetPropertyValue_1503590073461987862(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return AttributeOperations.getLinkRole(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_3231277868798079492(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SReference ref = SNodeOperations.getParent(_context.getNode()).getReference(AttributeOperations.getLinkRole(_context.getNode()));
    if (ref == null) {
      return "";
    }
    SNode target = ref.getTargetNodeSilently();
    if (target != null && SNodeOperations.isInstanceOf(target, "jetbrains.mps.lang.core.structure.INamedConcept")) {
      return SPropertyOperations.getString(SNodeOperations.cast(target, "jetbrains.mps.lang.core.structure.INamedConcept"), "name");
    }
    String resolveInfo = ref.getResolveInfo();
    if (resolveInfo != null) {
      return resolveInfo;
    }
    return "";
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398184118(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return AttributeOperations.getLinkRole(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_1246578104714226066(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_1246578104714225930(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "child" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_1246578104714225971(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getNode().getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071119405(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501654(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "callInputNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501738(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501766(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501844(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676501945(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502083(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088682(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088745(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "copySrcInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_439634159192472878(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(SNodeOperations.getParent(_context.getNode())));
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088787(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_747214206848678950(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.asIdentifier("Template" + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_4429320018138031261(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.asIdentifier("Mapping" + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_9196441569928351552(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_7141985354395202013(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "topPriorityGroup");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398088841(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398089017(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "copyListInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_439634159192472864(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(SNodeOperations.getParent(_context.getNode())));
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398089089(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8961331321403205875(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502773(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502791(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String name = "context" + ((int[]) _context.getVariable("varindex"))[0];
    _context.putTransientObject(MultiTuple.<String,SNode>from("contextvar", _context.getNode()), name);
    return name;
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502956(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503179(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503236(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503306(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "sourceNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503352(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503380(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503434(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071058928(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502136(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "callInputNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502220(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502248(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502296(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "templateNode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502326(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502464(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676502639(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503594(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503670(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "sourceList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503685(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503728(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503747(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676503774(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_6612261708901109136(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()).getConceptFqName();
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504012(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504133(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "mapSrcOutput" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819675976134(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504315(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "switchInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_8620110459970686872(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "switch" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504405(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_8371596541808966728(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504463(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8371596541808998395(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504534(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_99767819676504612(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_4155486055398308291(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605420839(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605070488(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_2226924809855981419(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832360(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832376(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "weaveEachList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832089(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832117(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832178(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_3571912445009832410(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "innerResult" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225580(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "reductionMappingRule", true)).indexOf(_context.getNode());
    } else if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateSwitch")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateSwitch"), "reductionMappingRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("ReductionRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "ReductionRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225631(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "applyToConceptInheritors");
  }

  public static Object propertyMacro_GetPropertyValue_1147906725605225643(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655049561(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590843(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "applyToConceptInheritors");
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590856(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577590870(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "keepSourceRoot", "true", null);
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655049511(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_1949333268577554902(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "rootMappingRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("RootMappingRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "RootMappingRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_1940510396026567414(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.asIdentifier("Switch" + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_3876694689067951568(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageText");
  }

  public static Object propertyMacro_GetPropertyValue_3876694689067952313(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageText");
  }

  public static Object propertyMacro_GetPropertyValue_3876694689067952360(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageText");
  }

  public static Object propertyMacro_GetPropertyValue_6612261708901143234(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SNodeOperations.getParent(_context.getNode()).getConceptFqName();
  }

  public static Object propertyMacro_GetPropertyValue_8196331069071255561(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2321430363679348482(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "mapSrcOutput" + ++((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_99767819676169157(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode original = _context.getOriginalCopiedInputNode(_context.getNode());
    return SNodeOperations.getModel(original).getSModelReference().toString();
  }

  public static Object propertyMacro_GetPropertyValue_99767819676169177(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode original = _context.getOriginalCopiedInputNode(_context.getNode());
    return original.getSNodeId().toString();
  }

  public static Object propertyMacro_GetPropertyValue_5659786285834812664(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "parameter", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655049416(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "label", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2802008106680387215(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "createRootRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("CreateRootRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "CreateRootRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_2802008106680387170(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "dropRootRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("DropRootRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "DropRootRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_59720043761735572(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_59720043761735755(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return NameUtil.nodeFQName(SLinkOperations.getTarget(_context.getNode(), "applicableConcept", false));
  }

  public static Object propertyMacro_GetPropertyValue_59720043761737692(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "applyToConceptInheritors");
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655150455(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2802008106680349013(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "weavingMappingRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("WeavingRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "WeavingRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_330395710727988798(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "pattern", true), "patternNode", true).getConceptFqName();
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655049724(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2802008106680387020(final IOperationContext operationContext, final PropertyMacroContext _context) {
    int index = -1;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
      index = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.MappingConfiguration"), "patternReductionRule", true)).indexOf(_context.getNode());
    }
    if (index == -1) {
      return _context.createUniqueName("PatternRule", SNodeOperations.getParent(_context.getNode()));
    }
    return "PatternRule" + index;
  }

  public static Object propertyMacro_GetPropertyValue_7635689088545006189(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getLongName();
  }

  public static Object propertyMacro_GetPropertyValue_330583488647110451(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getLongName();
  }

  public static Object propertyMacro_GetPropertyValue_330583488647110468(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getStereotype();
  }

  public static Object propertyMacro_GetPropertyValue_330583488647058978(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Long.toString(((SModelId.RegularSModelId) _context.getOriginalInputModel().getSModelId()).getId().getMostSignificantBits()) + "L";
  }

  public static Object propertyMacro_GetPropertyValue_330583488647059004(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Long.toString(((SModelId.RegularSModelId) _context.getOriginalInputModel().getSModelId()).getId().getLeastSignificantBits()) + "L";
  }

  public static Object propertyMacro_GetPropertyValue_330583488647110434(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return _context.getOriginalInputModel().getSModelId().toString();
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925496631(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).count();
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925496669(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateDeclaration"), "parameter", true)).indexOf(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925496601(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Long.toString(((SNodeId.Regular) _context.getNode().getSNodeId()).getId()) + "L";
  }

  public static Object propertyMacro_GetPropertyValue_5289988192764625417(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return Long.toString(((SNodeId.Regular) _context.getNode().getSNodeId()).getId()) + "L";
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925496728(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).count();
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925496766(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()), "jetbrains.mps.lang.generator.structure.TemplateDeclaration"), "parameter", true)).indexOf(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_5577795813925497656(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ((SNodeId.Foreign) _context.getNode().getSNodeId()).getId();
  }

  public static Object propertyMacro_GetPropertyValue_5289988192764625640(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return ((SNodeId.Foreign) _context.getNode().getSNodeId()).getId();
  }

  public static Object propertyMacro_GetPropertyValue_8371596541809419362(final IOperationContext operationContext, final PropertyMacroContext _context) {
    SNode vardecl = null;
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression"), "patternVarDecl", false);
    } else if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPropertyPatternRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPropertyPatternRefExpression"), "propertyPattern", false);
    } else if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentLinkPatternRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentLinkPatternRefExpression"), "patternVar", false);
    }
    if ((vardecl == null)) {
      _context.showErrorMessage(_context.getNode(), "unknown pattern reference");
      return "????";
    }
    return PatternVarsUtil.getFieldName(vardecl);
  }

  public static Object propertyMacro_GetPropertyValue_9191117361655150336(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_1368513600865828086(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String varname = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    String val = ((varname.startsWith("tnode") ?
      "tnodepart" :
      "tlistpart"
    )) + ((Integer) _context.getVariable("index"));
    _context.putTransientObject(_context.getNode(), val);
    return val;
  }

  public static Object propertyMacro_GetPropertyValue_1368513600865907600(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "weaveTf" + ((Integer) _context.getVariable("index"));
  }

  public static Object propertyMacro_GetPropertyValue_1368513600865905530(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "contextNode" + ((Integer) _context.getVariable("index"));
  }

  public static Object propertyMacro_GetPropertyValue_1368513600865902766(final IOperationContext operationContext, final PropertyMacroContext _context) {
    // TODO check 
    return SNodeOperations.getParent(_context.getNode()).getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_1368513600865961746(final IOperationContext operationContext, final PropertyMacroContext _context) {
    // TODO check 
    return SNodeOperations.getParent(_context.getNode()).getRole_();
  }

  public static Object propertyMacro_GetPropertyValue_9196441569928398217(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "'" + SPropertyOperations.getString(_context.getNode(), "name") + "' (" + _context.getOriginalInputModel().getSModelFqName() + ")";
  }

  public static Object propertyMacro_GetPropertyValue_9196441569928383193(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getBoolean(_context.getNode(), "modifiesModel");
  }

  public static Object propertyMacro_GetPropertyValue_9196441569928602697(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.asIdentifier("Script" + SPropertyOperations.getString(_context.getNode(), "name"));
  }

  public static Object propertyMacro_GetPropertyValue_6389702176794111045(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String n = "applyNode" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("toExtract"))).indexOf(_context.getNode());
    _context.putTransientObject(MultiTuple.<String,SNode>from("meth", _context.getNode()), n);
    return n;
  }

  public static Object propertyMacro_GetPropertyValue_6389702176794341064(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String name = "tlist" + ++((int[]) _context.getVariable("varindex"))[0];
    _context.putTransientObject(_context.getNode(), name);
    return name;
  }

  public static Object propertyMacro_GetPropertyValue_2760176984813718888(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_2760176984813718924(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_2760176984813718936(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String name = "context" + ((int[]) _context.getVariable("varindex"))[0];
    return name;
  }

  public static Object propertyMacro_GetPropertyValue_2760176984813719532(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_7830515785164762779(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.mappingConfiguration_Condition(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_787641416589782025(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return TemplateFunctionMethodName.insertMacro_Query(_context.getNode());
  }

  public static Object propertyMacro_GetPropertyValue_787641416589878848(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tnode" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_4672632171991713666(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "insertInput" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_4672632171991748257(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_3462145372628093855(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return GenUtil.saveVar(_context, _context.getNode(), "tlist" + ++((int[]) _context.getVariable("varindex"))[0]);
  }

  public static Object propertyMacro_GetPropertyValue_3462145372628093889(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_3462145372628093901(final IOperationContext operationContext, final PropertyMacroContext _context) {
    String name = "context" + ((int[]) _context.getVariable("varindex"))[0];
    return name;
  }

  public static Object propertyMacro_GetPropertyValue_3462145372628094067(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_812193811988887293(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "outputContextVar" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_812193811988884565(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "weaveList" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_812193811988884584(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "itnode" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_812193811988884612(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "inputChanged" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object propertyMacro_GetPropertyValue_812193811988884660(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name");
  }

  public static Object propertyMacro_GetPropertyValue_812193811988884673(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "weaveContext" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object referenceMacro_GetReferent_3239620430841219333(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    // method parameter 
    return "_context";
  }

  public static Object referenceMacro_GetReferent_4112907264515185565(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_5898140574782692882(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
  }

  public static Object referenceMacro_GetReferent_1830209218526504981(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    return name;
  }

  public static Object referenceMacro_GetReferent_5070605274413825727(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676237414(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676237591(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237635(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237672(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676237687(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2053864656213145618(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.propertyMacro_GetPropertyValue(SLinkOperations.getTarget(_context.getNode(), "propertyValueFunction", true));
  }

  public static Object referenceMacro_GetReferent_4155486055398184091(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode function = SLinkOperations.getTarget(_context.getNode(), "referentFunction", true);
    if ((function == null)) {
      _context.showErrorMessage(_context.getNode(), "no function in reference macro");
      return null;
    }
    return TemplateFunctionMethodName.referenceMacro_GetReferent(function);
  }

  public static Object referenceMacro_GetReferent_1246578104714226075(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar;
  }

  public static Object referenceMacro_GetReferent_1246578104714226025(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar;
  }

  public static Object referenceMacro_GetReferent_1246578104714225944(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar;
  }

  public static Object referenceMacro_GetReferent_99767819676501695(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_4155486055398088737(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_9196441569928526463(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "mappingScript", false), "mappingScript"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_9196441569928526547(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(), "mappingScript", false), "mappingScript"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_7440135992755201731(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mappingConfiguration_Condition(SLinkOperations.getTarget(_context.getNode(), "condition", true));
  }

  public static Object referenceMacro_GetReferent_4155486055398089009(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676502879(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502915(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502943(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676502983(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.ifMacro_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503072(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503130(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503162(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_99767819676503298(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676502177(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503662(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503832(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503854(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676503944(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676503981(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676503999(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504071(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676504092(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504164(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_99767819676504187(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504227(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_99767819676504307(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodeQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_6992377099006889725(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_6992377099006889761(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_6992377099006889776(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_6992377099006889634(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_6992377099006889667(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_6992377099006889577(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_8961331321403161971(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_8961331321403242048(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_8961331321403242155(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_8961331321403162191(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_8961331321403206158(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object referenceMacro_GetReferent_6553698511994325700(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "generatorMessage", true), "messageType", "error", "info")) {
      return "error";
    }
    if (SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "generatorMessage", true), "messageType", "warning", "info")) {
      return "warning";
    }
    return "info";
  }

  public static Object referenceMacro_GetReferent_1147906725605332182(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    SNode firstCase = ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first();
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(firstCase, "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_3846207671016008880(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_3846207671016008917(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_1147906725605332201(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_6210299652024764744(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024811140(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797438(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797496(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797526(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_6210299652024797584(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_3571912445009827127(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "sourceNodesQuery", true));
  }

  public static Object referenceMacro_GetReferent_1751251480823453085(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_9191117361655049641(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_8371596541809530169(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.templateArgumentQuery(SLinkOperations.getTarget(_context.getNode(), "query", true));
  }

  public static Object referenceMacro_GetReferent_59720043761728339(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_8626372016104475444(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("varname"));
  }

  public static Object referenceMacro_GetReferent_8626372016104475500(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("varname"));
  }

  public static Object referenceMacro_GetReferent_2321430363679348809(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_2321430363679348239(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_MapperFunction(SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348261(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679349185(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_2321430363679348353(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348390(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679349175(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("resultVar"));
  }

  public static Object referenceMacro_GetReferent_8196331069071255548(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348420(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348441(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348513(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mapSrcMacro_PostMapperFunction(SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true));
  }

  public static Object referenceMacro_GetReferent_2321430363679348536(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2321430363679348576(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_59720043761735723(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.createRootRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_59720043761735653(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.dropRootRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_59720043761737764(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.baseMappingRule_Condition(SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true));
  }

  public static Object referenceMacro_GetReferent_59720043761737798(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.weaving_MappingRule_ContextNodeQuery(SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_9191117361655150438(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_9191117361655150594(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_7057563018698266779(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_9191117361655150707(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_8371596541809104755(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.patternRule_Condition(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_9191117361655049707(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name;
  }

  public static Object referenceMacro_GetReferent_5577795813925496646(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_5289988192764625573(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_5577795813925496743(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_5289988192764625737(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(_context.getNode(), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_7664108699562529367(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "applyPart" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_7664108699562529851(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return "applyPart" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(_context.getNode());
  }

  public static Object referenceMacro_GetReferent_7664108699562529691(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    return "applyPart" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_7664108699562529310(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    return "applyPart" + Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(Sequence.fromIterable(selected).first());
  }

  public static Object referenceMacro_GetReferent_1368513600865905601(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.templateFragment_ContextNodeQuery(SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_5577795813925668091(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("template")), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_965589097447684341(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNodeByInputNodeAndMappingLabel(((SNode) _context.getVariable("template")), "templDeclarationClass"), "constructor", true)).first();
  }

  public static Object referenceMacro_GetReferent_812193811988926010(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("outputContextVar"));
  }

  public static Object referenceMacro_GetReferent_812193811988926040(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("outputContextVar"));
  }

  public static Object referenceMacro_GetReferent_7541765787360305649(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.mappingScript_CodeBlock(SLinkOperations.getTarget(_context.getNode(), "codeBlock", true));
  }

  public static Object referenceMacro_GetReferent_6389702176794341089(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return ((String) _context.getVariable("methName"));
  }

  public static Object referenceMacro_GetReferent_2760176984813719455(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2760176984813719491(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_2760176984813719519(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_4672632171991714855(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.insertMacro_Query(SLinkOperations.getTarget(_context.getNode(), "createNodeQuery", true));
  }

  public static Object referenceMacro_GetReferent_3462145372628093990(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_3462145372628094026(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_3462145372628094054(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
  }

  public static Object referenceMacro_GetReferent_812193811988884557(final IOperationContext operationContext, final ReferenceMacroContext _context) {
    return TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(SLinkOperations.getTarget(_context.getNode(), "nodesToWeaveQuery", true));
  }

  public static boolean ifMacro_Condition_8530225126180766850(final IOperationContext operationContext, final IfMacroContext _context) {
    return GenUtil.isGeneratable(_context.getOriginalInputModel());
  }

  public static boolean ifMacro_Condition_4112907264514926008(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_4112907264515185570(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_6389702176794336635(final IOperationContext operationContext, final IfMacroContext _context) {
    if (((Integer) _context.getVariable("macrosToSkip")) == 0 && ((int[]) _context.getVariable("varindex"))[0] > 0) {
      String methName = (String) _context.getTransientObject(MultiTuple.<String,SNode>from("meth", _context.getNode()));
      return methName != null;
    }
    return false;
  }

  public static boolean ifMacro_Condition_6389702176794336734(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.generator.structure.NodeMacro");
      }
    }).count() <= ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static boolean ifMacro_Condition_6304885153124996297(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_5898140574782661240(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_5070605274413823686(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_5070605274413823790(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_5070605274413825720(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_1669041086427295482(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null);
  }

  public static boolean ifMacro_Condition_7664108699562529990(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_1368513600865593839(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_99767819676237501(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676237613(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676237647(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_2053864656213145666(final IOperationContext operationContext, final IfMacroContext _context) {
    String role = AttributeOperations.getPropertyName(_context.getNode());
    SNode original = SNodeOperations.getParent(_context.getNode());
    return original.getProperty(role) != null;
  }

  public static boolean ifMacro_Condition_4155486055398183990(final IOperationContext operationContext, final IfMacroContext _context) {
    return eq_x583g4_a0a0vm(_context.getNode().getProperty("kind"), "normal");
  }

  public static boolean ifMacro_Condition_4155486055398184018(final IOperationContext operationContext, final IfMacroContext _context) {
    return eq_x583g4_a0a0wm(_context.getNode().getProperty("kind"), "parentIndex");
  }

  public static boolean ifMacro_Condition_1246578104714225920(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar != null && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1246578104714225980(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = (String) _context.getTransientObject(_context.getNode());
    return innervar != null && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_99767819676501704(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501719(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676501748(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501778(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676501954(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676501994(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502092(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502118(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676237041(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.LoopMacro");
  }

  public static boolean ifMacro_Condition_99767819676237072(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.IncludeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237103(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.CopySrcNodeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237134(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.CopySrcListMacro");
  }

  public static boolean ifMacro_Condition_99767819676237165(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.MapSrcListMacro");
  }

  public static boolean ifMacro_Condition_99767819676237196(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.MapSrcNodeMacro");
  }

  public static boolean ifMacro_Condition_99767819676237227(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.IfMacro");
  }

  public static boolean ifMacro_Condition_99767819676237258(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.SwitchMacro");
  }

  public static boolean ifMacro_Condition_99767819676237289(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateCallMacro");
  }

  public static boolean ifMacro_Condition_4672632171991782121(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InsertMacro");
  }

  public static boolean ifMacro_Condition_3462145372628095380(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.WeaveMacro");
  }

  public static boolean ifMacro_Condition_2760176984813713372(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.getConceptDeclaration(_context.getNode()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro") || SNodeOperations.getConceptDeclaration(_context.getNode()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.LabelMacro");
  }

  public static boolean ifMacro_Condition_4155486055398088768(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_330395710727937993(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "patternReductionRule", true)).isNotEmpty() || ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727937977(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "createRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727937961(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727937945(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "weavingMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938023(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dropRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526436(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "preMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526530(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "postMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938040(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "patternReductionRule", true)).isNotEmpty() || ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938056(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "createRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938072(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938088(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "weavingMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938104(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dropRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526511(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "preMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526569(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "postMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_7440135992755201738(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "condition", true) != null);
  }

  public static boolean ifMacro_Condition_330395710727938120(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "patternReductionRule", true)).isNotEmpty() || ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938147(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "createRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938165(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938183(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "weavingMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938201(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "dropRootRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526587(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "postMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9196441569928526600(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "preMappingScript", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_4155486055398089098(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502803(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502891(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676502965(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503088(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_99767819676503106(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676503188(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true));
    return name != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503220(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_4155486055398003984(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503333(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503362(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503392(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) || (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503510(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503522(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676502186(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502201(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502230(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502260(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502473(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502513(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676502648(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676502674(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676503709(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676503874(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503886(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676503896(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676503956(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676504021(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676504105(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676504199(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_99767819676504239(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null) && GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip"))) != null;
  }

  public static boolean ifMacro_Condition_99767819676504327(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_6992377099006889166(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false) != null) && (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false), "nullInputMessage", true) != null);
  }

  public static boolean ifMacro_Condition_6992377099006889184(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false) != null) && (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false), "nullInputMessage", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504378(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_8371596541808966722(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676504472(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null);
  }

  public static boolean ifMacro_Condition_6992377099006889737(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_8371596541808998376(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_99767819676504543(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_6992377099006889647(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_99767819676504575(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) == null);
  }

  public static boolean ifMacro_Condition_99767819676504589(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_99767819676504622(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_8961331321403162002(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return Sequence.fromIterable(selected).all(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        String name = (String) _context.getTransientObject(it);
        return name.startsWith("tnode");
      }
    });
  }

  public static boolean ifMacro_Condition_8961331321403242082(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    String var = (String) _context.getTransientObject(Sequence.fromIterable(selected).first());
    return Sequence.fromIterable(selected).count() == 1 && var.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_8961331321403162164(final IOperationContext operationContext, final IfMacroContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    }).count() > 1;
  }

  public static boolean ifMacro_Condition_8961331321403162224(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });

    return Sequence.fromIterable(selected).count() == 1;
  }

  public static boolean ifMacro_Condition_8961331321403206165(final IOperationContext operationContext, final IfMacroContext _context) {
    return !("context".equals(((String) _context.getVariable("contextVar"))));
  }

  public static boolean ifMacro_Condition_4155486055398340950(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.AbandonInput_RuleConsequence");
  }

  public static boolean ifMacro_Condition_4155486055398340968(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.DismissTopMappingRule");
  }

  public static boolean ifMacro_Condition_4155486055398340979(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineSwitch_RuleConsequence");
  }

  public static boolean ifMacro_Condition_4155486055398341004(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence");
  }

  public static boolean ifMacro_Condition_4155486055398341029(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence");
  }

  public static boolean ifMacro_Condition_4155486055398341054(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateDeclarationReference");
  }

  public static boolean ifMacro_Condition_5363042723710946852(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "generatorMessage", true) != null);
  }

  public static boolean ifMacro_Condition_3846207671016008896(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_3846207671016008933(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024811114(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_6210299652024764760(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797454(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797472(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1147906725605332260(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_1147906725605332270(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).count() > 0;
  }

  public static boolean ifMacro_Condition_6210299652024797542(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_6210299652024797560(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_1147906725605070316(final IOperationContext operationContext, final IfMacroContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
    Iterable<SNode> selected = ListSequence.fromList(fragments).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    if (Sequence.fromIterable(selected).count() == 1) {
      String varname = (String) _context.getTransientObject(SNodeOperations.getParent(Sequence.fromIterable(selected).first()));
      _context.putTransientObject(_context.getNode(), varname);
      return false;
    }
    return true;
  }

  public static boolean ifMacro_Condition_2226924809856058005(final IOperationContext operationContext, final IfMacroContext _context) {
    String varname = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "templateNode", true));
    if (varname != null) {
      _context.putTransientObject(_context.getNode(), varname);
    }
    return false;
  }

  public static boolean ifMacro_Condition_1751251480823453109(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_9191117361655049635(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_9191117361655049581(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null && (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name"));
  }

  public static boolean ifMacro_Condition_8371596541809145634(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_5412006700504157845(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression");
  }

  public static boolean ifMacro_Condition_8371596541809191580(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternRef");
  }

  public static boolean ifMacro_Condition_5659786285834775950(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression");
  }

  public static boolean ifMacro_Condition_5659786285834776061(final IOperationContext operationContext, final IfMacroContext _context) {
    return !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression")) && !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression")) && !(SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternRef"));
  }

  public static boolean ifMacro_Condition_59720043761728363(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_9191117361655049520(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name"));
  }

  public static boolean ifMacro_Condition_330395710727938219(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727938235(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_330395710727889096(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "modifiedSwitch", false) != null);
  }

  public static boolean ifMacro_Condition_330395710727938251(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true)).isNotEmpty();
  }

  public static boolean ifMacro_Condition_418849768498866743(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_4723636356214946463(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true) != null);
  }

  public static boolean ifMacro_Condition_3876694689067951584(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true) != null) && SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageType", "error", "info");
  }

  public static boolean ifMacro_Condition_3876694689067952329(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true) != null) && SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageType", "info", "info");
  }

  public static boolean ifMacro_Condition_3876694689067952369(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true) != null) && SPropertyOperations.hasValue(SLinkOperations.getTarget(_context.getNode(), "nullInputMessage", true), "messageType", "warning", "info");
  }

  public static boolean ifMacro_Condition_8626372016104475454(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("varname")) != null && ((String) _context.getVariable("varname")).startsWith("tnode");
  }

  public static boolean ifMacro_Condition_8626372016104475477(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("varname")) != null && ((String) _context.getVariable("varname")).startsWith("tlist");
  }

  public static boolean ifMacro_Condition_2321430363679348283(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_2321430363679348295(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) != null);
  }

  public static boolean ifMacro_Condition_2321430363679348305(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null);
  }

  public static boolean ifMacro_Condition_2321430363679348365(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_8196331069071255570(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar != null && (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_2321430363679348454(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_2321430363679348548(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return (SLinkOperations.getTarget(_context.getNode(), "postMapperFunction", true) != null) && innervar.startsWith("tlist");
  }

  public static boolean ifMacro_Condition_2321430363679348588(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mapperFunction", true) == null) && GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip"))) != null;
  }

  public static boolean ifMacro_Condition_59720043761735736(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_9191117361655049432(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "label", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "label", false), "name"));
  }

  public static boolean ifMacro_Condition_59720043761735644(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_59720043761737725(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "conditionFunction", true) != null);
  }

  public static boolean ifMacro_Condition_59720043761737818(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_9191117361655150425(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_9191117361655150650(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_9191117361655150464(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null && (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name"));
  }

  public static boolean ifMacro_Condition_9191117361655150591(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_9191117361655150505(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_9191117361655049694(final IOperationContext operationContext, final IfMacroContext _context) {
    return false;
  }

  public static boolean ifMacro_Condition_9191117361655049733(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null && (SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false), "name"));
  }

  public static boolean ifMacro_Condition_8371596541809114446(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
    return name != null;
  }

  public static boolean ifMacro_Condition_330583488647010333(final IOperationContext operationContext, final IfMacroContext _context) {
    return _context.getOriginalInputModel().getSModelId() instanceof SModelId.RegularSModelId;
  }

  public static boolean ifMacro_Condition_5577795813925497619(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Foreign;
      }
    }).isNotEmpty() || ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.core.structure.INamedConcept")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null;
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Foreign;
      }
    }).isNotEmpty();
  }

  public static boolean ifMacro_Condition_5577795813925497600(final IOperationContext operationContext, final IfMacroContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateDeclaration")).isNotEmpty() || ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.core.structure.INamedConcept")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null;
      }
    }).isNotEmpty();
  }

  public static boolean ifMacro_Condition_9191117361655150285(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateDeclarationReference");
  }

  public static boolean ifMacro_Condition_9191117361655150298(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.WeaveEach_RuleConsequence");
  }

  public static boolean ifMacro_Condition_7664108699562497131(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    return Sequence.fromIterable(selected).all(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        String name = (String) _context.getTransientObject(SNodeOperations.getParent(it));
        return name.startsWith("tnode");
      }
    });
  }

  public static boolean ifMacro_Condition_7664108699562529595(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    if (Sequence.fromIterable(selected).count() == 1) {
      String var = (String) _context.getTransientObject(SNodeOperations.getParent(Sequence.fromIterable(selected).first()));
      return var.startsWith("tlist");
    }
    return false;
  }

  public static boolean ifMacro_Condition_7664108699562497291(final IOperationContext operationContext, final IfMacroContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    }).count() > 1;
  }

  public static boolean ifMacro_Condition_7664108699562497351(final IOperationContext operationContext, final IfMacroContext _context) {
    Iterable<SNode> selected = Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });

    return Sequence.fromIterable(selected).count() == 1;
  }

  public static boolean ifMacro_Condition_1368513600865828059(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    return !(name.startsWith("tnode"));
  }

  public static boolean ifMacro_Condition_1368513600865905920(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_1368513600865906183(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_1368513600865902729(final IOperationContext operationContext, final IfMacroContext _context) {
    String name = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    return !(name.startsWith("tnode"));
  }

  public static boolean ifMacro_Condition_1368513600865961734(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "contextNodeQuery", true) != null);
  }

  public static boolean ifMacro_Condition_1520710884206582570(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("contextVar")) != null;
  }

  public static boolean ifMacro_Condition_1520710884206584117(final IOperationContext operationContext, final IfMacroContext _context) {
    boolean directRef = SNodeOperations.getModel(((SNode) _context.getVariable("template"))) == SNodeOperations.getModel(_context.getNode());
    if (directRef && !(SNodeOperations.isInstanceOf(((SNode) _context.getVariable("template")), "jetbrains.mps.lang.generator.structure.TemplateDeclaration"))) {
      // check template 
      if (AttributeOperations.getAttribute(((SNode) _context.getVariable("template")), new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) == null) {
        _context.showErrorMessage(_context.getNode(), "cannot refer template root without template annotation");
        return false;
      }
    }
    return directRef;
  }

  public static boolean ifMacro_Condition_1520710884206584166(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("contextVar")) != null;
  }

  public static boolean ifMacro_Condition_965589097447684377(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("contextVar")) != null;
  }

  public static boolean ifMacro_Condition_812193811988887337(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("outputContextVar")).equals("outputContextNode");
  }

  public static boolean ifMacro_Condition_965589097447684398(final IOperationContext operationContext, final IfMacroContext _context) {
    return SNodeOperations.getModel(((SNode) _context.getVariable("template"))) == SNodeOperations.getModel(_context.getNode());
  }

  public static boolean ifMacro_Condition_965589097447684430(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("contextVar")) != null;
  }

  public static boolean ifMacro_Condition_812193811988926028(final IOperationContext operationContext, final IfMacroContext _context) {
    return ((String) _context.getVariable("outputContextVar")).equals("outputContextNode");
  }

  public static boolean ifMacro_Condition_9196441569928383206(final IOperationContext operationContext, final IfMacroContext _context) {
    return SPropertyOperations.hasValue(_context.getNode(), "scriptKind", "pre_processing", "post_processing");
  }

  public static boolean ifMacro_Condition_2760176984813718960(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_2760176984813719467(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_2760176984813719541(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_4672632171991748266(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_3462145372628093916(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_3462145372628094002(final IOperationContext operationContext, final IfMacroContext _context) {
    String innervar = GenUtil.getVar(_context, SNodeOperations.getParent(_context.getNode()), ((Integer) _context.getVariable("macrosToSkip")));
    return innervar.startsWith("tnode");
  }

  public static boolean ifMacro_Condition_3462145372628094076(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_812193811988884641(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static boolean ifMacro_Condition_812193811988885629(final IOperationContext operationContext, final IfMacroContext _context) {
    return (SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"));
  }

  public static SNode sourceNodeQuery_1168025917226(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025905128(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025932423(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025938897(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025925887(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025947268(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1168025330833(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1170727064418(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1184374857693(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1184617630754(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1195504684807(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1219959436940(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_1225233707637(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_3666777440507052032(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_304293736224471767(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "pattern", true);
  }

  public static SNode sourceNodeQuery_6389702176794336771(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ListSequence.fromList(ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "jetbrains.mps.lang.generator.structure.NodeMacro");
      }
    }).toListSequence()).getElement(((Integer) _context.getVariable("macrosToSkip")));
  }

  public static SNode sourceNodeQuery_6304885153124996375(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_5070605274413823824(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_5070605274413823521(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static SNode sourceNodeQuery_5070605274413823590(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "type", true);
  }

  public static SNode sourceNodeQuery_99767819676237576(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_4565390460241641355(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode().getReferent("originalNode");
  }

  public static SNode sourceNodeQuery_1246578104714226092(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_1246578104714225962(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_4155486055398088643(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static SNode sourceNodeQuery_4155486055398088655(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static SNode sourceNodeQuery_99767819676502867(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_99767819676503060(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "alternativeConsequence", true);
  }

  public static SNode sourceNodeQuery_99767819676502289(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static SNode sourceNodeQuery_99767819676503930(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_4155486055398088668(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false);
  }

  public static SNode sourceNodeQuery_6992377099006889711(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_8371596541808998365(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateSwitch", false);
  }

  public static SNode sourceNodeQuery_6992377099006889237(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_1503590073461987922(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_1147906725605332405(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).first(), "caseConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332333(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "caseConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332335(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_1147906725605332344(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_2226924809856057992(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateNode", true);
  }

  public static SNode sourceNodeQuery_8371596541809145605(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true) == null)) {
      _context.showErrorMessage(_context.getNode(), "no consequence in reduction rule");
    }
    return SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true);
  }

  public static SNode sourceNodeQuery_8371596541809530209(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode typeNode = ConceptFunction_Behavior.call_getExpectedReturnType_1213877374441(SLinkOperations.getTarget(_context.getNode(), "query", true));
    if (SNodeOperations.isInstanceOf(typeNode, "jetbrains.mps.baseLanguage.structure.Type")) {
      SNode classifierType = ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.cast(typeNode, "jetbrains.mps.baseLanguage.structure.Type"));
      return ((classifierType != null) ?
        classifierType :
        typeNode
      );
    }
    return typeNode;
  }

  public static SNode sourceNodeQuery_5659786285834776071(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return _context.getNode();
  }

  public static SNode sourceNodeQuery_330395710727889086(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "modifiedSwitch", false);
  }

  public static SNode sourceNodeQuery_418849768498945717(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true);
  }

  public static SNode sourceNodeQuery_2321430363679348339(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_5659786285834812682(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode classifierType = ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "parameter", false), "type", true));
    return ((classifierType != null) ?
      classifierType :
      SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "parameter", false), "type", true)
    );
  }

  public static SNode sourceNodeQuery_9191117361655150401(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true) == null)) {
      _context.showErrorMessage(_context.getNode(), "no consequence in weaving rule");
    }
    return SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true);
  }

  public static SNode sourceNodeQuery_8371596541809114417(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true) == null)) {
      _context.showErrorMessage(_context.getNode(), "no consequence in pattern rule");
    }
    return SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true);
  }

  public static SNode sourceNodeQuery_5577795813925496660(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode classifierType = ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(_context.getNode(), "type", true));
    return ((classifierType != null) ?
      classifierType :
      SLinkOperations.getTarget(_context.getNode(), "type", true)
    );
  }

  public static SNode sourceNodeQuery_5577795813925496757(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode classifierType = ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(_context.getNode(), "type", true));
    return ((classifierType != null) ?
      classifierType :
      SLinkOperations.getTarget(_context.getNode(), "type", true)
    );
  }

  public static SNode sourceNodeQuery_8371596541809419427(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    SNode vardecl = null;
    if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression"), "patternVarDecl", false);
    } else if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPropertyPatternRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentPropertyPatternRefExpression"), "propertyPattern", false);
    } else if (SNodeOperations.isInstanceOf(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentLinkPatternRefExpression")) {
      vardecl = SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateArgumentLinkPatternRefExpression"), "patternVar", false);
    }
    if ((vardecl == null)) {
      _context.showErrorMessage(_context.getNode(), "unknown pattern reference");
    }
    SNode res = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType", null);
    SLinkOperations.setTarget(res, "classifier", PatternVarsUtil.getFieldTypeReference(vardecl), false);
    return res;
  }

  public static SNode sourceNodeQuery_8124707847641033598(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("template"));
  }

  public static SNode sourceNodeQuery_965589097447684418(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return ((SNode) _context.getVariable("template"));
  }

  public static SNode sourceNodeQuery_2760176984813719443(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_7830515785164762769(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_787641416589782015(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "body", true);
  }

  public static SNode sourceNodeQuery_3462145372628093978(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SNodeOperations.getParent(_context.getNode());
  }

  public static SNode sourceNodeQuery_812193811988884863(final IOperationContext operationContext, final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true);
  }

  public static Object templateArgumentQuery_5070605274413823453(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
  }

  public static Object templateArgumentQuery_5070605274413823457(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_6389702176794336763(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip")) + 1;
  }

  public static Object templateArgumentQuery_6389702176794341072(final IOperationContext operationContext, final TemplateQueryContext _context) {
    String methName = (String) _context.getTransientObject(MultiTuple.<String,SNode>from("meth", _context.getNode()));
    return methName;
  }

  public static Object templateArgumentQuery_3818613486877139978(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_6304885153124996475(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null)) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_6389702176794275053(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).translate(new ITranslator2<SNode, SNode>() {
      public Iterable<SNode> translate(SNode it) {
        return SNodeOperations.getDescendants(it, "jetbrains.mps.lang.generator.structure.MapSrcNodeMacro", false, new String[]{});
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "mapperFunction", true) == null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.getParent(it);
      }
    }).distinct();
  }

  public static Object templateArgumentQuery_5070605274413823801(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "labelDeclaration", false) != null)) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return "context";
  }

  public static Object templateArgumentQuery_7664108699562530008(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "parameter", true)).isNotEmpty() ?
      "contextWithParams" :
      "context"
    );
  }

  public static Object templateArgumentQuery_1368513600865828224(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getNode(), "jetbrains.mps.lang.generator.structure.TemplateDeclaration", false, false), "parameter", true)).isNotEmpty() ?
      "contextWithParams" :
      "context"
    );
  }

  public static Object templateArgumentQuery_1368513600865828248(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).indexOf(_context.getNode());
  }

  public static Object templateArgumentQuery_1368513600865760236(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Iterable<SNode>) _context.getVariable("fragments"));
  }

  public static Object templateArgumentQuery_99767819676237552(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676237563(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676237570(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_4155486055398183467(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2053864656213145634(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2053864656213145700(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_4155486055398184052(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_4155486055398184129(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676501836(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1520710884206584289(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_1520710884206584295(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static Object templateArgumentQuery_1520710884206584349(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_1520710884206584384(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "includeTemplate", false);
  }

  public static Object templateArgumentQuery_6389702176794129777(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), "jetbrains.mps.lang.generator.structure.MapSrcNodeMacro", false, new String[]{})).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return (SLinkOperations.getTarget(it, "mapperFunction", true) == null);
      }
    }).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.getParent(it);
      }
    }).distinct();
  }

  public static Object templateArgumentQuery_747214206848667636(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_621922975518066501(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object templateArgumentQuery_4155486055398088999(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502824(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676502854(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676502861(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676502934(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503010(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503024(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return (String) _context.getTransientObject(MultiTuple.<String,SNode>from("contextvar", _context.getNode()));
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503153(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503277(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503288(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503373(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503426(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_99767819676503459(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503470(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "tlist" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676503481(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_99767819676503488(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_99767819676503532(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name")) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_99767819676503560(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "tlist" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_99767819676502167(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1520710884206582504(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_1520710884206582530(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Object templateArgumentQuery_1520710884206582537(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_1520710884206582440(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) || (SLinkOperations.getTarget(_context.getNode(), "sourceNodeQuery", true) != null) ?
      "context" + ((int[]) _context.getVariable("varindex"))[0] :
      ((String) _context.getVariable("contextVar"))
    );
  }

  public static Object templateArgumentQuery_1520710884206582466(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Object templateArgumentQuery_1520710884206582474(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_99767819676503906(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_1147906725605332286(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1147906725605332300(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_1147906725605070288(final IOperationContext operationContext, final TemplateQueryContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});

    return ListSequence.fromList(fragments).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return SNodeOperations.getParent(it);
      }
    });
  }

  public static Object templateArgumentQuery_1520710884206584411(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Object templateArgumentQuery_1520710884206584422(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_965589097447685601(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "context" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_965589097447685615(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_8371596541809145598(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_621922975518109131(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
  }

  public static Object templateArgumentQuery_8371596541809530183(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_8371596541809530194(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_1520710884206584397(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_418849768498866662(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_621922975518073432(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "defaultConsequence", true));
  }

  public static Object templateArgumentQuery_1520710884206584276(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "templateNode", false);
  }

  public static Object templateArgumentQuery_9191117361655150394(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_8371596541809114410(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_621922975518105039(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (String) _context.getTransientObject(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true));
  }

  public static Object templateArgumentQuery_965589097447685629(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "actualArgument", true);
  }

  public static Object templateArgumentQuery_965589097447685640(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "template", false);
  }

  public static Object templateArgumentQuery_6389702176794111094(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return new int[]{0};
  }

  public static Object templateArgumentQuery_621922975518066483(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return (String) _context.getTransientObject(_context.getNode());
  }

  public static Object templateArgumentQuery_2760176984813719400(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_2760176984813719430(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_2760176984813719437(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_2760176984813719510(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_3462145372628093935(final IOperationContext operationContext, final TemplateQueryContext _context) {
    if ((SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false) != null) && StringUtils.isNotEmpty(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), "mappingLabel", false), "name"))) {
      return "context" + ((int[]) _context.getVariable("varindex"))[0];
    }
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_3462145372628093965(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((int[]) _context.getVariable("varindex"));
  }

  public static Object templateArgumentQuery_3462145372628093972(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((Integer) _context.getVariable("macrosToSkip"));
  }

  public static Object templateArgumentQuery_3462145372628094045(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_812193811988884547(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return ((String) _context.getVariable("contextVar"));
  }

  public static Object templateArgumentQuery_812193811988887236(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "weaveContext" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Object templateArgumentQuery_812193811988887248(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true), "actualArgument", true);
  }

  public static Object templateArgumentQuery_812193811988887252(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "ruleConsequence", true), "template", false);
  }

  public static Object templateArgumentQuery_812193811988887317(final IOperationContext operationContext, final TemplateQueryContext _context) {
    return "outputContextVar" + ((int[]) _context.getVariable("varindex"))[0];
  }

  public static Iterable sourceNodesQuery_6220262973299791769(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.CreateRootRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300018079(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.DropRootRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300153028(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.BaseMappingRule_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300285845(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.PropertyMacro_GetPropertyValue");
  }

  public static Iterable sourceNodesQuery_6220262973300421489(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.ReferenceMacro_GetReferent");
  }

  public static Iterable sourceNodesQuery_6220262973300680629(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.IfMacro_Condition");
  }

  public static Iterable sourceNodesQuery_6220262973300780494(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodeQuery");
  }

  public static Iterable sourceNodesQuery_3666777440507050292(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateArgumentQuery");
  }

  public static Iterable sourceNodesQuery_6220262973300880378(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodesQuery");
  }

  public static Iterable sourceNodesQuery_6220262973300980279(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MapSrcMacro_MapperFunction");
  }

  public static Iterable sourceNodesQuery_6220262973301080202(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MapSrcMacro_PostMapperFunction");
  }

  public static Iterable sourceNodesQuery_6220262973301180144(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateFragment_ContextNodeQuery");
  }

  public static Iterable sourceNodesQuery_6220262973301313062(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.Weaving_MappingRule_ContextNodeQuery");
  }

  public static Iterable sourceNodesQuery_6220262973301411692(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MappingScript_CodeBlock");
  }

  public static Iterable sourceNodesQuery_1434091819680824356(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule");
  }

  public static Iterable sourceNodesQuery_8517820026009038740(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MappingConfiguration_Condition");
  }

  public static Iterable sourceNodesQuery_787641416589814799(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getNodes(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.InsertMacro_CreateNodeQuery");
  }

  public static Iterable sourceNodesQuery_5070605274413823677(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_5070605274413823831(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ((Iterable<SNode>) _context.getVariable("fragments"));
  }

  public static Iterable sourceNodesQuery_1368513600865665852(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ((Iterable<SNode>) _context.getVariable("fragments"));
  }

  public static Iterable sourceNodesQuery_5070605274413823528(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_5070605274413823581(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_5070605274413823597(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_4155486055398183512(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    List<String> propertyNames = ListSequence.fromListWithValues(new ArrayList<String>(), _context.getNode().getPropertyNames());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.PropertyMacro")) {
        String role = AttributeOperations.getPropertyName(SNodeOperations.cast(child, "jetbrains.mps.lang.generator.structure.PropertyMacro"));
        ListSequence.fromList(propertyNames).removeElement(role);
      }
    }
    Collections.sort(propertyNames);
    for (String property : propertyNames) {
      SNode propertyNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
      propertyNode.setProperty("propertyName", property);
      propertyNode.setProperty("propertyValue", _context.getNode().getProperty(property));
      ListSequence.fromList(result).addElement(propertyNode);
    }
    return result;
  }

  public static Iterable sourceNodesQuery_4155486055398183657(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> propertyMacros = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.PropertyMacro")) {
        ListSequence.fromList(propertyMacros).addElement(SNodeOperations.cast(child, "jetbrains.mps.lang.generator.structure.PropertyMacro"));
      }
    }
    Collections.sort(propertyMacros, new Comparator<SNode>() {
      public int compare(SNode node1, SNode node2) {
        return node1.getRole_().compareTo(node2.getRole_());
      }
    });
    return propertyMacros;
  }

  public static Iterable sourceNodesQuery_4155486055398183756(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = new ArrayList<SNode>();
    for (SReference reference : _context.getNode().getReferencesIterable()) {
      if (AttributeOperations.getAttribute(_context.getNode(), new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.ReferenceMacro"), reference.getRole())) != null) {
        continue;
      }
      SNode targetNode = reference.getTargetNodeSilently();
      if (targetNode == null) {
        _context.showErrorMessage(_context.getNode(), "cannot resolve reference in template model; role: " + reference.getRole());
        continue;
      }
      if (SNodeOperations.getModel(targetNode) == SNodeOperations.getModel(_context.getNode())) {
        SNode current = _context.getNode();
        int counter = 0;
        while (current != null) {
          if (eq_x583g4_a0a0c0d0b0tab(current, targetNode)) {
            break;
          }
          current = SNodeOperations.getParent(current);
          counter++;
        }
        SNode referenceNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        referenceNode.setProperty("role", reference.getRole());
        referenceNode.setReferent("originalNode", _context.getNode(), false);
        if (current != null) {
          // return parent N (counter) 
          referenceNode.setProperty("kind", "parentIndex");
          referenceNode.setProperty("parentIndex", Integer.toString(counter));
        } else {
          // internal reference 
          referenceNode.setProperty("kind", "internal");
          referenceNode.setProperty("templateNodeId", GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(targetNode)));
        }

        String resolveInfo = null;
        if ((targetNode != null)) {
          resolveInfo = targetNode.getResolveInfo();
        }
        if (resolveInfo == null) {
          resolveInfo = reference.getResolveInfo();
        }
        if (resolveInfo == null) {
          resolveInfo = "";
        }
        referenceNode.setProperty("resolveInfo", resolveInfo);
        ListSequence.fromList(result).addElement(referenceNode);

      } else {
        SNode referenceNode = SModelOperations.createNewNode(_context.getInputModel(), "jetbrains.mps.lang.core.structure.BaseConcept", null);
        referenceNode.setProperty("kind", "normal");
        referenceNode.setProperty("targetModel", reference.getTargetSModelReference().toString());
        referenceNode.setProperty("role", reference.getRole());
        referenceNode.setProperty("targetNodeId", targetNode.getSNodeId().toString());
        ListSequence.fromList(result).addElement(referenceNode);
      }
    }
    return result;
  }

  public static Iterable sourceNodesQuery_4155486055398184137(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> referenceMacros = ListSequence.fromList(new ArrayList<SNode>());
    for (SNode child : _context.getNode().getChildren(true)) {
      if (SNodeOperations.isInstanceOf(child, "jetbrains.mps.lang.generator.structure.ReferenceMacro")) {
        ListSequence.fromList(referenceMacros).addElement(SNodeOperations.cast(child, "jetbrains.mps.lang.generator.structure.ReferenceMacro"));
      }
    }
    Collections.sort(referenceMacros, new Comparator<SNode>() {
      public int compare(SNode node1, SNode node2) {
        return node1.getRole_().compareTo(node2.getRole_());
      }
    });
    return referenceMacros;
  }

  public static Iterable sourceNodesQuery_4155486055398184348(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SNodeOperations.getChildren(_context.getNode())).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return !(GeneratorUtilEx.isTemplateLanguageElement(it));
      }
    });
  }

  public static Iterable sourceNodesQuery_1147906725605232670(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static Iterable sourceNodesQuery_330395710727988674(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "patternReductionRule", true);
  }

  public static Iterable sourceNodesQuery_5412006700504199274(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true);
  }

  public static Iterable sourceNodesQuery_330395710727988609(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "createRootRule", true);
  }

  public static Iterable sourceNodesQuery_330395710727988632(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "dropRootRule", true);
  }

  public static Iterable sourceNodesQuery_330395710727988653(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "weavingMappingRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544993766(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "patternReductionRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544993757(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544983520(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "createRootRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544983530(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "rootMappingRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544983540(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "weavingMappingRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088544983550(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "dropRootRule", true);
  }

  public static Iterable sourceNodesQuery_9196441569928526475(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "preMappingScript", true);
  }

  public static Iterable sourceNodesQuery_9196441569928526561(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "postMappingScript", true);
  }

  public static Iterable sourceNodesQuery_8961331321403161981(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_8961331321403242135(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("nodes"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(it) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_1147906725605332210(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> result = (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).count() > 1 ?
      ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(), "case", true)).tailListSequence(1) :
      new ArrayList<SNode>()
    );
    return result;
  }

  public static Iterable sourceNodesQuery_1147906725605067041(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    List<SNode> fragments = SNodeOperations.getDescendants(SLinkOperations.getTarget(_context.getNode(), "contentNode", true), "jetbrains.mps.lang.generator.structure.TemplateFragment", false, new String[]{});
    return fragments;
  }

  public static Iterable sourceNodesQuery_3423901696829261267(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static Iterable sourceNodesQuery_330395710727744214(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "reductionMappingRule", true);
  }

  public static Iterable sourceNodesQuery_7635689088545006218(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.MappingConfiguration");
  }

  public static Iterable sourceNodesQuery_7635689088545006230(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateSwitch");
  }

  public static Iterable sourceNodesQuery_5577795813925496683(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_5577795813925496540(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Regular;
      }
    });
  }

  public static Iterable sourceNodesQuery_5289988192764625433(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.core.structure.INamedConcept")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null;
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Regular;
      }
    });
  }

  public static Iterable sourceNodesQuery_5577795813925496780(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "parameter", true);
  }

  public static Iterable sourceNodesQuery_5577795813925496807(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.generator.structure.TemplateDeclaration")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Foreign;
      }
    });
  }

  public static Iterable sourceNodesQuery_5289988192764625681(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ListSequence.fromList(SModelOperations.getRoots(_context.getInputModel(), "jetbrains.mps.lang.core.structure.INamedConcept")).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return AttributeOperations.getAttribute(it, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null;
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return it.getSNodeId() instanceof SNodeId.Foreign;
      }
    });
  }

  public static Iterable sourceNodesQuery_7664108699562529086(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_7664108699562529848(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("fragments"))).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return _context.getTransientObject(SNodeOperations.getParent(it)) != null;
      }
    });
  }

  public static Iterable sourceNodesQuery_5577795813925668106(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return (Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("arguments"))).isNotEmpty() ?
      ((Iterable<SNode>) _context.getVariable("arguments")) :
      ListSequence.fromList(new ArrayList<SNode>())
    );
  }

  public static Iterable sourceNodesQuery_1520710884206584190(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return (Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("arguments"))).isNotEmpty() ?
      ((Iterable<SNode>) _context.getVariable("arguments")) :
      ListSequence.fromList(new ArrayList<SNode>())
    );
  }

  public static Iterable sourceNodesQuery_965589097447684356(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return (Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("arguments"))).isNotEmpty() ?
      ((Iterable<SNode>) _context.getVariable("arguments")) :
      ListSequence.fromList(new ArrayList<SNode>())
    );
  }

  public static Iterable sourceNodesQuery_965589097447684451(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return (Sequence.fromIterable(((Iterable<SNode>) _context.getVariable("arguments"))).isNotEmpty() ?
      ((Iterable<SNode>) _context.getVariable("arguments")) :
      ListSequence.fromList(new ArrayList<SNode>())
    );
  }

  public static Iterable sourceNodesQuery_6389702176794111038(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return ((Iterable<SNode>) _context.getVariable("toExtract"));
  }

  public static void mapSrcMacro_post_mapper_5070605274413823725(final IOperationContext operationContext, final MapSrcMacroPostProcContext _context) {
    String name = (String) _context.getTransientObject(SNodeOperations.getParent(_context.getNode()));
    if (name.startsWith("tnode")) {
      SLinkOperations.setTarget(_context.getOutputNode(), "classifier", SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNode(), "parameter", true)).first(), "jetbrains.mps.baseLanguage.structure.ClassifierType"), "classifier", false), false);
      ListSequence.fromList(SLinkOperations.getTargets(_context.getOutputNode(), "parameter", true)).clear();
    }
  }

  public static void mappingScript_CodeBlock_1199965771120(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> nodes = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.TemplateFunctionParameter_sourceNode");
    ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef")).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return IOperation_Behavior.call_getDotExpression_1224687669172(it);
      }
    }));
    ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef")).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return IOperation_Behavior.call_getDotExpression_1224687669172(it);
      }
    }));
    ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef")).select(new ISelector<SNode, SNode>() {
      public SNode select(SNode it) {
        return IOperation_Behavior.call_getDotExpression_1224687669172(it);
      }
    }));
    for (SNode node : nodes) {
      SNode replacement = SConceptOperations.createNewNode("jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression", null);
      SLinkOperations.setTarget(replacement, "typeHint", SNodeOperations.cast(SNodeOperations.copyNode(TypeChecker.getInstance().getTypeOf(node)), "jetbrains.mps.baseLanguage.structure.Type"), true);
      SNodeOperations.replaceWithAnother(node, replacement);
      SLinkOperations.setTarget(replacement, "expression", node, true);
    }
  }

  public static void mappingScript_CodeBlock_1217270660171(final IOperationContext operationContext, final MappingScriptContext _context) {
    // references on mapping label will be lost because 
    // TLBase generator executes first and doesn't copy 
    // mapping configs (where labels are declared) to output model 
    // 
    {
      // references in 'get by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get by label and node' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get by label and node and ref.scope' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get all by label and node' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel");
      for (SNode op : ops) {
        SNode label = SLinkOperations.getTarget(op, "label", false);
        if (label == null) {
          _context.showErrorMessage(op, "reference on mapping label is broken");
          continue;
        }
        SPropertyOperations.set(op, "labelName_intern", SPropertyOperations.getString(label, "name"));
        SLinkOperations.setTarget(op, "label", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef");
      for (SNode op : ops) {
        SNode param = SLinkOperations.getTarget(op, "parameter", false);
        if (param == null) {
          _context.showErrorMessage(op, "reference on parameter is broken");
          continue;
        }
        SPropertyOperations.set(op, "name_intern", SPropertyOperations.getString(param, "name"));
        SLinkOperations.setTarget(op, "parameter", null, false);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef");
      for (SNode op : ops) {
        SNode patternVar = GenerationContextOp_PatternRef_Behavior.call_getTarget_1758784108620114792(op);
        if (patternVar == null) {
          _context.showErrorMessage(op, "reference on pattern variable is broken");
          continue;
        }
        SPropertyOperations.set(op, "name_intern", PatternVarsUtil.getFieldName(patternVar));
        GenerationContextOp_PatternRef_Behavior.call_setTarget_1758784108620254533(op, null);
      }
    }
    {
      // references in 'get prev input by label' 
      List<SNode> ops = SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef");
      for (SNode op : ops) {
        SNode paramref = SLinkOperations.getTarget(op, "importClause", false);
        if (paramref == null || (SLinkOperations.getTarget(paramref, "declaration", false) == null)) {
          _context.showErrorMessage(op, "reference on generation parameter is broken");
          continue;
        }
        SNode paramDeclaration = SLinkOperations.getTarget(paramref, "declaration", false);
        if (SNodeOperations.getModel(paramDeclaration) == _context.getInputModel()) {
          paramDeclaration = SNodeOperations.cast(_context.getOriginalCopiedInputNode(paramDeclaration), "jetbrains.mps.lang.generator.structure.IGeneratorParameter");
        }
        SPropertyOperations.set(op, "name_intern", IGeneratorParameter_Behavior.call_getUniqueId_650531548511609559(paramDeclaration));
        SLinkOperations.setTarget(op, "importClause", null, false);
      }
    }

  }

  public static void mappingScript_CodeBlock_6342833957791858286(final IOperationContext operationContext, final MappingScriptContext _context) {
    for (SNode n : SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule")) {
      if ((SLinkOperations.getTarget(n, "ruleConsequence", true) == null) || SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(n, "ruleConsequence", true)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RuleConsequence")) {
        _context.showErrorMessage(_context.getOriginalCopiedInputNode(n), "Empty rule consequence");
      }
    }
    for (SNode n : SModelOperations.getNodes(_context.getModel(), "jetbrains.mps.lang.generator.structure.Reduction_MappingRule")) {
      if ((SLinkOperations.getTarget(n, "ruleConsequence", true) == null) || SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(n, "ruleConsequence", true)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RuleConsequence")) {
        _context.showErrorMessage(_context.getOriginalCopiedInputNode(n), "Empty rule consequence");
      }
    }
  }

  private static boolean eq_x583g4_a0a0vm(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_x583g4_a0a0wm(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }

  private static boolean eq_x583g4_a0a0c0d0b0tab(Object a, Object b) {
    return (a != null ?
      a.equals(b) :
      a == b
    );
  }
}
