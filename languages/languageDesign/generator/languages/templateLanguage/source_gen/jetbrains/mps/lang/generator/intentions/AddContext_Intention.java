package jetbrains.mps.lang.generator.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.generator.editor.QueriesUtil;
import java.util.Set;
import java.util.HashSet;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.lang.typesystem.runtime.HUtil;

public class AddContext_Intention extends BaseIntention implements Intention {
  public AddContext_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Convert to Inline Template with Context";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode tNode = SLinkOperations.getTarget(node, "templateNode", true);
    SLinkOperations.setTarget(node, "templateNode", null, true);
    SNode result = SNodeOperations.replaceWithNewChild(node, "jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence");
    if (SNodeOperations.isInstanceOf(tNode, "jetbrains.mps.baseLanguage.structure.Expression")) {
      SLinkOperations.setTarget(result, "contentNode", new AddContext_Intention.QuotationClass_7sjj31_a2a0a3a5().createNode(tNode), true);
    } else {
      SLinkOperations.setTarget(result, "contentNode", tNode, true);
    }
    QueriesUtil.createTemplateFragment(tNode);
  }

  public String getLocationString() {
    return "jetbrains.mps.lang.generator.intentions";
  }

  public static class QuotationClass_7sjj31_a2a0a3a5 {
    public QuotationClass_7sjj31_a2a0a3a5() {
    }

    public SNode createNode(Object parameter_9) {
      SNode result = null;
      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();
      SNode quotedNode_1 = null;
      SNode quotedNode_2 = null;
      SNode quotedNode_3 = null;
      SNode quotedNode_4 = null;
      {
        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BlockStatement", null, GlobalScope.getInstance(), false);
        SNode quotedNode1_5 = quotedNode_1;
        {
          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList", null, GlobalScope.getInstance(), false);
          SNode quotedNode1_6 = quotedNode_2;
          {
            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement", null, GlobalScope.getInstance(), false);
            SNode quotedNode1_7 = quotedNode_3;
            {
              quotedNode_4 = (SNode) parameter_9;
              SNode quotedNode1_8;
              if (_parameterValues_129834374.contains(quotedNode_4)) {
                quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_4);
              } else {
                _parameterValues_129834374.add(quotedNode_4);
                quotedNode1_8 = quotedNode_4;
              }
              if (quotedNode1_8 != null) {
                quotedNode_3.addChild("expression", HUtil.copyIfNecessary(quotedNode1_8));
              }
            }
            quotedNode_2.addChild("statement", quotedNode1_7);
          }
          quotedNode_1.addChild("statements", quotedNode1_6);
        }
        result = quotedNode1_5;
      }
      return result;
    }
  }
}
