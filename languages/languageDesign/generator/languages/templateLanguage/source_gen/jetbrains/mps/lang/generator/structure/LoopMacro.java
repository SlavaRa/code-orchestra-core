package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LoopMacro extends SourceSubstituteMacro {
  public static final String concept = "jetbrains.mps.lang.generator.structure.LoopMacro";
  public static final String SOURCE_NODES_QUERY = "sourceNodesQuery";

  public LoopMacro(SNode node) {
    super(node);
  }

  public SourceSubstituteMacro_SourceNodesQuery getSourceNodesQuery() {
    return (SourceSubstituteMacro_SourceNodesQuery) this.getChild(SourceSubstituteMacro_SourceNodesQuery.class, LoopMacro.SOURCE_NODES_QUERY);
  }

  public void setSourceNodesQuery(SourceSubstituteMacro_SourceNodesQuery node) {
    super.setChild(LoopMacro.SOURCE_NODES_QUERY, node);
  }

  public static LoopMacro newInstance(SModel sm, boolean init) {
    return (LoopMacro) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.LoopMacro", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LoopMacro newInstance(SModel sm) {
    return LoopMacro.newInstance(sm, false);
  }
}
