package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InlineTemplateWithContext_RuleConsequence extends RuleConsequence {
  public static final String concept = "jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence";
  public static final String CONTENT_NODE = "contentNode";

  public InlineTemplateWithContext_RuleConsequence(SNode node) {
    super(node);
  }

  public BaseConcept getContentNode() {
    return (BaseConcept) this.getChild(BaseConcept.class, InlineTemplateWithContext_RuleConsequence.CONTENT_NODE);
  }

  public void setContentNode(BaseConcept node) {
    super.setChild(InlineTemplateWithContext_RuleConsequence.CONTENT_NODE, node);
  }

  public static InlineTemplateWithContext_RuleConsequence newInstance(SModel sm, boolean init) {
    return (InlineTemplateWithContext_RuleConsequence) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InlineTemplateWithContext_RuleConsequence newInstance(SModel sm) {
    return InlineTemplateWithContext_RuleConsequence.newInstance(sm, false);
  }
}
