package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.NodeAttribute;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RootTemplateAnnotation extends NodeAttribute {
  public static final String concept = "jetbrains.mps.lang.generator.structure.RootTemplateAnnotation";
  public static final String APPLICABLE_CONCEPT = "applicableConcept";

  public RootTemplateAnnotation(SNode node) {
    super(node);
  }

  public AbstractConceptDeclaration getApplicableConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, RootTemplateAnnotation.APPLICABLE_CONCEPT);
  }

  public void setApplicableConcept(AbstractConceptDeclaration node) {
    super.setReferent(RootTemplateAnnotation.APPLICABLE_CONCEPT, node);
  }

  public static RootTemplateAnnotation newInstance(SModel sm, boolean init) {
    return (RootTemplateAnnotation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RootTemplateAnnotation newInstance(SModel sm) {
    return RootTemplateAnnotation.newInstance(sm, false);
  }
}
