package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class GeneratorParameterReference extends BaseConcept {
  public static final String concept = "jetbrains.mps.lang.generator.structure.GeneratorParameterReference";
  public static final String IS_OPTIONAL = "isOptional";
  public static final String DECLARATION = "declaration";

  public GeneratorParameterReference(SNode node) {
    super(node);
  }

  public boolean getIsOptional() {
    return this.getBooleanProperty(GeneratorParameterReference.IS_OPTIONAL);
  }

  public void setIsOptional(boolean value) {
    this.setBooleanProperty(GeneratorParameterReference.IS_OPTIONAL, value);
  }

  public IGeneratorParameter getDeclaration() {
    return (IGeneratorParameter) this.getReferent(IGeneratorParameter.class, GeneratorParameterReference.DECLARATION);
  }

  public void setDeclaration(IGeneratorParameter node) {
    super.setReferent(GeneratorParameterReference.DECLARATION, node);
  }

  public static GeneratorParameterReference newInstance(SModel sm, boolean init) {
    return (GeneratorParameterReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.GeneratorParameterReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static GeneratorParameterReference newInstance(SModel sm) {
    return GeneratorParameterReference.newInstance(sm, false);
  }
}
