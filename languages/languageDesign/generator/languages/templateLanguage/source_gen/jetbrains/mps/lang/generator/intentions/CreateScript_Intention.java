package jetbrains.mps.lang.generator.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class CreateScript_Intention extends BaseIntention implements Intention {
  public CreateScript_Intention() {
  }

  public String getConcept() {
    return "jetbrains.mps.lang.generator.structure.MappingScriptReference";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Create Script";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (SLinkOperations.getTarget(node, "mappingScript", false) == null);
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode script = SNodeFactoryOperations.createNewRootNode(SNodeOperations.getModel(node), "jetbrains.mps.lang.generator.structure.MappingScript", null);
    SPropertyOperations.set(script, "name", "script");
    if (SNodeOperations.hasRole(node, "jetbrains.mps.lang.generator.structure.MappingConfiguration", "preMappingScript")) {
      SPropertyOperations.set(script, "scriptKind", "pre_processing");
    }
    SLinkOperations.setTarget(node, "mappingScript", script, false);
  }

  public String getLocationString() {
    return "jetbrains.mps.lang.generator.intentions";
  }
}
