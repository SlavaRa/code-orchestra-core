package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TemplateArgumentQueryExpression extends Expression {
  public static final String concept = "jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression";
  public static final String QUERY = "query";

  public TemplateArgumentQueryExpression(SNode node) {
    super(node);
  }

  public TemplateArgumentQuery getQuery() {
    return (TemplateArgumentQuery) this.getChild(TemplateArgumentQuery.class, TemplateArgumentQueryExpression.QUERY);
  }

  public void setQuery(TemplateArgumentQuery node) {
    super.setChild(TemplateArgumentQueryExpression.QUERY, node);
  }

  public static TemplateArgumentQueryExpression newInstance(SModel sm, boolean init) {
    return (TemplateArgumentQueryExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TemplateArgumentQueryExpression newInstance(SModel sm) {
    return TemplateArgumentQueryExpression.newInstance(sm, false);
  }
}
