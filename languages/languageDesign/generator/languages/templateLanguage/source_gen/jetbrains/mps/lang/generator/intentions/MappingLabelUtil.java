package jetbrains.mps.lang.generator.intentions;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.project.GlobalScope;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class MappingLabelUtil {
  public MappingLabelUtil() {
  }

  public static SNode findOrCreateMappingLabelForName(SNode templateNode, String labelName) {
    SNode mappingLabel = null;
    List<SNode> mappingConfigurations = SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(templateNode), GlobalScope.getInstance(), "jetbrains.mps.lang.generator.structure.MappingConfiguration");
    for (SNode mc : ListSequence.fromList(mappingConfigurations)) {
      for (SNode ml : ListSequence.fromList(SLinkOperations.getTargets(mc, "mappingLabel", true))) {
        if (labelName.equals(SPropertyOperations.getString(ml, "name"))) {
          mappingLabel = ml;
          break;
        }
      }
    }
    // ---- 
    if (mappingLabel == null) {
      SNode mc;
      List<SNode> localMCs = SModelOperations.getRoots(SNodeOperations.getModel(templateNode), "jetbrains.mps.lang.generator.structure.MappingConfiguration");
      if (ListSequence.fromList(localMCs).isNotEmpty()) {
        mc = ListSequence.fromList(localMCs).where(new IWhereFilter<SNode>() {
          public boolean accept(SNode it) {
            return ListSequence.fromList(SLinkOperations.getTargets(it, "mappingLabel", true)).isNotEmpty();
          }
        }).first();
        if (mc == null) {
          mc = ListSequence.fromList(localMCs).first();
        }
      } else {
        mc = SNodeFactoryOperations.createNewRootNode(SNodeOperations.getModel(templateNode), "jetbrains.mps.lang.generator.structure.MappingConfiguration", null);
        SPropertyOperations.set(mc, "name", "MappingLabels");
      }
      // new mapping label 
      SNode newLabel = SNodeFactoryOperations.addNewChild(mc, "mappingLabel", "jetbrains.mps.lang.generator.structure.MappingLabelDeclaration");
      SPropertyOperations.set(newLabel, "name", labelName);
      mappingLabel = newLabel;
    }
    return mappingLabel;
  }
}
