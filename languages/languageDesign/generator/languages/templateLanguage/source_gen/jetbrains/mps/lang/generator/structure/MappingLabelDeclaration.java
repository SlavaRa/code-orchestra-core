package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MappingLabelDeclaration extends BaseConcept implements INamedConcept {
  public static final String concept = "jetbrains.mps.lang.generator.structure.MappingLabelDeclaration";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String SOURCE_CONCEPT = "sourceConcept";
  public static final String TARGET_CONCEPT = "targetConcept";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public MappingLabelDeclaration(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(MappingLabelDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(MappingLabelDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(MappingLabelDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MappingLabelDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MappingLabelDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MappingLabelDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MappingLabelDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MappingLabelDeclaration.VIRTUAL_PACKAGE, value);
  }

  public AbstractConceptDeclaration getSourceConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, MappingLabelDeclaration.SOURCE_CONCEPT);
  }

  public void setSourceConcept(AbstractConceptDeclaration node) {
    super.setReferent(MappingLabelDeclaration.SOURCE_CONCEPT, node);
  }

  public AbstractConceptDeclaration getTargetConcept() {
    return (AbstractConceptDeclaration) this.getReferent(AbstractConceptDeclaration.class, MappingLabelDeclaration.TARGET_CONCEPT);
  }

  public void setTargetConcept(AbstractConceptDeclaration node) {
    super.setReferent(MappingLabelDeclaration.TARGET_CONCEPT, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(MappingLabelDeclaration.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, MappingLabelDeclaration.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, MappingLabelDeclaration.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(MappingLabelDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, MappingLabelDeclaration.SMODEL_ATTRIBUTE, node);
  }

  public static MappingLabelDeclaration newInstance(SModel sm, boolean init) {
    return (MappingLabelDeclaration) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.MappingLabelDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MappingLabelDeclaration newInstance(SModel sm) {
    return MappingLabelDeclaration.newInstance(sm, false);
  }
}
