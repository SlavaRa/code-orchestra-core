package jetbrains.mps.lang.generator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InlineTemplate_RuleConsequence extends RuleConsequence {
  public static final String concept = "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence";
  public static final String TEMPLATE_NODE = "templateNode";

  public InlineTemplate_RuleConsequence(SNode node) {
    super(node);
  }

  public BaseConcept getTemplateNode() {
    return (BaseConcept) this.getChild(BaseConcept.class, InlineTemplate_RuleConsequence.TEMPLATE_NODE);
  }

  public void setTemplateNode(BaseConcept node) {
    super.setChild(InlineTemplate_RuleConsequence.TEMPLATE_NODE, node);
  }

  public static InlineTemplate_RuleConsequence newInstance(SModel sm, boolean init) {
    return (InlineTemplate_RuleConsequence) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InlineTemplate_RuleConsequence newInstance(SModel sm) {
    return InlineTemplate_RuleConsequence.newInstance(sm, false);
  }
}
