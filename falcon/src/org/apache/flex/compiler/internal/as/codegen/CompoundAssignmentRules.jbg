void_expression = Pattern compoundAssignToName : 4
JBurg.Reduction reducer.generateCompoundAssignment(__p, operand, expr, opcode, DISCARD_VALUE);

expression = Pattern compoundAssignToName : 4
JBurg.Reduction reducer.generateCompoundAssignment(__p, operand, expr, opcode, NEED_VALUE);

void_expression = Pattern compoundAssignToMember : 4
JBurg.Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getproperty, opcode, DISCARD_VALUE);

expression = Pattern compoundAssignToMember : 4
JBurg.Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getproperty, opcode, NEED_VALUE);

expression = Pattern compoundAssignToBracket : 4
JBurg.Reduction reducer.generateCompoundBracketAssignment(__p, stem, index, expr, opcode, NEED_VALUE);

void_expression = Pattern compoundAssignToBracket : 4
JBurg.Reduction reducer.generateCompoundBracketAssignment(__p, stem, index, expr, opcode, DISCARD_VALUE);

void_expression = Pattern compoundAssignToDescendants : 4
JBurg.Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getdescendants, opcode, DISCARD_VALUE);

expression = Pattern compoundAssignToDescendants : 4
JBurg.Reduction reducer.generateCompoundMemberAssignment(__p, stem, member, expr, OP_getdescendants, opcode, NEED_VALUE);

void_expression = Pattern compoundAssignToRuntimeName : 4
JBurg.Reduction reducer.generateCompoundAssignmentToRuntimeName(__p, name, expr, opcode, DISCARD_VALUE);

expression = Pattern compoundAssignToRuntimeName : 4
JBurg.Reduction reducer.generateCompoundAssignmentToRuntimeName(__p, name, expr, opcode, NEED_VALUE);

