package jetbrains.mps.debug.sampleLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class WannabeMethodCall extends Expression {
  public static final String concept = "jetbrains.mps.debug.sampleLanguage.structure.WannabeMethodCall";
  public static final String METHOD = "method";

  public WannabeMethodCall(SNode node) {
    super(node);
  }

  public WannabeMethod getMethod() {
    return (WannabeMethod) this.getReferent(WannabeMethod.class, WannabeMethodCall.METHOD);
  }

  public void setMethod(WannabeMethod node) {
    super.setReferent(WannabeMethodCall.METHOD, node);
  }

  public static WannabeMethodCall newInstance(SModel sm, boolean init) {
    return (WannabeMethodCall) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.debug.sampleLanguage.structure.WannabeMethodCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WannabeMethodCall newInstance(SModel sm) {
    return WannabeMethodCall.newInstance(sm, false);
  }
}
