package jetbrains.mps.samples.agreementLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.samples.formulaLanguage.structure.Constant;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.samples.formulaLanguage.structure.FloatingPointConstant;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Quantity extends Constant {
  public static final String concept = "jetbrains.mps.samples.agreementLanguage.structure.Quantity";
  public static final String UNIT = "unit";
  public static final String AMOUNT = "amount";

  public Quantity(SNode node) {
    super(node);
  }

  public Unit getUnit() {
    String value = super.getProperty(Quantity.UNIT);
    return Unit.parseValue(value);
  }

  public void setUnit(Unit value) {
    super.setProperty(Quantity.UNIT, value.getValueAsString());
  }

  public FloatingPointConstant getAmount() {
    return (FloatingPointConstant) this.getChild(FloatingPointConstant.class, Quantity.AMOUNT);
  }

  public void setAmount(FloatingPointConstant node) {
    super.setChild(Quantity.AMOUNT, node);
  }

  public static Quantity newInstance(SModel sm, boolean init) {
    return (Quantity) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.agreementLanguage.structure.Quantity", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Quantity newInstance(SModel sm) {
    return Quantity.newInstance(sm, false);
  }
}
