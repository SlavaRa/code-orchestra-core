package jetbrains.mps.samples.complex.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SingleComplexExpression extends Expression {
  public static final String concept = "jetbrains.mps.samples.complex.structure.SingleComplexExpression";
  public static final String CLNK_ReturnType = "returnType";
  public static final String COMPLEX_EXPRESSION = "complexExpression";

  public SingleComplexExpression(SNode node) {
    super(node);
  }

  public Expression getComplexExpression() {
    return (Expression) this.getChild(Expression.class, SingleComplexExpression.COMPLEX_EXPRESSION);
  }

  public void setComplexExpression(Expression node) {
    super.setChild(SingleComplexExpression.COMPLEX_EXPRESSION, node);
  }

  public static SingleComplexExpression newInstance(SModel sm, boolean init) {
    return (SingleComplexExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.complex.structure.SingleComplexExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SingleComplexExpression newInstance(SModel sm) {
    return SingleComplexExpression.newInstance(sm, false);
  }
}
