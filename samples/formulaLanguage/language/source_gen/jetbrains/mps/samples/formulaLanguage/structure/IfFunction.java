package jetbrains.mps.samples.formulaLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IfFunction extends Function {
  public static final String concept = "jetbrains.mps.samples.formulaLanguage.structure.IfFunction";
  public static final String LOGICAL_TEST = "logicalTest";
  public static final String VALUE_IF_TRUE = "valueIfTrue";
  public static final String VALUE_IF_FALSE = "valueIfFalse";

  public IfFunction(SNode node) {
    super(node);
  }

  public Expression getLogicalTest() {
    return (Expression) this.getChild(Expression.class, IfFunction.LOGICAL_TEST);
  }

  public void setLogicalTest(Expression node) {
    super.setChild(IfFunction.LOGICAL_TEST, node);
  }

  public Expression getValueIfTrue() {
    return (Expression) this.getChild(Expression.class, IfFunction.VALUE_IF_TRUE);
  }

  public void setValueIfTrue(Expression node) {
    super.setChild(IfFunction.VALUE_IF_TRUE, node);
  }

  public Expression getValueIfFalse() {
    return (Expression) this.getChild(Expression.class, IfFunction.VALUE_IF_FALSE);
  }

  public void setValueIfFalse(Expression node) {
    super.setChild(IfFunction.VALUE_IF_FALSE, node);
  }

  public static IfFunction newInstance(SModel sm, boolean init) {
    return (IfFunction) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.formulaLanguage.structure.IfFunction", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IfFunction newInstance(SModel sm) {
    return IfFunction.newInstance(sm, false);
  }
}
