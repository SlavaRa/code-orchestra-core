package jetbrains.mps.samples.lambdaCalculus.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import java.util.ArrayList;

public class LambdaExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static SNode call_getOuterApplication_1308935328408190993(SNode thisNode) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication"), "function", true) == thisNode) && SNodeOperations.isInstanceOf(thisNode, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication")) {
      return SNodeOperations.cast(thisNode, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication");

    } else if (SNodeOperations.getParent(thisNode) != null && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.samples.lambdaCalculus.structure.LetExpression")) && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode), "jetbrains.mps.samples.lambdaCalculus.structure.Program"))) {
      return LambdaExpression_Behavior.call_getOuterApplication_1308935328408190993(SNodeOperations.cast(SNodeOperations.getParent(thisNode), "jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"));
    }
    return null;
  }

  public static boolean call_hasParameterRefs_7397484091645986293(SNode thisNode) {
    SNode node = thisNode;
    node = SNodeOperations.getParent(node);
    while (node != null && !(SNodeOperations.isInstanceOf(node, "jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner") && !(ListSequence.fromList(VariableOwner_Behavior.call_getVariables_8981808925914841576(SNodeOperations.cast(node, "jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"))).contains(SNodeOperations.as(thisNode, "jetbrains.mps.samples.lambdaCalculus.structure.Variable"))))) {
      node = SNodeOperations.getParent(node);
    }
    if (SNodeOperations.isInstanceOf(node, "jetbrains.mps.samples.lambdaCalculus.structure.LetExpression")) {
      return true;
    }
    if (!(SNodeOperations.isInstanceOf(node, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"))) {
      return false;
    }
    return LambdaExpression_Behavior.call_isInFull_7347119454575591465(SNodeOperations.cast(node, "jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"));
  }

  public static boolean call_isInFull_7347119454575591465(SNode thisNode) {
    SNode appl = LambdaExpression_Behavior.call_getOuterApplication_1308935328408190993(thisNode);
    if (null == appl) {
      return false;
    }
    return LambdaApplication_Behavior.call_isFullApplication_1308935328408190838(LambdaExpression_Behavior.call_getOuterApplication_1308935328408190993(thisNode));
  }

  public static List<SNode> call_getOuterVariables_5249919352014727828(SNode thisNode) {
    List<SNode> allVar = SNodeOperations.getDescendants(thisNode, "jetbrains.mps.samples.lambdaCalculus.structure.Variable", false, new String[]{});
    List<SNode> allRef = SNodeOperations.getDescendants(thisNode, "jetbrains.mps.samples.lambdaCalculus.structure.VariableReference", false, new String[]{});
    List<SNode> result = new ArrayList<SNode>();
    for (SNode ref : allRef) {
      if (!(ListSequence.fromList(allVar).contains(SLinkOperations.getTarget(ref, "variable", false))) && !(ListSequence.fromList(result).contains(SLinkOperations.getTarget(ref, "variable", false)))) {
        ListSequence.fromList(result).addElement(SLinkOperations.getTarget(ref, "variable", false));
      }
    }
    return result;
  }
}
