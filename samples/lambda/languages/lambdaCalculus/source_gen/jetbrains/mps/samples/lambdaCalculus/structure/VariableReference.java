package jetbrains.mps.samples.lambdaCalculus.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VariableReference extends LambdaExpression {
  public static final String concept = "jetbrains.mps.samples.lambdaCalculus.structure.VariableReference";
  public static final String VARIABLE = "variable";

  public VariableReference(SNode node) {
    super(node);
  }

  public Variable getVariable() {
    return (Variable) this.getReferent(Variable.class, VariableReference.VARIABLE);
  }

  public void setVariable(Variable node) {
    super.setReferent(VariableReference.VARIABLE, node);
  }

  public static VariableReference newInstance(SModel sm, boolean init) {
    return (VariableReference) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VariableReference newInstance(SModel sm) {
    return VariableReference.newInstance(sm, false);
  }
}
