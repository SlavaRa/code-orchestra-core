package jetbrains.mps.samples.lambdaCalculus.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FunctionType extends BaseConcept {
  public static final String concept = "jetbrains.mps.samples.lambdaCalculus.structure.FunctionType";
  public static final String DOMAIN = "domain";
  public static final String RANGE = "range";

  public FunctionType(SNode node) {
    super(node);
  }

  public LambdaType getDomain() {
    return (LambdaType) this.getChild(LambdaType.class, FunctionType.DOMAIN);
  }

  public void setDomain(LambdaType node) {
    super.setChild(FunctionType.DOMAIN, node);
  }

  public LambdaType getRange() {
    return (LambdaType) this.getChild(LambdaType.class, FunctionType.RANGE);
  }

  public void setRange(LambdaType node) {
    super.setChild(FunctionType.RANGE, node);
  }

  public static FunctionType newInstance(SModel sm, boolean init) {
    return (FunctionType) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.lambdaCalculus.structure.FunctionType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FunctionType newInstance(SModel sm) {
    return FunctionType.newInstance(sm, false);
  }
}
