package jetbrains.mps.samples.lambdaCalculus.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ParenthesisExpression extends LambdaExpression {
  public static final String concept = "jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression";
  public static final String EXPRESSION = "expression";

  public ParenthesisExpression(SNode node) {
    super(node);
  }

  public LambdaExpression getExpression() {
    return (LambdaExpression) this.getChild(LambdaExpression.class, ParenthesisExpression.EXPRESSION);
  }

  public void setExpression(LambdaExpression node) {
    super.setChild(ParenthesisExpression.EXPRESSION, node);
  }

  public static ParenthesisExpression newInstance(SModel sm, boolean init) {
    return (ParenthesisExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ParenthesisExpression newInstance(SModel sm) {
    return ParenthesisExpression.newInstance(sm, false);
  }
}
