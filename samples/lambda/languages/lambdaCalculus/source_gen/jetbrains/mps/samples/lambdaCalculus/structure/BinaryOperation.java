package jetbrains.mps.samples.lambdaCalculus.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BinaryOperation extends LambdaExpression {
  public static final String concept = "jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public BinaryOperation(SNode node) {
    super(node);
  }

  public LambdaExpression getLeft() {
    return (LambdaExpression) this.getChild(LambdaExpression.class, BinaryOperation.LEFT);
  }

  public void setLeft(LambdaExpression node) {
    super.setChild(BinaryOperation.LEFT, node);
  }

  public LambdaExpression getRight() {
    return (LambdaExpression) this.getChild(LambdaExpression.class, BinaryOperation.RIGHT);
  }

  public void setRight(LambdaExpression node) {
    super.setChild(BinaryOperation.RIGHT, node);
  }

  public static BinaryOperation newInstance(SModel sm, boolean init) {
    return (BinaryOperation) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BinaryOperation newInstance(SModel sm) {
    return BinaryOperation.newInstance(sm, false);
  }
}
