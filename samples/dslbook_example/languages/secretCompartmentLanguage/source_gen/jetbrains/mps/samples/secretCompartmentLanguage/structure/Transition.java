package jetbrains.mps.samples.secretCompartmentLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Transition extends BaseConcept {
  public static final String concept = "jetbrains.mps.samples.secretCompartmentLanguage.structure.Transition";
  public static final String TRIGGER = "trigger";
  public static final String TARGET = "target";

  public Transition(SNode node) {
    super(node);
  }

  public Event getTrigger() {
    return (Event) this.getReferent(Event.class, Transition.TRIGGER);
  }

  public void setTrigger(Event node) {
    super.setReferent(Transition.TRIGGER, node);
  }

  public State getTarget() {
    return (State) this.getReferent(State.class, Transition.TARGET);
  }

  public void setTarget(State node) {
    super.setReferent(Transition.TARGET, node);
  }

  public static Transition newInstance(SModel sm, boolean init) {
    return (Transition) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.samples.secretCompartmentLanguage.structure.Transition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Transition newInstance(SModel sm) {
    return Transition.newInstance(sm, false);
  }
}
