package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CBinaryOp extends CExpression {
  public static final String concept = "jetbrains.mps.nanoc.structure.CBinaryOp";
  public static final String LEFT = "left";
  public static final String RIGHT = "right";

  public CBinaryOp(SNode node) {
    super(node);
  }

  public CExpression getLeft() {
    return (CExpression) this.getChild(CExpression.class, CBinaryOp.LEFT);
  }

  public void setLeft(CExpression node) {
    super.setChild(CBinaryOp.LEFT, node);
  }

  public CExpression getRight() {
    return (CExpression) this.getChild(CExpression.class, CBinaryOp.RIGHT);
  }

  public void setRight(CExpression node) {
    super.setChild(CBinaryOp.RIGHT, node);
  }

  public static CBinaryOp newInstance(SModel sm, boolean init) {
    return (CBinaryOp) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.CBinaryOp", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CBinaryOp newInstance(SModel sm) {
    return CBinaryOp.newInstance(sm, false);
  }
}
