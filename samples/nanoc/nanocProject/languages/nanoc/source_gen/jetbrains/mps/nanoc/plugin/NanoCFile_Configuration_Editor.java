package jetbrains.mps.nanoc.plugin;

/*Generated by MPS */

import jetbrains.mps.execution.api.settings.SettingsEditorEx;
import jetbrains.mps.baseLanguage.runConfigurations.runtime.MainNodeChooser;
import jetbrains.mps.execution.configurations.lib.Node_Configuration_Editor;
import com.intellij.openapi.util.Disposer;
import org.jetbrains.annotations.NotNull;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import com.intellij.openapi.options.ConfigurationException;

public class NanoCFile_Configuration_Editor extends SettingsEditorEx<NanoCFile_Configuration> {
  private MainNodeChooser myChooser;
  private Node_Configuration_Editor myNode;

  public NanoCFile_Configuration_Editor(Node_Configuration_Editor node) {
    myNode = node;
  }

  public void disposeEditor() {
    Disposer.dispose(myNode);
  }

  @NotNull
  public JPanel createEditor() {
    myChooser = myNode.createEditor();
    JPanel panel = new JPanel();
    panel.add(myChooser, BorderLayout.CENTER);
    return panel;
  }

  public void applyEditorTo(final NanoCFile_Configuration configuration) throws ConfigurationException {
    myNode.applyEditorTo(configuration.getNode());
  }

  public void resetEditorFrom(final NanoCFile_Configuration configuration) {
    myNode.resetEditorFrom(configuration.getNode());
  }
}
