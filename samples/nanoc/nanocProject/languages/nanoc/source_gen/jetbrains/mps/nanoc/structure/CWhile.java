package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CWhile extends CStatement {
  public static final String concept = "jetbrains.mps.nanoc.structure.CWhile";
  public static final String CONDITION = "condition";
  public static final String BODY = "body";

  public CWhile(SNode node) {
    super(node);
  }

  public CExpression getCondition() {
    return (CExpression) this.getChild(CExpression.class, CWhile.CONDITION);
  }

  public void setCondition(CExpression node) {
    super.setChild(CWhile.CONDITION, node);
  }

  public CBody getBody() {
    return (CBody) this.getChild(CBody.class, CWhile.BODY);
  }

  public void setBody(CBody node) {
    super.setChild(CWhile.BODY, node);
  }

  public static CWhile newInstance(SModel sm, boolean init) {
    return (CWhile) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.CWhile", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CWhile newInstance(SModel sm) {
    return CWhile.newInstance(sm, false);
  }
}
