package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CBody extends BaseConcept {
  public static final String concept = "jetbrains.mps.nanoc.structure.CBody";
  public static final String STATEMENT = "statement";

  public CBody(SNode node) {
    super(node);
  }

  public int getStatementsCount() {
    return this.getChildCount(CBody.STATEMENT);
  }

  public Iterator<CStatement> statements() {
    return this.children(CStatement.class, CBody.STATEMENT);
  }

  public List<CStatement> getStatements() {
    return this.getChildren(CStatement.class, CBody.STATEMENT);
  }

  public void addStatement(CStatement node) {
    this.addChild(CBody.STATEMENT, node);
  }

  public void insertStatement(CStatement prev, CStatement node) {
    this.insertChild(prev, CBody.STATEMENT, node);
  }

  public static CBody newInstance(SModel sm, boolean init) {
    return (CBody) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.CBody", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CBody newInstance(SModel sm) {
    return CBody.newInstance(sm, false);
  }
}
