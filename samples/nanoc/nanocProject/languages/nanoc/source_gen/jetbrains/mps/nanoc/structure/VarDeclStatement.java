package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VarDeclStatement extends CStatement {
  public static final String concept = "jetbrains.mps.nanoc.structure.VarDeclStatement";
  public static final String TYPE = "type";
  public static final String VAR_DECL = "varDecl";

  public VarDeclStatement(SNode node) {
    super(node);
  }

  public CType getType() {
    return (CType) this.getChild(CType.class, VarDeclStatement.TYPE);
  }

  public void setType(CType node) {
    super.setChild(VarDeclStatement.TYPE, node);
  }

  public int getVarDeclsCount() {
    return this.getChildCount(VarDeclStatement.VAR_DECL);
  }

  public Iterator<VarDecl> varDecls() {
    return this.children(VarDecl.class, VarDeclStatement.VAR_DECL);
  }

  public List<VarDecl> getVarDecls() {
    return this.getChildren(VarDecl.class, VarDeclStatement.VAR_DECL);
  }

  public void addVarDecl(VarDecl node) {
    this.addChild(VarDeclStatement.VAR_DECL, node);
  }

  public void insertVarDecl(VarDecl prev, VarDecl node) {
    this.insertChild(prev, VarDeclStatement.VAR_DECL, node);
  }

  public static VarDeclStatement newInstance(SModel sm, boolean init) {
    return (VarDeclStatement) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.VarDeclStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VarDeclStatement newInstance(SModel sm) {
    return VarDeclStatement.newInstance(sm, false);
  }
}
