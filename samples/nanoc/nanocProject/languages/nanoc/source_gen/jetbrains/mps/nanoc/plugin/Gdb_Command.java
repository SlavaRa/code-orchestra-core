package jetbrains.mps.nanoc.plugin;

/*Generated by MPS */

import java.io.File;
import com.intellij.execution.process.ProcessHandler;
import com.intellij.openapi.project.Project;
import com.intellij.execution.ExecutionException;
import jetbrains.mps.nanoc.debug.ProgramsLocationUtil;
import jetbrains.mps.execution.api.commands.OutputRedirector;
import jetbrains.mps.nanoc.debug.GdbProcessListener;

public class Gdb_Command {
  private File myGdbLocation;

  public Gdb_Command() {
  }

  public Gdb_Command setGdbLocation(File gdbLocation) {
    if (gdbLocation != null) {
      myGdbLocation = gdbLocation;
    }
    return this;
  }

  public ProcessHandler createProcess(File executable, Project project) throws ExecutionException {
    File gdbFile = new File(ProgramsLocationUtil.getGdbLocation());
    if (!(gdbFile.exists())) {
      throw new ExecutionException("Gdb is not found by location " + gdbFile);
    }
    ProcessHandler process = new Exec_Command().setWorkingDirectory(gdbFile.getParentFile()).setProgramParameters("-quiet --interpreter=mi").createProcess(gdbFile);
    return OutputRedirector.redirect(process, new GdbProcessListener(project, process, executable));
  }
}
