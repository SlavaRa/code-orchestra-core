package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CParenthesis extends CExpression {
  public static final String concept = "jetbrains.mps.nanoc.structure.CParenthesis";
  public static final String INNER_EXPRESSION = "innerExpression";

  public CParenthesis(SNode node) {
    super(node);
  }

  public CExpression getInnerExpression() {
    return (CExpression) this.getChild(CExpression.class, CParenthesis.INNER_EXPRESSION);
  }

  public void setInnerExpression(CExpression node) {
    super.setChild(CParenthesis.INNER_EXPRESSION, node);
  }

  public static CParenthesis newInstance(SModel sm, boolean init) {
    return (CParenthesis) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.CParenthesis", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CParenthesis newInstance(SModel sm) {
    return CParenthesis.newInstance(sm, false);
  }
}
