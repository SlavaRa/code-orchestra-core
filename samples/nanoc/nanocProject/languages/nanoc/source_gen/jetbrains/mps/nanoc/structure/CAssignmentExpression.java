package jetbrains.mps.nanoc.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CAssignmentExpression extends CExpression {
  public static final String concept = "jetbrains.mps.nanoc.structure.CAssignmentExpression";
  public static final String VALUE = "value";
  public static final String VARIABLE = "variable";

  public CAssignmentExpression(SNode node) {
    super(node);
  }

  public CExpression getValue() {
    return (CExpression) this.getChild(CExpression.class, CAssignmentExpression.VALUE);
  }

  public void setValue(CExpression node) {
    super.setChild(CAssignmentExpression.VALUE, node);
  }

  public VarRef getVariable() {
    return (VarRef) this.getChild(VarRef.class, CAssignmentExpression.VARIABLE);
  }

  public void setVariable(VarRef node) {
    super.setChild(CAssignmentExpression.VARIABLE, node);
  }

  public static CAssignmentExpression newInstance(SModel sm, boolean init) {
    return (CAssignmentExpression) SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.nanoc.structure.CAssignmentExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CAssignmentExpression newInstance(SModel sm) {
    return CAssignmentExpression.newInstance(sm, false);
  }
}
