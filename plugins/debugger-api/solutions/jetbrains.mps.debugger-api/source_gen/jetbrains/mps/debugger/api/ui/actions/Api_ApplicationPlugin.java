package jetbrains.mps.debugger.api.ui.actions;

/*Generated by MPS */

import jetbrains.mps.plugins.applicationplugins.BaseApplicationPlugin;
import com.intellij.openapi.extensions.PluginId;
import java.util.List;
import jetbrains.mps.workbench.action.BaseKeymapChanges;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.ArrayList;

public class Api_ApplicationPlugin extends BaseApplicationPlugin {
  private PluginId myId = PluginId.getId("jetbrains.mps.debugger.api");

  public Api_ApplicationPlugin() {
  }

  public PluginId getId() {
    return myId;
  }

  public void createGroups() {
    // actions w/o parameters 
    addAction(new EvaluateExpression_Action());
    addAction(new ExportThreads_Action());
    addAction(new Pause_Action());
    addAction(new Resume_Action());
    addAction(new StepInto_Action());
    addAction(new StepOut_Action());
    addAction(new StepOver_Action());
    addAction(new ToggleBreakpoint_Action());
    addAction(new ViewBreakpoints_Action());
    // groups 
    addGroup(new DebugRunMenu_ActionGroup());
    addGroup(new DebugTool_ActionGroup());
  }

  public void adjustInterfaceGroups() {
    insertInterfaceGroupIntoAnother("DebugMuteAction", DebugTool_ActionGroup.ID, DebugTool_ActionGroup.LABEL_ID_MuteAction);
    insertInterfaceGroupIntoAnother("DebugStopAction", DebugTool_ActionGroup.ID, DebugTool_ActionGroup.LABEL_ID_StopAction);
  }

  public void adjustRegularGroups() {
    insertGroupIntoAnother(DebugRunMenu_ActionGroup.ID, "RunMenu", null);
  }

  public List<BaseKeymapChanges> initKeymaps() {
    List<BaseKeymapChanges> res = ListSequence.fromList(new ArrayList<BaseKeymapChanges>());
    ListSequence.fromList(res).addElement(new Debugger_KeymapChanges());
    return res;
  }
}
