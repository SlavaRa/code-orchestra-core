package jetbrains.mps.debugger.java.ui.evaluation;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.debugger.java.evaluation.EvaluationProvider;
import jetbrains.mps.debugger.java.evaluation.model.AbstractEvaluationModel;
import jetbrains.mps.ide.dialogs.BaseDialog;

public class EvaluationDialog extends AbstractEvaluationDialog {
  public EvaluationDialog(final IOperationContext context, @NotNull EvaluationProvider provider, AbstractEvaluationModel evalModel) {
    super(context, provider, evalModel, "Evaluate");
  }

  @BaseDialog.Button(position = 1, name = "Watch", mnemonic = 'W', defaultButton = false)
  public void buttonWatch() {
    myProvider.addWatch(myEvaluationPanel.getEvaluationModel());
    dispose();
  }

  @BaseDialog.Button(position = 0, name = "Evaluate", mnemonic = 'E', defaultButton = true)
  public void buttonEvaluate() {
    myEvaluationPanel.evaluate();
  }

  @BaseDialog.Button(position = 2, name = "Close", mnemonic = 'C', defaultButton = false)
  public void buttonCancel() {
    dispose();
  }

  @Override
  public void dispose() {
    super.dispose();
  }
}
