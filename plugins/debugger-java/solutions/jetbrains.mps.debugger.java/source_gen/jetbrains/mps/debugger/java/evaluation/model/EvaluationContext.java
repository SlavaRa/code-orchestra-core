package jetbrains.mps.debugger.java.evaluation.model;

/*Generated by MPS */

import jetbrains.mps.debug.runtime.JavaUiState;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.reloading.IClassPathItem;
import jetbrains.mps.reloading.CompositeClassPathItem;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.SNode;
import java.util.Map;
import jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes;

public abstract class EvaluationContext {
  protected JavaUiState myUiState;

  public EvaluationContext(JavaUiState state) {
    myUiState = state;
  }

  @NotNull
  public IClassPathItem getClassPathItem() {
    return new CompositeClassPathItem();
  }

  @Nullable
  public abstract SNode getLocationNode();

  public JavaUiState getUiState() {
    return myUiState;
  }

  public void setUiState(JavaUiState uiState) {
    myUiState = uiState;
  }

  @NotNull
  public abstract Map<String, SNode> getVariables(_FunctionTypes._return_P1_E0<? extends SNode, ? super String> createClassifierType);

  @Nullable
  public abstract SNode getStaticContextType(_FunctionTypes._return_P1_E0<? extends SNode, ? super String> createClassifierType);

  @Nullable
  public abstract SNode getThisClassifierType(_FunctionTypes._return_P1_E0<? extends SNode, ? super String> createClassifierType);

  public abstract boolean isVariableVisible(String variableName, SNode variableType);

  public abstract boolean isThisTypeValid(SNode thisType);

  public abstract boolean isStaticContextTypeValid(SNode staticContextType);
}
