package jetbrains.mps.watching;

/*Generated by MPS */

import com.intellij.openapi.vfs.newvfs.events.VFileEvent;
import com.intellij.openapi.vfs.VirtualFile;
import com.intellij.openapi.vfs.VirtualFileSystem;

public class VFileEventDecorator extends VFileEvent {
  private final String myPath;
  private final VFileEvent myEvent;

  public VFileEventDecorator(VFileEvent event, String path) {
    super(event.getRequestor(), event.isFromRefresh());
    myEvent = event;
    myPath = path;
  }

  public VFileEvent undecorate() {
    return myEvent;
  }

  public String getPath() {
    return myPath;
  }

  public VirtualFile getFile() {
    return myEvent.getFile();
  }

  public VirtualFileSystem getFileSystem() {
    return myEvent.getFileSystem();
  }

  public boolean isValid() {
    return myEvent.isValid();
  }

  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VFileEventDecorator that = (VFileEventDecorator) o;
    if ((myEvent != null ?
      !(myEvent.equals(that.myEvent)) :
      that.myEvent != null
    )) {
      return false;
    }
    if ((myPath != null ?
      !(myPath.equals(that.myPath)) :
      that.myPath != null
    )) {
      return false;
    }
    return true;
  }

  public int hashCode() {
    int result = (myPath != null ?
      myPath.hashCode() :
      0
    );
    result = 31 * result + ((myEvent != null ?
      myEvent.hashCode() :
      0
    ));
    return result;
  }
}
