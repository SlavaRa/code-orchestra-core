package jetbrains.mps.vcs.actions;

/*Generated by MPS */

import jetbrains.mps.generator.generationTypes.IGenerationHandler;
import jetbrains.mps.ide.generator.OutputViewGenerationHandler;
import com.intellij.openapi.vcs.actions.VcsContext;
import java.util.List;
import jetbrains.mps.smodel.SModelDescriptor;
import jetbrains.mps.make.MakeSession;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.workbench.make.TextPreviewUtil;
import com.intellij.openapi.actionSystem.Presentation;

public class GenerateTextFromChangeListAction extends GenerateFromChangeListAction {
  public GenerateTextFromChangeListAction() {
  }

  protected IGenerationHandler getGenerationHandler() {
    return new OutputViewGenerationHandler();
  }

  protected String getWhatToGenerateName() {
    return "Text";
  }

  @Override
  protected void actionPerformed(VcsContext vcsContext) {
    List<SModelDescriptor> modelsToGenerate = getModelsToGenerate(vcsContext);
    if (modelsToGenerate.size() == 1) {
      super.actionPerformed(vcsContext);
    }
  }

  @Override
  protected void doPerformAction(MakeSession session, IOperationContext context, List<SModelDescriptor> modelsToGenerate) {
    TextPreviewUtil.previewModelText(session, context, modelsToGenerate.get(0));
  }

  @Override
  protected void update(VcsContext vcsContext, Presentation presentation) {
    List<SModelDescriptor> modelsToGenerate = getModelsToGenerate(vcsContext);
    if (modelsToGenerate.size() != 1) {
      enable(presentation, false);
      presentation.setText("Rebuild " + getWhatToGenerateName());
    } else {
      super.update(vcsContext, presentation);
    }
  }
}
