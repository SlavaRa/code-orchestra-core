package jetbrains.mps.vcs.diff.oldchanges;

/*Generated by MPS */

import jetbrains.mps.smodel.SNodeId;

@Deprecated
public class SubstituteNodeChange extends AddNodeChange {
  private SNodeId myOldChildId;

  @Deprecated
  public SubstituteNodeChange(String conceptFqName, SNodeId nodeId, String role, SNodeId parentId, SNodeId prevNode, String prevRole, SNodeId oldChildId) {
    super(conceptFqName, nodeId, role, parentId, prevNode, prevRole);
    myOldChildId = oldChildId;
  }

  public SNodeId getOldChildId() {
    return myOldChildId;
  }

  @Override
  public String toString() {
    return "substitute node " + getAffectedNodeId() + " in role " + getNodeRole() + " before " + getPreviousNode() + " old node " + myOldChildId;
  }

  @Override
  public OldChangeType getChangeType() {
    return OldChangeType.CHANGE;
  }
}
