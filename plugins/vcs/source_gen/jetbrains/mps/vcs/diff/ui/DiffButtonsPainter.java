package jetbrains.mps.vcs.diff.ui;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorComponent;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.vcs.diff.changes.ModelChange;
import jetbrains.mps.vcs.diff.changes.ChangeType;
import jetbrains.mps.ide.projectPane.Icons;
import java.util.Arrays;
import javax.swing.Icon;

public class DiffButtonsPainter extends ButtonsPainter {
  private RootDifferenceDialog myDialog;

  private DiffButtonsPainter(RootDifferenceDialog dialog, EditorComponent editorComponent, ChangeGroupBuilder changeGroupBuilder) {
    super(1, editorComponent, changeGroupBuilder);
    myDialog = dialog;
  }

  protected Iterable<FoldingAreaButton> createButtonsForChangeGroup(ChangeGroup changeGroup, int y) {
    FoldingAreaButton button = null;
    boolean allInsert = ListSequence.fromList(changeGroup.getChanges()).all(new IWhereFilter<ModelChange>() {
      public boolean accept(ModelChange c) {
        return c.getType() == ChangeType.ADD;
      }
    });
    if (isHighlightLeft()) {
      if (!(allInsert)) {
        button = new DiffButtonsPainter.MyButton(changeGroup, getX(0), y, "Replace", MIRRORED_APPLY_ICON);
      }
    } else {
      if (allInsert) {
        button = new DiffButtonsPainter.MyButton(changeGroup, getX(0), y, "Remove", Icons.EXCLUDE);
      }
    }
    if (button != null) {
      return Arrays.asList(button);
    } else {
      return null;
    }
  }

  public static DiffButtonsPainter addTo(RootDifferenceDialog dialog, DiffEditor diffEditor, ChangeGroupBuilder changeGroupBuilder, boolean inspector) {
    EditorComponent editorComponent = diffEditor.getEditorComponent(inspector);
    DiffButtonsPainter painter = new DiffButtonsPainter(dialog, editorComponent, changeGroupBuilder);
    editorComponent.getLeftEditorHighlighter().addFoldingAreaPainter(painter);
    return painter;
  }

  private class MyButton extends FoldingAreaButton {
    private MyButton(ChangeGroup changeGroup, int x, int y, String name, Icon icon) {
      super(changeGroup, x, y, name, icon);
    }

    public void performAction() {
      myDialog.rollbackChanges(getChangeGroup().getChanges());
    }
  }
}
